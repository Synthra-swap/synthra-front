{"version":3,"file":"static/js/543.db7ee8aa.chunk.js","mappings":"iZAAye,SAASA,EAAIC,EAAEC,EAAEC,GAAG,OAAOF,EAAEC,EAAED,EAAEE,EAAED,EAAEC,CAAC,CAAQ,MAAMC,UAAe,KAAK,WAAAC,CAAYC,EAASC,EAAUC,EAAUC,GAAMC,QAAQC,KAAKL,SAASA,EAASK,KAAKJ,UAAUA,EAAUI,KAAKH,UAAUA,EAAUG,KAAKF,KAAKA,EAAKE,KAAKC,UAAS,EAAGD,KAAKE,OAAO,EAAEF,KAAKG,IAAI,EAAEH,KAAKI,WAAU,EAAGJ,KAAKK,OAAO,IAAIC,WAAWX,GAAUK,KAAKO,MAAK,QAAWP,KAAKK,OAAO,CAAC,MAAAG,CAAOC,IAAM,QAAQT,MAAM,MAAMO,KAAKA,EAAKF,OAAOA,EAAOV,SAASA,GAAUK,KAAKU,GAAKD,GAAK,QAAQA,IAAOP,OAAO,IAAI,IAAIC,EAAI,EAAEA,EAAIO,GAAK,CAAC,MAAMC,EAAKC,KAAKC,IAAIlB,EAASK,KAAKG,IAAIO,EAAIP,GAAK,GAAGQ,IAAOhB,EAASU,EAAOS,IAAIL,EAAKM,SAASZ,EAAIA,EAAIQ,GAAMX,KAAKG,KAAKH,KAAKG,KAAKQ,EAAKR,GAAKQ,EAAKX,KAAKG,MAAMR,IAAWK,KAAKgB,QAAQT,EAAK,GAAGP,KAAKG,IAAI,OAAO,CAAC,MAAMc,GAAS,QAAWR,GAAM,KAAKd,GAAUe,EAAIP,EAAIA,GAAKR,EAASK,KAAKgB,QAAQC,EAASd,EAAI,CAAC,CAAC,OAAOH,KAAKE,QAAQO,EAAKP,OAAOF,KAAKkB,aAAalB,IAAI,CAAC,UAAAmB,CAAWC,IAAK,QAAQpB,OAAM,QAAQoB,EAAIpB,MAAMA,KAAKC,UAAS,EAAG,MAAMI,OAAOA,EAAOE,KAAKA,EAAKZ,SAASA,EAASG,KAAKA,GAAME,KAAK,IAAIG,IAAIA,GAAKH,KAAKK,EAAOF,KAAO,IAAIH,KAAKK,OAAOU,SAASZ,GAAKkB,KAAK,GAAGrB,KAAKH,UAAUF,EAASQ,IAAMH,KAAKgB,QAAQT,EAAK,GAAGJ,EAAI,GAAG,IAAI,IAAImB,EAAEnB,EAAImB,EAAE3B,EAAS2B,IAAIjB,EAAOiB,GAAG,GAAn/C,SAAsBf,EAAKgB,EAAWC,EAAM1B,GAAM,GAAG,mBAAmBS,EAAKkB,aAAa,OAAOlB,EAAKkB,aAAaF,EAAWC,EAAM1B,GAAM,MAAM4B,EAAKC,OAAO,IAAIC,EAASD,OAAO,YAAYE,EAAGC,OAAON,GAAOE,EAAKE,GAAUG,EAAGD,OAAON,EAAMI,GAAUI,EAAElC,EAAK,EAAE,EAAEmC,EAAEnC,EAAK,EAAE,EAAES,EAAK2B,UAAUX,EAAWS,EAAEH,EAAG/B,GAAMS,EAAK2B,UAAUX,EAAWU,EAAEF,EAAGjC,EAAK,EAAgqC2B,CAAalB,EAAKZ,EAAS,EAAEgC,OAAO,EAAE3B,KAAKE,QAAQJ,GAAME,KAAKgB,QAAQT,EAAK,GAAG,MAAM4B,GAAM,QAAWf,GAAKV,EAAIV,KAAKJ,UAAU,GAAGc,EAAI,EAAE,MAAM,IAAI0B,MAAM,+CAA+C,MAAMC,EAAO3B,EAAI,EAAE4B,EAAMtC,KAAKuC,MAAM,GAAGF,EAAOC,EAAMpC,OAAO,MAAM,IAAIkC,MAAM,sCAAsC,IAAI,IAAId,EAAE,EAAEA,EAAEe,EAAOf,IAAIa,EAAMD,UAAU,EAAEZ,EAAEgB,EAAMhB,GAAGxB,EAAK,CAAC,MAAA0C,GAAS,MAAMnC,OAAOA,EAAOT,UAAUA,GAAWI,KAAKA,KAAKmB,WAAWd,GAAQ,MAAMoC,EAAIpC,EAAOqC,MAAM,EAAE9C,GAAW,OAAOI,KAAK2C,UAAUF,CAAG,CAAC,UAAAG,CAAWC,GAAIA,IAAKA,EAAG,IAAI7C,KAAKN,aAAamD,EAAG/B,OAAOd,KAAKuC,OAAO,MAAM5C,SAASA,EAASU,OAAOA,EAAOH,OAAOA,EAAOD,SAASA,EAASG,UAAUA,EAAUD,IAAIA,GAAKH,KAAK,OAAO6C,EAAG3C,OAAOA,EAAO2C,EAAG1C,IAAIA,EAAI0C,EAAG5C,SAASA,EAAS4C,EAAGzC,UAAUA,EAAUF,EAAOP,GAAUkD,EAAGxC,OAAOS,IAAIT,GAAQwC,CAAE,ECAtyE,MAAMC,EAAS,IAAIC,YAAY,CAAC,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,aAAaC,EAAU,IAAID,YAAY,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,aAAaE,EAAS,IAAIF,YAAY,IAAW,MAAMG,UAAezD,EAAO,WAAAC,GAAcK,MAAM,GAAG,GAAG,GAAE,GAAIC,KAAKmD,EAAE,EAAEH,EAAU,GAAGhD,KAAKoD,EAAE,EAAEJ,EAAU,GAAGhD,KAAKqD,EAAE,EAAEL,EAAU,GAAGhD,KAAKsD,EAAE,EAAEN,EAAU,GAAGhD,KAAKuD,EAAE,EAAEP,EAAU,GAAGhD,KAAKwD,EAAE,EAAER,EAAU,GAAGhD,KAAKyD,EAAE,EAAET,EAAU,GAAGhD,KAAK0D,EAAE,EAAEV,EAAU,EAAE,CAAC,GAAAT,GAAM,MAAMY,EAAEA,EAAEC,EAAEA,EAAEC,EAAEA,EAAEC,EAAEA,EAAEC,EAAEA,EAAEC,EAAEA,EAAEC,EAAEA,EAAEC,EAAEA,GAAG1D,KAAK,MAAM,CAACmD,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAE,CAAC,GAAA5C,CAAIqC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,GAAG1D,KAAKmD,EAAE,EAAEA,EAAEnD,KAAKoD,EAAE,EAAEA,EAAEpD,KAAKqD,EAAE,EAAEA,EAAErD,KAAKsD,EAAE,EAAEA,EAAEtD,KAAKuD,EAAE,EAAEA,EAAEvD,KAAKwD,EAAE,EAAEA,EAAExD,KAAKyD,EAAE,EAAEA,EAAEzD,KAAK0D,EAAE,EAAEA,CAAC,CAAC,OAAA1C,CAAQT,EAAKoD,GAAQ,IAAI,IAAIrC,EAAE,EAAEA,EAAE,GAAGA,IAAIqC,GAAQ,EAAEV,EAAS3B,GAAGf,EAAKqD,UAAUD,GAAO,GAAI,IAAI,IAAIrC,EAAE,GAAGA,EAAE,GAAGA,IAAI,CAAC,MAAMuC,EAAIZ,EAAS3B,EAAE,IAAIwC,EAAGb,EAAS3B,EAAE,GAAGyC,GAAG,QAAKF,EAAI,IAAG,QAAKA,EAAI,IAAIA,IAAM,EAAEG,GAAG,QAAKF,EAAG,KAAI,QAAKA,EAAG,IAAIA,IAAK,GAAGb,EAAS3B,GAAG0C,EAAGf,EAAS3B,EAAE,GAAGyC,EAAGd,EAAS3B,EAAE,IAAI,CAAC,CAAC,IAAI6B,EAAEA,EAAEC,EAAEA,EAAEC,EAAEA,EAAEC,EAAEA,EAAEC,EAAEA,EAAEC,EAAEA,EAAEC,EAAEA,EAAEC,EAAEA,GAAG1D,KAAK,IAAI,IAAIsB,EAAE,EAAEA,EAAE,GAAGA,IAAI,CAAC,MAAM2C,EAAGP,IAAG,QAAKH,EAAE,IAAG,QAAKA,EAAE,KAAI,QAAKA,EAAE,ODA/wCjE,ECAwxCiE,GAAEC,GDAvwClE,ECAywCmE,GAAGX,EAASxB,GAAG2B,EAAS3B,GAAG,EAAE4C,IAAI,QAAKf,EAAE,IAAG,QAAKA,EAAE,KAAI,QAAKA,EAAE,KAAK9D,EAAI8D,EAAEC,EAAEC,GAAG,EAAEK,EAAED,EAAEA,EAAED,EAAEA,EAAED,EAAEA,EAAED,EAAEW,EAAG,EAAEX,EAAED,EAAEA,EAAED,EAAEA,EAAED,EAAEA,EAAEc,EAAGC,EAAG,CAAC,CDAl6C,IAAa5E,ECAs5C6D,EAAEA,EAAEnD,KAAKmD,EAAE,EAAEC,EAAEA,EAAEpD,KAAKoD,EAAE,EAAEC,EAAEA,EAAErD,KAAKqD,EAAE,EAAEC,EAAEA,EAAEtD,KAAKsD,EAAE,EAAEC,EAAEA,EAAEvD,KAAKuD,EAAE,EAAEC,EAAEA,EAAExD,KAAKwD,EAAE,EAAEC,EAAEA,EAAEzD,KAAKyD,EAAE,EAAEC,EAAEA,EAAE1D,KAAK0D,EAAE,EAAE1D,KAAKc,IAAIqC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAE,CAAC,UAAAxC,GAAa+B,EAAS5B,KAAK,EAAE,CAAC,OAAAsB,GAAU3C,KAAKc,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGd,KAAKK,OAAOgB,KAAK,EAAE,EAAE,MAAM8C,UAAejB,EAAO,WAAAxD,GAAcK,QAAQC,KAAKmD,GAAG,WAAWnD,KAAKoD,EAAE,UAAUpD,KAAKqD,EAAE,UAAUrD,KAAKsD,GAAG,UAAUtD,KAAKuD,GAAG,QAAQvD,KAAKwD,EAAE,WAAWxD,KAAKyD,EAAE,WAAWzD,KAAK0D,GAAG,WAAW1D,KAAKJ,UAAU,EAAE,EAAS,MAAMwE,GAAO,SAAgB,IAAK,IAAIlB,KAA6B,SAAgB,IAAK,IAAIiB,ICArxE,MAAME,UAAa,KAAK,WAAA3E,CAAY4E,EAAKC,GAAMxE,QAAQC,KAAKC,UAAS,EAAGD,KAAKI,WAAU,GAAG,QAAMkE,GAAM,MAAME,GAAI,QAAQD,GAAM,GAAGvE,KAAKyE,MAAMH,EAAKI,SAAS,mBAAmB1E,KAAKyE,MAAMjE,OAAO,MAAM,IAAI4B,MAAM,uDAAuDpC,KAAKL,SAASK,KAAKyE,MAAM9E,SAASK,KAAKJ,UAAUI,KAAKyE,MAAM7E,UAAU,MAAMD,EAASK,KAAKL,SAASgF,EAAI,IAAIrE,WAAWX,GAAUgF,EAAI7D,IAAI0D,EAAItE,OAAOP,EAAS2E,EAAKI,SAASlE,OAAOgE,GAAKhC,SAASgC,GAAK,IAAI,IAAIlD,EAAE,EAAEA,EAAEqD,EAAIzE,OAAOoB,IAAIqD,EAAIrD,IAAI,GAAGtB,KAAKyE,MAAMjE,OAAOmE,GAAK3E,KAAK4E,MAAMN,EAAKI,SAAS,IAAI,IAAIpD,EAAE,EAAEA,EAAEqD,EAAIzE,OAAOoB,IAAIqD,EAAIrD,IAAI,IAAItB,KAAK4E,MAAMpE,OAAOmE,GAAKA,EAAItD,KAAK,EAAE,CAAC,MAAAb,CAAOqE,GAAK,OAAO,QAAQ7E,MAAMA,KAAKyE,MAAMjE,OAAOqE,GAAK7E,IAAI,CAAC,UAAAmB,CAAWC,IAAK,QAAQpB,OAAM,QAAOoB,EAAIpB,KAAKJ,WAAWI,KAAKC,UAAS,EAAGD,KAAKyE,MAAMtD,WAAWC,GAAKpB,KAAK4E,MAAMpE,OAAOY,GAAKpB,KAAK4E,MAAMzD,WAAWC,GAAKpB,KAAK2C,SAAS,CAAC,MAAAH,GAAS,MAAMpB,EAAI,IAAId,WAAWN,KAAK4E,MAAMhF,WAAW,OAAOI,KAAKmB,WAAWC,GAAKA,CAAG,CAAC,UAAAwB,CAAWC,GAAIA,IAAKA,EAAGiC,OAAOJ,OAAOI,OAAOC,eAAe/E,MAAM,CAAC,IAAI,MAAM4E,MAAMA,EAAMH,MAAMA,EAAMxE,SAASA,EAASG,UAAUA,EAAUT,SAASA,EAASC,UAAUA,GAAWI,KAAK,OAAO6C,EAAG5C,SAASA,EAAS4C,EAAGzC,UAAUA,EAAUyC,EAAGlD,SAASA,EAASkD,EAAGjD,UAAUA,EAAUiD,EAAG+B,MAAMA,EAAMhC,WAAWC,EAAG+B,OAAO/B,EAAG4B,MAAMA,EAAM7B,WAAWC,EAAG4B,OAAO5B,CAAE,CAAC,OAAAF,GAAU3C,KAAKI,WAAU,EAAGJ,KAAK4E,MAAMjC,UAAU3C,KAAKyE,MAAM9B,SAAS,EAAS,MAAMqC,EAAK,CAACV,EAAKE,EAAIS,IAAU,IAAIZ,EAAKC,EAAKE,GAAKhE,OAAOyE,GAASzC,SAASwC,EAAKN,OAAO,CAACJ,EAAKE,IAAM,IAAIH,EAAKC,EAAKE,GCAniD,MAAMU,EAAIvD,OAAO,GAAGwD,EAAIxD,OAAO,GAAGyD,EAAIzD,OAAO,GAAU,SAAS0D,EAAQ/F,GAAG,OAAOA,aAAagB,YAAYgF,YAAYC,OAAOjG,IAAI,eAAeA,EAAEI,YAAY8F,IAAI,CAAQ,SAASC,EAAOC,GAAM,IAAIL,EAAQK,GAAM,MAAM,IAAItD,MAAM,sBAAsB,CAAQ,SAASuD,EAAMC,EAAMpE,GAAO,GAAG,kBAAkBA,EAAM,MAAM,IAAIY,MAAMwD,EAAM,0BAA0BpE,EAAM,CAAC,MAAMqE,EAAMC,MAAMC,KAAK,CAAC7F,OAAO,MAAK,CAAE8F,EAAE1E,IAAIA,EAAE2E,SAAS,IAAIC,SAAS,EAAE,OAAc,SAASC,EAAWC,GAAOX,EAAOW,GAAO,IAAIC,EAAI,GAAG,IAAI,IAAI/E,EAAE,EAAEA,EAAE8E,EAAMlG,OAAOoB,IAAI+E,GAAKR,EAAMO,EAAM9E,IAAI,OAAO+E,CAAG,CAAQ,SAASC,EAAoBC,GAAK,MAAMF,EAAIE,EAAIN,SAAS,IAAI,OAAO,EAAEI,EAAInG,OAAO,IAAImG,EAAIA,CAAG,CAAQ,SAASG,EAAYH,GAAK,GAAG,iBAAiBA,EAAI,MAAM,IAAIjE,MAAM,mCAAmCiE,GAAK,MAAM,KAAKA,EAAInB,EAAIvD,OAAO,KAAK0E,EAAI,CAAC,MAAMI,EAAO,CAACC,GAAG,GAAGC,GAAG,GAAGxD,EAAE,GAAGK,EAAE,GAAGlE,EAAE,GAAGsH,EAAE,KAAK,SAASC,EAAcC,GAAI,OAAOA,GAAIL,EAAOC,IAAII,GAAIL,EAAOE,GAAGG,EAAGL,EAAOC,GAAGI,GAAIL,EAAOtD,GAAG2D,GAAIL,EAAOjD,EAAEsD,GAAIL,EAAOtD,EAAE,IAAI2D,GAAIL,EAAOnH,GAAGwH,GAAIL,EAAOG,EAAEE,GAAIL,EAAOnH,EAAE,SAAI,CAAM,CAAQ,SAASyH,EAAWV,GAAK,GAAG,iBAAiBA,EAAI,MAAM,IAAIjE,MAAM,mCAAmCiE,GAAK,MAAMW,EAAGX,EAAInG,OAAO+G,EAAGD,EAAG,EAAE,GAAGA,EAAG,EAAE,MAAM,IAAI5E,MAAM,mDAAmD4E,GAAI,MAAME,EAAM,IAAI5G,WAAW2G,GAAI,IAAI,IAAIE,EAAG,EAAEC,EAAG,EAAED,EAAGF,EAAGE,IAAKC,GAAI,EAAE,CAAC,MAAMC,EAAGR,EAAcR,EAAIiB,WAAWF,IAAKG,EAAGV,EAAcR,EAAIiB,WAAWF,EAAG,IAAI,QAAG,IAASC,QAAI,IAASE,EAAG,CAAC,MAAMC,EAAKnB,EAAIe,GAAIf,EAAIe,EAAG,GAAG,MAAM,IAAIhF,MAAM,+CAA+CoF,EAAK,cAAcJ,EAAG,CAACF,EAAMC,GAAI,GAAGE,EAAGE,CAAE,CAAC,OAAOL,CAAK,CAAQ,SAAS,EAAgBd,GAAO,OAAOI,EAAYL,EAAWC,GAAO,CAAQ,SAAS,EAAgBA,GAAO,OAAOX,EAAOW,GAAOI,EAAYL,EAAW7F,WAAWyF,KAAKK,GAAOqB,WAAW,CAAQ,SAASC,EAAgBC,EAAEjH,GAAK,OAAOqG,EAAWY,EAAE1B,SAAS,IAAIC,SAAS,EAAExF,EAAI,KAAK,CAAQ,SAASkH,EAAgBD,EAAEjH,GAAK,OAAOgH,EAAgBC,EAAEjH,GAAK+G,SAAS,CAAwF,SAAS,EAAY7B,EAAMS,EAAIwB,GAAgB,IAAIpF,EAAI,GAAG,iBAAiB4D,EAAI,IAAI5D,EAAIsE,EAAWV,EAAI,CAAC,MAAMyB,GAAG,MAAM,IAAI1F,MAAMwD,EAAM,6CAA6CkC,EAAE,KAAK,CAAC,IAAIzC,EAAQgB,GAAK,MAAM,IAAIjE,MAAMwD,EAAM,qCAAqCnD,EAAInC,WAAWyF,KAAKM,EAAI,CAAC,MAAM3F,EAAI+B,EAAIvC,OAAO,GAAG,iBAAiB2H,GAAgBnH,IAAMmH,EAAe,MAAM,IAAIzF,MAAMwD,EAAM,cAAciC,EAAe,kBAAkBnH,GAAK,OAAO+B,CAAG,CAAQ,SAASsF,IAAc,IAAIC,EAAI,EAAE,IAAI,IAAI1G,EAAE,EAAEA,EAAE2G,UAAU/H,OAAOoB,IAAI,CAAC,MAAMhC,EAAEgC,EAAE,GAAG2G,UAAU/H,QAAQoB,OAAE,EAAO2G,UAAU3G,GAAGmE,EAAOnG,GAAG0I,GAAK1I,EAAEY,MAAM,CAAC,MAAMuC,EAAI,IAAInC,WAAW0H,GAAK,IAAI,IAAI1G,EAAE,EAAEqD,EAAI,EAAErD,EAAE2G,UAAU/H,OAAOoB,IAAI,CAAC,MAAMhC,EAAEgC,EAAE,GAAG2G,UAAU/H,QAAQoB,OAAE,EAAO2G,UAAU3G,GAAGmB,EAAI3B,IAAIxB,EAAEqF,GAAKA,GAAKrF,EAAEY,MAAM,CAAC,OAAOuC,CAAG,CAA8I,SAASyF,EAAYC,GAAK,GAAG,iBAAiBA,EAAI,MAAM,IAAI/F,MAAM,mBAAmB,OAAO,IAAI9B,YAAW,IAAK8H,aAAaC,OAAOF,GAAK,CAAC,MAAMG,EAASX,GAAG,iBAAiBA,GAAGzC,GAAKyC,EAAS,SAASY,EAAQZ,EAAE9G,EAAI2H,GAAK,OAAOF,EAASX,IAAIW,EAASzH,IAAMyH,EAASE,IAAM3H,GAAK8G,GAAGA,EAAEa,CAAG,CAAQ,SAASC,EAAS7C,EAAM+B,EAAE9G,EAAI2H,GAAK,IAAID,EAAQZ,EAAE9G,EAAI2H,GAAK,MAAM,IAAIpG,MAAM,kBAAkBwD,EAAM,KAAK/E,EAAI,WAAW2H,EAAI,SAASb,EAAE,CAAQ,SAASe,EAAOf,GAAG,IAAIjH,EAAI,IAAIA,EAAI,EAAEiH,EAAEzC,EAAIyC,IAAIxC,EAAIzE,GAAK,GAAG,OAAOA,CAAG,CAA0I,MAAMiI,EAAQhB,IAAIvC,GAAKzD,OAAOgG,EAAE,IAAIxC,EAAUyD,EAAInI,GAAM,IAAIH,WAAWG,GAAMoI,EAAKC,GAAKxI,WAAWyF,KAAK+C,GAAY,SAASC,EAAeC,EAAQC,EAASC,GAAQ,GAAG,iBAAiBF,GAASA,EAAQ,EAAE,MAAM,IAAI5G,MAAM,4BAA4B,GAAG,iBAAiB6G,GAAUA,EAAS,EAAE,MAAM,IAAI7G,MAAM,6BAA6B,GAAG,mBAAmB8G,EAAO,MAAM,IAAI9G,MAAM,6BAA6B,IAAI+G,EAAEP,EAAII,GAASI,EAAER,EAAII,GAAS1H,EAAE,EAAE,MAAM+H,EAAM,KAAKF,EAAE9H,KAAK,GAAG+H,EAAE/H,KAAK,GAAGC,EAAE,GAAGU,EAAE,WAAW,IAAI,IAAIsH,EAAKrB,UAAU/H,OAAOX,EAAE,IAAIuG,MAAMwD,GAAM/E,EAAK,EAAEA,EAAK+E,EAAK/E,IAAOhF,EAAEgF,GAAM0D,UAAU1D,GAAM,OAAO2E,EAAOE,EAAED,KAAK5J,EAAE,EAAEgK,EAAO,WAAW,IAAIC,EAAKvB,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,GAAGA,UAAU,GAAGW,IAAMQ,EAAEpH,EAAE6G,EAAK,CAAC,IAAIW,GAAML,EAAEnH,IAAI,IAAIwH,EAAKtJ,SAASkJ,EAAEpH,EAAE6G,EAAK,CAAC,IAAIW,GAAML,EAAEnH,IAAI,EAAEyH,EAAI,KAAK,GAAGnI,KAAK,IAAI,MAAM,IAAIc,MAAM,2BAA2B,IAAI1B,EAAI,EAAE,MAAMU,EAAI,GAAG,KAAKV,EAAIuI,GAAU,CAACE,EAAEnH,IAAI,MAAM0H,EAAGP,EAAEzG,QAAQtB,EAAIuI,KAAKD,GAAIhJ,GAAKyI,EAAEjJ,MAAM,CAAC,OAAO6H,KAAe3G,EAAG,EAAG,MAAM,CAACoI,EAAKI,KAAQ,IAAInH,EAAI,IAAI4G,IAAQE,EAAOC,KAAQ/G,EAAImH,EAAKH,OAASF,IAAS,OAAOF,IAAQ5G,EAAI,CAAC,MAAMoH,EAAa,CAACC,OAAOC,GAAK,iBAAiBA,EAAIC,SAASD,GAAK,mBAAmBA,EAAIE,QAAQF,GAAK,kBAAkBA,EAAIG,OAAOH,GAAK,iBAAiBA,EAAII,mBAAmBJ,GAAK,iBAAiBA,GAAK1E,EAAQ0E,GAAKK,cAAcL,GAAKjI,OAAOsI,cAAcL,GAAK7C,MAAM6C,GAAKjE,MAAMuE,QAAQN,GAAKO,MAAM,CAACP,EAAIQ,IAASA,EAAOC,GAAGC,QAAQV,GAAKzF,KAAKyF,GAAK,mBAAmBA,GAAKjI,OAAOsI,cAAcL,EAAInK,YAAmB,SAAS8K,EAAeH,EAAOI,GAAY,IAAIC,EAAc3C,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,GAAGA,UAAU,GAAG,CAAC,EAAE,MAAM4C,EAAW,CAACC,EAAUC,EAAKC,KAAc,MAAMC,EAASpB,EAAakB,GAAM,GAAG,mBAAmBE,EAAS,MAAM,IAAI7I,MAAM,8BAA8B,MAAM2H,EAAIQ,EAAOO,GAAW,KAAKE,QAAY,IAASjB,GAAKkB,EAASlB,EAAIQ,IAAS,MAAM,IAAInI,MAAM,SAAS8I,OAAOJ,GAAW,yBAAyBC,EAAK,SAAShB,EAAG,EAAG,IAAI,MAAMe,EAAUC,KAAQjG,OAAOqG,QAAQR,GAAYE,EAAWC,EAAUC,GAAK,GAAI,IAAI,MAAMD,EAAUC,KAAQjG,OAAOqG,QAAQP,GAAeC,EAAWC,EAAUC,GAAK,GAAI,OAAOR,CAAM,CAA6E,SAASa,EAASC,GAAI,MAAMC,EAAI,IAAIC,QAAQ,OAAO,SAASC,GAAK,MAAMzB,EAAIuB,EAAI/I,IAAIiJ,GAAK,QAAG,IAASzB,EAAI,OAAOA,EAAI,IAAI,IAAI0B,EAAMxD,UAAU/H,OAAOwL,EAAK,IAAI5F,MAAM2F,EAAM,EAAEA,EAAM,EAAE,GAAGE,EAAM,EAAEA,EAAMF,EAAME,IAAQD,EAAKC,EAAM,GAAG1D,UAAU0D,GAAO,MAAMC,EAASP,EAAGG,KAAOE,GAAM,OAAOJ,EAAIxK,IAAI0K,EAAII,GAAUA,CAAQ,CAAC,CCAp0L,MAAM,EAAIjK,OAAO,GAAG,EAAIA,OAAO,GAAG,EAAIA,OAAO,GAAGkK,EAAIlK,OAAO,GAAGmK,EAAInK,OAAO,GAAGoK,EAAIpK,OAAO,GAAGqK,EAAIrK,OAAO,GAAOA,OAAO,GAAQA,OAAO,IAAW,SAASsK,GAAI3M,EAAEC,GAAG,MAAM2M,EAAO5M,EAAEC,EAAE,OAAO2M,GAAQ,EAAIA,EAAO3M,EAAE2M,CAAM,CAAQ,SAASC,GAAI5F,EAAI6F,EAAMC,GAAQ,GAAGD,EAAM,EAAI,MAAM,IAAIhK,MAAM,2CAA2C,GAAGiK,GAAQ,EAAI,MAAM,IAAIjK,MAAM,mBAAmB,GAAGiK,IAAS,EAAI,OAAO,EAAI,IAAI5J,EAAI,EAAI,KAAK2J,EAAM,GAAKA,EAAM,IAAM3J,EAAIA,EAAI8D,EAAI8F,GAAQ9F,EAAIA,EAAIA,EAAI8F,EAAOD,IAAQ,EAAI,OAAO3J,CAAG,CAAQ,SAAS6J,GAAKC,EAAEH,EAAMC,GAAQ,IAAI5J,EAAI8J,EAAE,KAAKH,KAAS,GAAK3J,GAAKA,EAAIA,GAAK4J,EAAO,OAAO5J,CAAG,CAAQ,SAAS+J,GAAOC,EAAOJ,GAAQ,GAAGI,IAAS,EAAI,MAAM,IAAIrK,MAAM,oCAAoC,GAAGiK,GAAQ,EAAI,MAAM,IAAIjK,MAAM,0CAA0CiK,GAAQ,IAAI/M,EAAE2M,GAAIQ,EAAOJ,GAAQ9M,EAAE8M,EAAOE,EAAE,EAAIG,EAAE,EAAIC,EAAE,EAAIxD,EAAE,EAAI,KAAK7J,IAAI,GAAK,CAAC,MAAMsN,EAAErN,EAAED,EAAEuN,EAAEtN,EAAED,EAAEwN,EAAEP,EAAEI,EAAEC,EAAEjF,EAAE+E,EAAEvD,EAAEyD,EAAErN,EAAED,EAAEA,EAAEuN,EAAEN,EAAEI,EAAED,EAAEvD,EAAEwD,EAAEG,EAAE3D,EAAExB,CAAC,CAAC,GAAGpI,IAAI,EAAI,MAAM,IAAI6C,MAAM,0BAA0B,OAAO6J,GAAIM,EAAEF,EAAO,CAA+zB,SAASU,GAAOC,GAAG,GAAGA,EAAElB,IAAMD,EAAI,CAAC,MAAMoB,GAAQD,EAAE,GAAKlB,EAAI,OAAO,SAAStB,EAAG7C,GAAG,MAAMuF,EAAK1C,EAAG2B,IAAIxE,EAAEsF,GAAQ,IAAIzC,EAAG2C,IAAI3C,EAAG4C,IAAIF,GAAMvF,GAAG,MAAM,IAAIvF,MAAM,2BAA2B,OAAO8K,CAAI,CAAC,CAAC,GAAGF,EAAEhB,IAAMD,EAAI,CAAC,MAAMsB,GAAIL,EAAEjB,GAAKC,EAAI,OAAO,SAASxB,EAAG7C,GAAG,MAAMJ,EAAGiD,EAAG8C,IAAI3F,EAAE,GAAKwB,EAAEqB,EAAG2B,IAAI5E,EAAG8F,GAAIE,EAAG/C,EAAG8C,IAAI3F,EAAEwB,GAAG7H,EAAEkJ,EAAG8C,IAAI9C,EAAG8C,IAAIC,EAAG,GAAKpE,GAAG+D,EAAK1C,EAAG8C,IAAIC,EAAG/C,EAAGgD,IAAIlM,EAAEkJ,EAAGiD,MAAM,IAAIjD,EAAG2C,IAAI3C,EAAG4C,IAAIF,GAAMvF,GAAG,MAAM,IAAIvF,MAAM,2BAA2B,OAAO8K,CAAI,CAAC,CAAC,OAAxvC,SAAuBF,GAAG,MAAMU,GAAWV,EAAE,GAAK,EAAI,IAAIW,EAAEC,EAAEC,EAAE,IAAIF,EAAEX,EAAE,EAAIY,EAAE,EAAED,EAAE,IAAM,EAAIA,GAAG,EAAIC,KAAK,IAAIC,EAAE,EAAIA,EAAEb,GAAGb,GAAI0B,EAAEH,EAAUV,KAAKA,EAAE,EAAIa,IAAI,GAAGA,EAAE,IAAI,MAAM,IAAIzL,MAAM,+CAA+C,GAAG,IAAIwL,EAAE,CAAC,MAAMX,GAAQD,EAAE,GAAKlB,EAAI,OAAO,SAAStB,EAAG7C,GAAG,MAAMuF,EAAK1C,EAAG2B,IAAIxE,EAAEsF,GAAQ,IAAIzC,EAAG2C,IAAI3C,EAAG4C,IAAIF,GAAMvF,GAAG,MAAM,IAAIvF,MAAM,2BAA2B,OAAO8K,CAAI,CAAC,CAAC,MAAMY,GAAQH,EAAE,GAAK,EAAI,OAAO,SAASnD,EAAG7C,GAAG,GAAG6C,EAAG2B,IAAIxE,EAAE+F,KAAalD,EAAGuD,IAAIvD,EAAGiD,KAAK,MAAM,IAAIrL,MAAM,2BAA2B,IAAIyK,EAAEe,EAAEI,EAAExD,EAAG2B,IAAI3B,EAAG8C,IAAI9C,EAAGiD,IAAII,GAAGF,GAAGpB,EAAE/B,EAAG2B,IAAIxE,EAAEmG,GAAQvO,EAAEiL,EAAG2B,IAAIxE,EAAEgG,GAAG,MAAMnD,EAAG2C,IAAI5N,EAAEiL,EAAGiD,MAAM,CAAC,GAAGjD,EAAG2C,IAAI5N,EAAEiL,EAAGyD,MAAM,OAAOzD,EAAGyD,KAAK,IAAInB,EAAE,EAAE,IAAI,IAAIoB,EAAG1D,EAAG4C,IAAI7N,GAAGuN,EAAED,IAAIrC,EAAG2C,IAAIe,EAAG1D,EAAGiD,KAAKX,IAAIoB,EAAG1D,EAAG4C,IAAIc,GAAI,MAAMC,EAAG3D,EAAG2B,IAAI6B,EAAE,GAAKrM,OAAOkL,EAAEC,EAAE,IAAIkB,EAAExD,EAAG4C,IAAIe,GAAI5B,EAAE/B,EAAG8C,IAAIf,EAAE4B,GAAI5O,EAAEiL,EAAG8C,IAAI/N,EAAEyO,GAAGnB,EAAEC,CAAC,CAAC,OAAOP,CAAC,CAAC,CAAgd6B,CAAcpB,EAAE,CAAQ,MAAmEqB,GAAa,CAAC,SAAS,UAAU,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,QAAe,SAASC,GAAchE,GAAwJ,OAAOI,EAAeJ,EAA5J+D,GAAaE,QAAO,CAAEjD,EAAIvB,KAAOuB,EAAIvB,GAAK,WAAWuB,IAAM,CAACkD,MAAM,SAASC,KAAK,SAASC,MAAM,gBAAgBC,KAAK,kBAAmD,CAAg5B,SAASC,GAAQjH,EAAEkH,GAAY,MAAMC,OAAY,IAASD,EAAWA,EAAWlH,EAAE1B,SAAS,GAAG/F,OAAO,MAAM,CAAC2O,WAAWC,EAAYC,YAAYnO,KAAKoO,KAAKF,EAAY,GAAG,CAAQ,SAASG,GAAMT,EAAM9F,GAAQ,IAAI5I,EAAKmI,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,IAAIA,UAAU,GAAGiH,EAAMjH,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,GAAGA,UAAU,GAAG,CAAC,EAAE,GAAGuG,GAAO,EAAI,MAAM,IAAIpM,MAAM,0CAA0CoM,GAAO,MAAMK,WAAWF,EAAKI,YAAYL,GAAOE,GAAQJ,EAAM9F,GAAQ,GAAGgG,EAAM,KAAK,MAAM,IAAItM,MAAM,kDAAkD,IAAI+M,EAAM,MAAMvI,EAAE9B,OAAOsK,OAAO,CAACZ,MAAMA,EAAM1O,KAAKA,EAAK6O,KAAKA,EAAKD,MAAMA,EAAMD,KAAK9F,EAAQgG,GAAMV,KAAK,EAAIR,IAAI,EAAI/I,OAAO6B,GAAK0F,GAAI1F,EAAIiI,GAAO/D,QAAQlE,IAAM,GAAG,iBAAiBA,EAAI,MAAM,IAAInE,MAAM,sDAAsDmE,GAAK,OAAO,GAAKA,GAAKA,EAAIiI,GAAOa,IAAI9I,GAAKA,IAAM,EAAI+I,MAAM/I,IAAMA,EAAI,KAAO,EAAIwH,IAAIxH,GAAK0F,IAAK1F,EAAIiI,GAAOrB,IAAI,CAACoC,EAAIC,IAAMD,IAAMC,EAAIpC,IAAI7G,GAAK0F,GAAI1F,EAAIA,EAAIiI,GAAOiB,IAAI,CAACF,EAAIC,IAAMvD,GAAIsD,EAAIC,EAAIhB,GAAOhB,IAAI,CAAC+B,EAAIC,IAAMvD,GAAIsD,EAAIC,EAAIhB,GAAOlB,IAAI,CAACiC,EAAIC,IAAMvD,GAAIsD,EAAIC,EAAIhB,GAAOrC,IAAI,CAAC5F,EAAI6F,IAAx7D,SAAexF,EAAEL,EAAI6F,GAAO,GAAGA,EAAM,EAAI,MAAM,IAAIhK,MAAM,2CAA2C,GAAGgK,IAAQ,EAAI,OAAOxF,EAAE6G,IAAI,GAAGrB,IAAQ,EAAI,OAAO7F,EAAI,IAAImJ,EAAE9I,EAAE6G,IAAIkC,EAAEpJ,EAAI,KAAK6F,EAAM,GAAKA,EAAM,IAAMsD,EAAE9I,EAAE0G,IAAIoC,EAAEC,IAAIA,EAAE/I,EAAEwG,IAAIuC,GAAGvD,IAAQ,EAAI,OAAOsD,CAAC,CAA2sDE,CAAMhJ,EAAEL,EAAI6F,GAAOyD,IAAI,CAACN,EAAIC,IAAMvD,GAAIsD,EAAI/C,GAAOgD,EAAIhB,GAAOA,GAAOsB,KAAKvJ,GAAKA,EAAIA,EAAIwJ,KAAK,CAACR,EAAIC,IAAMD,EAAIC,EAAIQ,KAAK,CAACT,EAAIC,IAAMD,EAAIC,EAAIS,KAAK,CAACV,EAAIC,IAAMD,EAAIC,EAAIU,IAAI3J,GAAKiG,GAAOjG,EAAIiI,GAAO2B,KAAKjB,EAAMiB,MAAM,CAACxI,IAAIwH,IAAQA,EAAMpC,GAAOyB,IAAQW,EAAMvI,EAAEe,KAAKyI,YAAYC,GAAv8D,SAAuBzJ,EAAE0J,GAAM,MAAMC,EAAI,IAAIzK,MAAMwK,EAAKpQ,QAAQsQ,EAAeF,EAAK/B,QAAO,CAAEkC,EAAIlK,EAAIjF,IAAIsF,EAAEyI,IAAI9I,GAAKkK,GAAKF,EAAIjP,GAAGmP,EAAI7J,EAAE0G,IAAImD,EAAIlK,KAAOK,EAAE6G,KAAKiD,EAAS9J,EAAEsJ,IAAIM,GAAgB,OAAOF,EAAKK,aAAY,CAAEF,EAAIlK,EAAIjF,IAAIsF,EAAEyI,IAAI9I,GAAKkK,GAAKF,EAAIjP,GAAGsF,EAAE0G,IAAImD,EAAIF,EAAIjP,IAAIsF,EAAE0G,IAAImD,EAAIlK,KAAOmK,GAAUH,CAAG,CAAoqDK,CAAchK,EAAEyJ,GAAKQ,KAAK,CAACvR,EAAEC,EAAEC,IAAIA,EAAED,EAAED,EAAEwR,QAAQvK,GAAKzG,EAAK8H,EAAgBrB,EAAImI,GAAOhH,EAAgBnB,EAAImI,GAAOqC,UAAU3K,IAAQ,GAAGA,EAAMlG,SAASwO,EAAM,MAAM,IAAItM,MAAM,6BAA6BsM,EAAM,eAAetI,EAAMlG,QAAQ,OAAOJ,EAAK,EAAgBsG,GAAO,EAAgBA,EAAK,IAAK,OAAOtB,OAAOsK,OAAOxI,EAAE,CAAmvB,SAASoK,GAAoBC,GAAY,GAAG,iBAAiBA,EAAW,MAAM,IAAI7O,MAAM,8BAA8B,MAAM8O,EAAUD,EAAWhL,SAAS,GAAG/F,OAAO,OAAOU,KAAKoO,KAAKkC,EAAU,EAAE,CAAQ,SAASC,GAAiBF,GAAY,MAAM/Q,EAAO8Q,GAAoBC,GAAY,OAAO/Q,EAAOU,KAAKoO,KAAK9O,EAAO,EAAE,CCApvM,MAAM,GAAIyB,OAAO,GAAG,GAAIA,OAAO,GAAG,SAASyP,GAAgBC,EAAU3L,GAAM,MAAMqI,EAAIrI,EAAK4L,SAAS,OAAOD,EAAUtD,EAAIrI,CAAI,CAAC,SAAS6L,GAAUC,EAAEC,GAAM,IAAI3P,OAAOsI,cAAcoH,IAAIA,GAAG,GAAGA,EAAEC,EAAK,MAAM,IAAIrP,MAAM,qCAAqCqP,EAAK,YAAYD,EAAE,CAAC,SAASE,GAAUF,EAAEC,GAAwB,OAAlBF,GAAUC,EAAEC,GAAY,CAACE,QAAQ/Q,KAAKoO,KAAKyC,EAAKD,GAAG,EAAEI,WAAW,IAAIJ,EAAE,GAAG,CAAC,SAASK,GAAkBC,EAAOtS,GAAG,IAAIsG,MAAMuE,QAAQyH,GAAQ,MAAM,IAAI1P,MAAM,kBAAkB0P,EAAOC,SAAQ,CAAErC,EAAEpO,KAAK,KAAKoO,aAAalQ,GAAG,MAAM,IAAI4C,MAAM,0BAA0Bd,EAAG,GAAE,CAAC,SAAS0Q,GAAmBC,EAAQ3H,GAAO,IAAIxE,MAAMuE,QAAQ4H,GAAS,MAAM,IAAI7P,MAAM,6BAA6B6P,EAAQF,SAAQ,CAAEG,EAAE5Q,KAAK,IAAIgJ,EAAMG,QAAQyH,GAAG,MAAM,IAAI9P,MAAM,2BAA2Bd,EAAG,GAAE,CAAC,MAAM6Q,GAAiB,IAAI5G,QAAQ6G,GAAiB,IAAI7G,QAAQ,SAAS8G,GAAKrF,GAAG,OAAOoF,GAAiB7P,IAAIyK,IAAI,CAAC,CAAiqH,SAASsF,GAAcC,GAAO,OAAOjE,GAAciE,EAAM/H,IAAIE,EAAe6H,EAAM,CAAC5K,EAAE,SAAS3F,EAAE,SAASwQ,GAAG,QAAQC,GAAG,SAAS,CAAC5D,WAAW,gBAAgBE,YAAY,kBAAkBjK,OAAOsK,OAAO,IAAIR,GAAQ2D,EAAM5K,EAAE4K,EAAM1D,eAAe0D,EAAM7C,EAAE6C,EAAM/H,GAAGgE,OAAO,CCA3pJ,SAASkE,GAAmBC,QAAM,IAASA,EAAKC,MAAMjN,EAAM,OAAOgN,EAAKC,WAAM,IAASD,EAAKE,SAASlN,EAAM,UAAUgN,EAAKE,QAAQ,CAAopB,MAAM,GAAgBC,GAAI,GAAWC,IAAK,EAAU,MAAMC,WAAe5Q,MAAM,WAAA1C,GAAcK,MAAMkI,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,GAAGA,UAAU,GAAG,GAAG,EAAS,MAAMgL,GAAI,CAACC,IAAIF,GAAOG,KAAK,CAAC9K,OAAO,CAAC+K,EAAI3S,KAAQ,MAAMyS,IAAI3P,GAAG0P,GAAI,GAAGG,EAAI,GAAGA,EAAI,IAAI,MAAM,IAAI7P,EAAE,yBAAyB,GAAG,EAAE9C,EAAKP,OAAO,MAAM,IAAIqD,EAAE,6BAA6B,MAAM8P,EAAQ5S,EAAKP,OAAO,EAAEQ,EAAI,EAAuB2S,GAAS,GAAG3S,EAAIR,OAAO,EAAE,IAAI,MAAM,IAAIqD,EAAE,wCAAwC,MAAM+P,EAAOD,EAAQ,IAAI,EAAuB3S,EAAIR,OAAO,EAAE,KAAK,GAAG,OAAO,EAAuBkT,GAAKE,EAAO5S,EAAID,GAAM,MAAA8S,CAAOH,EAAI3S,GAAM,MAAMyS,IAAI3P,GAAG0P,GAAI,IAAI9S,EAAI,EAAE,GAAGiT,EAAI,GAAGA,EAAI,IAAI,MAAM,IAAI7P,EAAE,yBAAyB,GAAG9C,EAAKP,OAAO,GAAGO,EAAKN,OAASiT,EAAI,MAAM,IAAI7P,EAAE,yBAAyB,MAAMiQ,EAAM/S,EAAKN,KAAO,IAAID,EAAO,EAAE,GAAM,IAAIsT,EAAO,CAAC,MAAMF,EAAO,IAAIE,EAAM,IAAIF,EAAO,MAAM,IAAI/P,EAAE,qDAAqD,GAAG+P,EAAO,EAAE,MAAM,IAAI/P,EAAE,4CAA4C,MAAMkQ,EAAYhT,EAAKM,SAASZ,EAAIA,EAAImT,GAAQ,GAAGG,EAAYvT,SAASoT,EAAO,MAAM,IAAI/P,EAAE,yCAAyC,GAAG,IAAIkQ,EAAY,GAAG,MAAM,IAAIlQ,EAAE,wCAAwC,IAAI,MAAMhE,KAAKkU,EAAYvT,EAAOA,GAAQ,EAAEX,EAAE,GAAGY,GAAKmT,EAAOpT,EAAO,IAAI,MAAM,IAAIqD,EAAE,yCAAyC,MAAMrD,EAAOsT,EAAM,MAAMrK,EAAE1I,EAAKM,SAASZ,EAAIA,EAAID,GAAQ,GAAGiJ,EAAEjJ,SAASA,EAAO,MAAM,IAAIqD,EAAE,kCAAkC,MAAM,CAAC4F,EAAEA,EAAElH,EAAExB,EAAKM,SAASZ,EAAID,GAAQ,GAAGwT,KAAK,CAAC,MAAArL,CAAO9B,GAAK,MAAM2M,IAAI3P,GAAG0P,GAAI,GAAG1M,EAAI,GAAI,MAAM,IAAIhD,EAAE,8CAA8C,IAAI8C,EAAI,EAAuBE,GAAK,GAAG,EAAEzE,OAAO6R,SAAStN,EAAI,GAAG,MAAMA,EAAI,KAAKA,GAAK,EAAEA,EAAInG,OAAO,MAAM,IAAIqD,EAAE,kDAAkD,OAAO8C,CAAG,EAAE,MAAAkN,CAAO9S,GAAM,MAAMyS,IAAI3P,GAAG0P,GAAI,GAAG,IAAIxS,EAAK,GAAG,MAAM,IAAI8C,EAAE,uCAAuC,GAAG,IAAI9C,EAAK,MAAM,IAAIA,EAAK,IAAI,MAAM,IAAI8C,EAAE,uDAAuD,OAAOuP,GAAIrS,EAAK,GAAG,KAAAmT,CAAMvN,GAAK,MAAM6M,IAAI3P,EAAEmQ,KAAKG,EAAIV,KAAKW,GAAKb,GAAIxS,EAAK,iBAAiB4F,EAAI0M,GAAI1M,GAAKA,EAAI,EAAU5F,GAAM,MAAM0I,EAAE4K,EAAS9R,EAAE+R,GAAcF,EAAIP,OAAO,GAAG9S,GAAM,GAAGuT,EAAa9T,OAAO,MAAM,IAAIqD,EAAE,+CAA+C,MAAM4F,EAAE8K,EAAOhS,EAAEiS,GAAYJ,EAAIP,OAAO,EAAEQ,IAAW5K,EAAEgL,EAAOlS,EAAEmS,GAAYN,EAAIP,OAAO,EAAEW,GAAY,GAAGE,EAAWlU,OAAO,MAAM,IAAIqD,EAAE,+CAA+C,MAAM,CAACsJ,EAAEgH,EAAIN,OAAOU,GAAQ/B,EAAE2B,EAAIN,OAAOY,GAAQ,EAAE,UAAAE,CAAWC,GAAK,MAAMnB,KAAKW,EAAIJ,KAAKG,GAAKZ,GAAIsB,EAAIT,EAAIzL,OAAO,EAAEwL,EAAIxL,OAAOiM,EAAIzH,IAAIiH,EAAIzL,OAAO,EAAEwL,EAAIxL,OAAOiM,EAAIpC,IAAI,OAAO4B,EAAIzL,OAAO,GAAGkM,EAAI,GAAS,GAAI5S,OAAO,GAAG,GAAIA,OAAO,GAAG,GAAIA,OAAO,GAAG,GAAIA,OAAO,GAAG,GAAIA,OAAO,GAAU,SAAS6S,GAAkB7B,GAAM,MAAM8B,EAA1yG,SAA2BlC,GAAO,MAAMI,EAAKL,GAAcC,GAAO,EAAkBI,EAAK,CAACrT,EAAE,QAAQC,EAAE,SAAS,CAACmV,yBAAyB,QAAQC,eAAe,UAAUC,cAAc,WAAWC,cAAc,WAAWC,mBAAmB,UAAU/D,UAAU,WAAWD,QAAQ,aAAa,MAAMiE,KAAKA,EAAKvK,GAAGA,EAAGlL,EAAEA,GAAGqT,EAAK,GAAGoC,EAAK,CAAC,IAAIvK,EAAG2C,IAAI7N,EAAEkL,EAAGyD,MAAM,MAAM,IAAI7L,MAAM,8EAA8E,GAAG,iBAAiB2S,GAAM,iBAAiBA,EAAKC,MAAM,mBAAmBD,EAAKE,YAAY,MAAM,IAAI7S,MAAM,wEAAwE,CAAC,OAAO0C,OAAOsK,OAAO,IAAIuD,GAAM,CAA8pFuC,CAAkBvC,IAAOnI,GAAGA,GAAIiK,EAAMU,EAAGlG,GAAMwF,EAAM9M,EAAE8M,EAAM5F,YAAYiC,EAAQ2D,EAAM3D,SAAS,EAAEsE,EAAGC,EAAMC,KAAiB,MAAMhW,EAAE+V,EAAME,WAAW,OAAO,EAAejV,WAAWyF,KAAK,CAAC,IAAIyE,EAAGsG,QAAQxR,EAAEiN,GAAG/B,EAAGsG,QAAQxR,EAAEoN,GAAI,GAAEqE,EAAU0D,EAAM1D,WAAW,CAAC3K,IAAQ,MAAMoP,EAAKpP,EAAMrF,SAAS,GAAG,MAAM,CAACwL,EAAE/B,EAAGuG,UAAUyE,EAAKzU,SAAS,EAAEyJ,EAAGkE,QAAQhC,EAAElC,EAAGuG,UAAUyE,EAAKzU,SAASyJ,EAAGkE,MAAM,EAAElE,EAAGkE,QAAS,GAAE,SAAS+G,EAAoBlJ,GAAG,MAAMjN,EAAEA,EAAEC,EAAEA,GAAGkV,EAAMiB,EAAGlL,EAAG4C,IAAIb,GAAGoJ,EAAGnL,EAAG8C,IAAIoI,EAAGnJ,GAAG,OAAO/B,EAAGiF,IAAIjF,EAAGiF,IAAIkG,EAAGnL,EAAG8C,IAAIf,EAAEjN,IAAIC,EAAE,CAAC,IAAIiL,EAAG2C,IAAI3C,EAAG4C,IAAIqH,EAAMhC,IAAIgD,EAAoBhB,EAAMjC,KAAK,MAAM,IAAIpQ,MAAM,+CAA+C,SAASwT,EAAuBpR,GAAK,MAAMkQ,yBAAyBmB,EAAQ9G,YAAYA,EAAY4F,eAAeA,EAAehN,EAAEmO,GAAGrB,EAAM,GAAGoB,GAAS,iBAAiBrR,EAAI,CAAC,GAAG,EAAWA,KAAOA,EAAI,EAAcA,IAAM,iBAAiBA,IAAMqR,EAAQE,SAASvR,EAAItE,QAAQ,MAAM,IAAIkC,MAAM,uBAAuBoC,EAAIA,EAAI0B,SAAS,EAAE6I,EAAY,IAAI,CAAC,IAAIxI,EAAI,IAAIA,EAAI,iBAAiB/B,EAAIA,EAAI,EAAmB,EAAY,cAAcA,EAAIuK,GAAa,CAAC,MAAMiH,GAAO,MAAM,IAAI5T,MAAM,wCAAwC2M,EAAY,sBAAsBvK,EAAI,CAAC,OAAOmQ,IAAiBpO,EAAI0F,GAAI1F,EAAIuP,IAAI,EAAY,cAAcvP,EAAI,GAAIuP,GAAGvP,CAAG,CAAC,SAAS0P,EAAeC,GAAO,KAAKA,aAAiBC,GAAO,MAAM,IAAI/T,MAAM,2BAA2B,CAAC,MAAMgU,EAAahL,GAAS,CAAEsE,EAAE2G,KAAM,MAAMC,GAAG/J,EAAEgK,GAAG7J,EAAE8J,GAAGC,GAAG/G,EAAE,GAAGlF,EAAG2C,IAAIsJ,EAAEjM,EAAGiD,KAAK,MAAM,CAAClB,EAAEA,EAAEG,EAAEA,GAAG,MAAM2C,EAAIK,EAAEL,MAAM,MAAMgH,IAAKA,EAAGhH,EAAI7E,EAAGiD,IAAIjD,EAAG0F,IAAIuG,IAAI,MAAMC,EAAGlM,EAAG8C,IAAIf,EAAE8J,GAAIM,EAAGnM,EAAG8C,IAAIZ,EAAE2J,GAAIO,EAAGpM,EAAG8C,IAAImJ,EAAEJ,GAAI,GAAGhH,EAAI,MAAM,CAAC9C,EAAE/B,EAAGyD,KAAKvB,EAAElC,EAAGyD,MAAM,IAAIzD,EAAG2C,IAAIyJ,EAAGpM,EAAGiD,KAAK,MAAM,IAAIrL,MAAM,oBAAoB,MAAM,CAACmK,EAAEmK,EAAGhK,EAAEiK,EAAI,IAAGE,EAAgBzL,GAAUsE,IAAI,GAAGA,EAAEL,MAAM,CAAC,GAAGoF,EAAMK,qBAAqBtK,EAAG6E,IAAIK,EAAE6G,IAAI,OAAO,MAAM,IAAInU,MAAM,kBAAkB,CAAC,MAAMmK,EAAEA,EAAEG,EAAEA,GAAGgD,EAAE6F,WAAW,IAAI/K,EAAGC,QAAQ8B,KAAK/B,EAAGC,QAAQiC,GAAG,MAAM,IAAItK,MAAM,4BAA4B,MAAM0U,EAAKtM,EAAG4C,IAAIV,GAAGqK,EAAMtB,EAAoBlJ,GAAG,IAAI/B,EAAG2C,IAAI2J,EAAKC,GAAO,MAAM,IAAI3U,MAAM,qCAAqC,IAAIsN,EAAEkF,gBAAgB,MAAM,IAAIxS,MAAM,0CAA0C,OAAM,CAAG,IAAG,MAAM+T,EAAM,WAAAzW,CAAY4W,EAAGC,EAAGC,GAAI,GAAGxW,KAAKsW,GAAGA,EAAGtW,KAAKuW,GAAGA,EAAGvW,KAAKwW,GAAGA,EAAG,MAAMF,IAAK9L,EAAGC,QAAQ6L,GAAI,MAAM,IAAIlU,MAAM,cAAc,GAAG,MAAMmU,IAAK/L,EAAGC,QAAQ8L,GAAI,MAAM,IAAInU,MAAM,cAAc,GAAG,MAAMoU,IAAKhM,EAAGC,QAAQ+L,GAAI,MAAM,IAAIpU,MAAM,cAAc0C,OAAOsK,OAAOpP,KAAK,CAAC,iBAAOgX,CAAWtH,GAAG,MAAMnD,EAAEA,EAAEG,EAAEA,GAAGgD,GAAG,CAAC,EAAE,IAAIA,IAAIlF,EAAGC,QAAQ8B,KAAK/B,EAAGC,QAAQiC,GAAG,MAAM,IAAItK,MAAM,wBAAwB,GAAGsN,aAAayG,EAAM,MAAM,IAAI/T,MAAM,gCAAgC,MAAMiN,EAAI/N,GAAGkJ,EAAG2C,IAAI7L,EAAEkJ,EAAGyD,MAAM,OAAOoB,EAAI9C,IAAI8C,EAAI3C,GAAGyJ,EAAMlI,KAAK,IAAIkI,EAAM5J,EAAEG,EAAElC,EAAGiD,IAAI,CAAC,KAAIlB,GAAI,OAAOvM,KAAKuV,WAAWhJ,CAAC,CAAC,KAAIG,GAAI,OAAO1M,KAAKuV,WAAW7I,CAAC,CAAC,iBAAOuK,CAAWnF,GAAQ,MAAMoF,EAAM1M,EAAG4F,YAAY0B,EAAOxG,KAAKoE,GAAGA,EAAE8G,MAAM,OAAO1E,EAAOxG,KAAI,CAAEoE,EAAEpO,IAAIoO,EAAE6F,SAAS2B,EAAM5V,MAAMgK,IAAI6K,EAAMa,WAAW,CAAC,cAAOG,CAAQ9Q,GAAK,MAAM2G,EAAEmJ,EAAMa,WAAWjG,EAAU,EAAY,WAAW1K,KAAO,OAAO2G,EAAEoK,iBAAiBpK,CAAC,CAAC,qBAAOqK,CAAeC,GAAY,OAAOnB,EAAMoB,KAAKC,SAAS5B,EAAuB0B,GAAY,CAAC,UAAOG,CAAI3F,EAAOG,GAAS,ODA/sH,SAAmBzS,EAAEkY,EAAO5F,EAAOG,GAAS,GAAGJ,GAAkBC,EAAOtS,GAAGwS,GAAmBC,EAAQyF,GAAQ5F,EAAO5R,SAAS+R,EAAQ/R,OAAO,MAAM,IAAIkC,MAAM,uDAAuD,MAAMuV,EAAKnY,EAAEyO,KAAK2J,EAAMlP,EAAO/G,OAAOmQ,EAAO5R,SAAS0R,EAAWgG,EAAM,GAAGA,EAAM,EAAEA,EAAM,EAAEA,EAAM,EAAEA,EAAM,EAAE,EAAEnJ,GAAM,GAAGmD,GAAY,EAAEiG,EAAQ,IAAI/R,MAAM2I,EAAK,GAAGpN,KAAKsW,GAAM,IAAI3P,EAAI2P,EAAK,IAAI,IAAIrW,EAAEV,KAAKkX,OAAOJ,EAAO/I,KAAK,GAAGiD,GAAYA,EAAWtQ,GAAG,EAAEA,GAAGsQ,EAAW,CAACiG,EAAQxW,KAAKsW,GAAM,IAAI,IAAII,EAAE,EAAEA,EAAE9F,EAAQ/R,OAAO6X,IAAI,CAAC,MAAMC,EAAO/F,EAAQ8F,GAAGH,EAAM9V,OAAOkW,GAAQrW,OAAOL,GAAGK,OAAO8M,IAAOoJ,EAAQD,GAAOC,EAAQD,GAAOnI,IAAIqC,EAAOiG,GAAG,CAAC,IAAIE,EAAKN,EAAK,IAAI,IAAII,EAAEF,EAAQ3X,OAAO,EAAEgY,EAAKP,EAAKI,EAAE,EAAEA,IAAIG,EAAKA,EAAKzI,IAAIoI,EAAQE,IAAIE,EAAKA,EAAKxI,IAAIyI,GAAM,GAAGlQ,EAAIA,EAAIyH,IAAIwI,GAAM,IAAI3W,EAAE,IAAI,IAAIyW,EAAE,EAAEA,EAAEnG,EAAWmG,IAAI/P,EAAIA,EAAImQ,QAAQ,CAAC,OAAOnQ,CAAG,CCA05FoQ,CAAUjC,EAAMhB,EAAGrD,EAAOG,EAAQ,CAAC,cAAAoG,CAAezG,GAAY0G,EAAKC,cAAcvY,KAAK4R,EAAW,CAAC,cAAAwF,GAAiBP,EAAgB7W,KAAK,CAAC,QAAAwY,GAAW,MAAM9L,EAAEA,GAAG1M,KAAKuV,WAAW,GAAG/K,EAAG8E,MAAM,OAAO9E,EAAG8E,MAAM5C,GAAG,MAAM,IAAItK,MAAM,8BAA8B,CAAC,MAAAqW,CAAOvC,GAAOD,EAAeC,GAAO,MAAMI,GAAGoC,EAAGnC,GAAGoC,EAAGnC,GAAGoC,GAAI5Y,MAAMsW,GAAGuC,EAAGtC,GAAGuC,EAAGtC,GAAGuC,GAAI7C,EAAM8C,EAAGxO,EAAG2C,IAAI3C,EAAG8C,IAAIoL,EAAGK,GAAIvO,EAAG8C,IAAIuL,EAAGD,IAAKK,EAAGzO,EAAG2C,IAAI3C,EAAG8C,IAAIqL,EAAGI,GAAIvO,EAAG8C,IAAIwL,EAAGF,IAAK,OAAOI,GAAIC,CAAE,CAAC,MAAA3H,GAAS,OAAO,IAAI6E,EAAMnW,KAAKsW,GAAG9L,EAAGuD,IAAI/N,KAAKuW,IAAIvW,KAAKwW,GAAG,CAAC,MAAA2B,GAAS,MAAM7Y,EAAEA,EAAEC,EAAEA,GAAGkV,EAAMyE,EAAG1O,EAAG8C,IAAI/N,EAAE,KAAM+W,GAAGoC,EAAGnC,GAAGoC,EAAGnC,GAAGoC,GAAI5Y,KAAK,IAAImZ,EAAG3O,EAAGyD,KAAKmL,EAAG5O,EAAGyD,KAAKoL,EAAG7O,EAAGyD,KAAKqL,EAAG9O,EAAG8C,IAAIoL,EAAGA,GAAIa,EAAG/O,EAAG8C,IAAIqL,EAAGA,GAAIzK,EAAG1D,EAAG8C,IAAIsL,EAAGA,GAAIY,EAAGhP,EAAG8C,IAAIoL,EAAGC,GAAI,OAAOa,EAAGhP,EAAGiF,IAAI+J,EAAGA,GAAIH,EAAG7O,EAAG8C,IAAIoL,EAAGE,GAAIS,EAAG7O,EAAGiF,IAAI4J,EAAGA,GAAIF,EAAG3O,EAAG8C,IAAIhO,EAAE+Z,GAAID,EAAG5O,EAAG8C,IAAI4L,EAAGhL,GAAIkL,EAAG5O,EAAGiF,IAAI0J,EAAGC,GAAID,EAAG3O,EAAGgD,IAAI+L,EAAGH,GAAIA,EAAG5O,EAAGiF,IAAI8J,EAAGH,GAAIA,EAAG5O,EAAG8C,IAAI6L,EAAGC,GAAID,EAAG3O,EAAG8C,IAAIkM,EAAGL,GAAIE,EAAG7O,EAAG8C,IAAI4L,EAAGG,GAAInL,EAAG1D,EAAG8C,IAAIhO,EAAE4O,GAAIsL,EAAGhP,EAAGgD,IAAI8L,EAAGpL,GAAIsL,EAAGhP,EAAG8C,IAAIhO,EAAEka,GAAIA,EAAGhP,EAAGiF,IAAI+J,EAAGH,GAAIA,EAAG7O,EAAGiF,IAAI6J,EAAGA,GAAIA,EAAG9O,EAAGiF,IAAI4J,EAAGC,GAAIA,EAAG9O,EAAGiF,IAAI6J,EAAGpL,GAAIoL,EAAG9O,EAAG8C,IAAIgM,EAAGE,GAAIJ,EAAG5O,EAAGiF,IAAI2J,EAAGE,GAAIpL,EAAG1D,EAAG8C,IAAIqL,EAAGC,GAAI1K,EAAG1D,EAAGiF,IAAIvB,EAAGA,GAAIoL,EAAG9O,EAAG8C,IAAIY,EAAGsL,GAAIL,EAAG3O,EAAGgD,IAAI2L,EAAGG,GAAID,EAAG7O,EAAG8C,IAAIY,EAAGqL,GAAIF,EAAG7O,EAAGiF,IAAI4J,EAAGA,GAAIA,EAAG7O,EAAGiF,IAAI4J,EAAGA,GAAI,IAAIlD,EAAMgD,EAAGC,EAAGC,EAAG,CAAC,GAAA5J,CAAIyG,GAAOD,EAAeC,GAAO,MAAMI,GAAGoC,EAAGnC,GAAGoC,EAAGnC,GAAGoC,GAAI5Y,MAAMsW,GAAGuC,EAAGtC,GAAGuC,EAAGtC,GAAGuC,GAAI7C,EAAM,IAAIiD,EAAG3O,EAAGyD,KAAKmL,EAAG5O,EAAGyD,KAAKoL,EAAG7O,EAAGyD,KAAK,MAAM3O,EAAEmV,EAAMnV,EAAE4Z,EAAG1O,EAAG8C,IAAImH,EAAMlV,EAAE,IAAK,IAAI+Z,EAAG9O,EAAG8C,IAAIoL,EAAGG,GAAIU,EAAG/O,EAAG8C,IAAIqL,EAAGG,GAAI5K,EAAG1D,EAAG8C,IAAIsL,EAAGG,GAAIS,EAAGhP,EAAGiF,IAAIiJ,EAAGC,GAAIc,EAAGjP,EAAGiF,IAAIoJ,EAAGC,GAAIU,EAAGhP,EAAG8C,IAAIkM,EAAGC,GAAIA,EAAGjP,EAAGiF,IAAI6J,EAAGC,GAAIC,EAAGhP,EAAGgD,IAAIgM,EAAGC,GAAIA,EAAGjP,EAAGiF,IAAIiJ,EAAGE,GAAI,IAAIc,EAAGlP,EAAGiF,IAAIoJ,EAAGE,GAAI,OAAOU,EAAGjP,EAAG8C,IAAImM,EAAGC,GAAIA,EAAGlP,EAAGiF,IAAI6J,EAAGpL,GAAIuL,EAAGjP,EAAGgD,IAAIiM,EAAGC,GAAIA,EAAGlP,EAAGiF,IAAIkJ,EAAGC,GAAIO,EAAG3O,EAAGiF,IAAIqJ,EAAGC,GAAIW,EAAGlP,EAAG8C,IAAIoM,EAAGP,GAAIA,EAAG3O,EAAGiF,IAAI8J,EAAGrL,GAAIwL,EAAGlP,EAAGgD,IAAIkM,EAAGP,GAAIE,EAAG7O,EAAG8C,IAAIhO,EAAEma,GAAIN,EAAG3O,EAAG8C,IAAI4L,EAAGhL,GAAImL,EAAG7O,EAAGiF,IAAI0J,EAAGE,GAAIF,EAAG3O,EAAGgD,IAAI+L,EAAGF,GAAIA,EAAG7O,EAAGiF,IAAI8J,EAAGF,GAAID,EAAG5O,EAAG8C,IAAI6L,EAAGE,GAAIE,EAAG/O,EAAGiF,IAAI6J,EAAGA,GAAIC,EAAG/O,EAAGiF,IAAI8J,EAAGD,GAAIpL,EAAG1D,EAAG8C,IAAIhO,EAAE4O,GAAIuL,EAAGjP,EAAG8C,IAAI4L,EAAGO,GAAIF,EAAG/O,EAAGiF,IAAI8J,EAAGrL,GAAIA,EAAG1D,EAAGgD,IAAI8L,EAAGpL,GAAIA,EAAG1D,EAAG8C,IAAIhO,EAAE4O,GAAIuL,EAAGjP,EAAGiF,IAAIgK,EAAGvL,GAAIoL,EAAG9O,EAAG8C,IAAIiM,EAAGE,GAAIL,EAAG5O,EAAGiF,IAAI2J,EAAGE,GAAIA,EAAG9O,EAAG8C,IAAIoM,EAAGD,GAAIN,EAAG3O,EAAG8C,IAAIkM,EAAGL,GAAIA,EAAG3O,EAAGgD,IAAI2L,EAAGG,GAAIA,EAAG9O,EAAG8C,IAAIkM,EAAGD,GAAIF,EAAG7O,EAAG8C,IAAIoM,EAAGL,GAAIA,EAAG7O,EAAGiF,IAAI4J,EAAGC,GAAI,IAAInD,EAAMgD,EAAGC,EAAGC,EAAG,CAAC,QAAAM,CAASzD,GAAO,OAAOlW,KAAKyP,IAAIyG,EAAM5E,SAAS,CAAC,GAAAjC,GAAM,OAAOrP,KAAKyY,OAAOtC,EAAMlI,KAAK,CAAC,IAAA2L,CAAKjS,GAAG,OAAO2Q,EAAKuB,WAAW7Z,KAAK2H,EAAEwO,EAAMc,WAAW,CAAC,cAAA6C,CAAeC,GAAI,MAAMhF,KAAKA,EAAKpN,EAAEmO,GAAGrB,EAAM,EAAY,SAASsF,EAAG,GAAIjE,GAAG,MAAMkE,EAAE7D,EAAMlI,KAAK,GAAG8L,IAAK,GAAI,OAAOC,EAAE,GAAGha,KAAKqP,OAAO0K,IAAK,GAAI,OAAO/Z,KAAK,IAAI+U,GAAMuD,EAAK2B,eAAeja,MAAM,OAAOsY,EAAK4B,iBAAiBla,KAAK+Z,EAAG5D,EAAMc,YAAY,IAAIkD,MAAMA,EAAMC,GAAGA,EAAGC,MAAMA,EAAMC,GAAGA,GAAIvF,EAAKE,YAAY8E,GAAIQ,EAAIP,EAAEQ,EAAIR,EAAErK,EAAE3P,KAAK,KAAKoa,EAAG,IAAKE,EAAG,IAAKF,EAAG,KAAMG,EAAIA,EAAI9K,IAAIE,IAAI2K,EAAG,KAAME,EAAIA,EAAI/K,IAAIE,IAAIA,EAAEA,EAAEwI,SAASiC,IAAK,GAAIE,IAAK,GAAI,OAAOH,IAAQI,EAAIA,EAAIjJ,UAAU+I,IAAQG,EAAIA,EAAIlJ,UAAUkJ,EAAI,IAAIrE,EAAM3L,EAAG8C,IAAIkN,EAAIlE,GAAGvB,EAAKC,MAAMwF,EAAIjE,GAAGiE,EAAIhE,IAAI+D,EAAI9K,IAAI+K,EAAI,CAAC,QAAAhD,CAASQ,GAAQ,MAAMjD,KAAKA,EAAKpN,EAAEmO,GAAGrB,EAAM,IAAIY,EAAMoF,EAAK,GAAG,EAAY,SAASzC,EAAO,GAAIlC,GAAGf,EAAK,CAAC,MAAMoF,MAAMA,EAAMC,GAAGA,EAAGC,MAAMA,EAAMC,GAAGA,GAAIvF,EAAKE,YAAY+C,GAAQ,IAAItI,EAAE6K,EAAI3T,EAAE8T,GAAK1a,KAAK4Z,KAAKQ,IAAK1K,EAAE8K,EAAI5T,EAAE+T,GAAK3a,KAAK4Z,KAAKU,GAAIC,EAAIjC,EAAKlH,gBAAgB+I,EAAMI,GAAKC,EAAIlC,EAAKlH,gBAAgBiJ,EAAMG,GAAKA,EAAI,IAAIrE,EAAM3L,EAAG8C,IAAIkN,EAAIlE,GAAGvB,EAAKC,MAAMwF,EAAIjE,GAAGiE,EAAIhE,IAAInB,EAAMkF,EAAI9K,IAAI+K,GAAKC,EAAKC,EAAIjL,IAAIkL,EAAI,KAAK,CAAC,MAAMjL,EAAEA,EAAE9I,EAAEA,GAAG5G,KAAK4Z,KAAK5B,GAAQ3C,EAAM3F,EAAE+K,EAAK7T,CAAC,CAAC,OAAOuP,EAAMc,WAAW,CAAC5B,EAAMoF,IAAO,EAAE,CAAC,oBAAAG,CAAqBjN,EAAErO,EAAEC,GAAG,MAAMkE,EAAE0S,EAAMoB,KAAKjK,EAAI,CAACN,EAAE1N,IAAIA,IAAI,IAAKA,IAAI,IAAK0N,EAAEyL,OAAOhV,GAAGuJ,EAAEwK,SAASlY,GAAG0N,EAAE8M,eAAexa,GAAG0I,EAAIsF,EAAItN,KAAKV,GAAGmQ,IAAInC,EAAIK,EAAEpO,IAAI,OAAOyI,EAAIqH,WAAM,EAAOrH,CAAG,CAAC,QAAAuN,CAASc,GAAI,OAAOD,EAAapW,KAAKqW,EAAG,CAAC,aAAAzB,GAAgB,MAAM5S,EAAE6Y,EAASjG,cAAcA,GAAeH,EAAM,GAAGoG,IAAW,GAAI,OAAM,EAAG,GAAGjG,EAAc,OAAOA,EAAcuB,EAAMnW,MAAM,MAAM,IAAIoC,MAAM,+DAA+D,CAAC,aAAAyS,GAAgB,MAAM7S,EAAE6Y,EAAShG,cAAcA,GAAeJ,EAAM,OAAOoG,IAAW,GAAI7a,KAAK6U,EAAcA,EAAcsB,EAAMnW,MAAMA,KAAK8Z,eAAerF,EAAMzS,EAAE,CAAC,UAAA8Y,GAAa,IAAIC,IAAe9S,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,KAAKA,UAAU,GAAG,OAAOtC,EAAM,eAAeoV,GAAc/a,KAAKoX,iBAAiBtG,EAAQqF,EAAMnW,KAAK+a,EAAa,CAAC,KAAAC,GAAQ,IAAID,IAAe9S,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,KAAKA,UAAU,GAAG,OAAOtC,EAAM,eAAeoV,GAAc,EAAc/a,KAAK8a,WAAWC,GAAc,EAAE5E,EAAMoB,KAAK,IAAIpB,EAAM1B,EAAMjC,GAAGiC,EAAMhC,GAAGjI,EAAGiD,KAAK0I,EAAMlI,KAAK,IAAIkI,EAAM3L,EAAGyD,KAAKzD,EAAGiD,IAAIjD,EAAGyD,MAAM,MAAMgN,EAAMxG,EAAM5F,WAAWyJ,GDA38T9Y,ECAq9T2W,EDAn9T1E,ECAy9TgD,EAAMM,KAAKnU,KAAKoO,KAAKiM,EAAM,GAAGA,EDA3+T,CAAC7J,gBAAgBA,GAAgB6I,eAAeiB,GAAK,IAAI7I,GAAK6I,GAAK,YAAAC,CAAaD,EAAIvT,GAAG,IAAI+H,EAAEzH,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,GAAGA,UAAU,GAAGzI,EAAEyO,KAAK0B,EAAEuL,EAAI,KAAKvT,EAAE,IAAKA,EAAE,KAAM+H,EAAEA,EAAED,IAAIE,IAAIA,EAAEA,EAAEwI,SAASxQ,IAAI,GAAI,OAAO+H,CAAC,EAAE,gBAAA0L,CAAiBF,EAAI1J,GAAG,MAAMG,QAAQA,EAAQC,WAAWA,GAAYF,GAAUF,EAAEC,GAAMK,EAAO,GAAG,IAAIpC,EAAEwL,EAAIG,EAAK3L,EAAE,IAAI,IAAI4L,EAAO,EAAEA,EAAO3J,EAAQ2J,IAAS,CAACD,EAAK3L,EAAEoC,EAAOnI,KAAK0R,GAAM,IAAI,IAAI/Z,EAAE,EAAEA,EAAEsQ,EAAWtQ,IAAI+Z,EAAKA,EAAK5L,IAAIC,GAAGoC,EAAOnI,KAAK0R,GAAM3L,EAAE2L,EAAKlD,QAAQ,CAAC,OAAOrG,CAAM,EAAE,IAAA8H,CAAKpI,EAAE+J,EAAY5T,GAAG,MAAMgK,QAAQA,EAAQC,WAAWA,GAAYF,GAAUF,EAAEC,GAAM,IAAI/B,EAAElQ,EAAEyO,KAAKrH,EAAEpH,EAAE+X,KAAK,MAAMiE,EAAK7Z,OAAO,GAAG6P,EAAE,GAAGiK,EAAU,GAAGjK,EAAEkK,EAAQ/Z,OAAO6P,GAAG,IAAI,IAAI8J,EAAO,EAAEA,EAAO3J,EAAQ2J,IAAS,CAAC,MAAM3X,EAAO2X,EAAO1J,EAAW,IAAIgG,EAAM9V,OAAO6F,EAAE6T,GAAM7T,IAAI+T,EAAQ9D,EAAMhG,IAAagG,GAAO6D,EAAU9T,GAAG,IAAK,MAAMgU,EAAQhY,EAAOiY,EAAQjY,EAAO/C,KAAKib,IAAIjE,GAAO,EAAEkE,EAAMR,EAAO,GAAG,EAAES,EAAMnE,EAAM,EAAE,IAAIA,EAAMhR,EAAEA,EAAE6I,IAAI2B,GAAgB0K,EAAMP,EAAYI,KAAWjM,EAAEA,EAAED,IAAI2B,GAAgB2K,EAAMR,EAAYK,IAAU,CAAC,MAAM,CAAClM,EAAEA,EAAE9I,EAAEA,EAAE,EAAE,UAAAoV,CAAWxK,EAAE+J,EAAY5T,GAAG,IAAI8I,EAAIxI,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,GAAGA,UAAU,GAAGzI,EAAEyO,KAAK,MAAM0D,QAAQA,EAAQC,WAAWA,GAAYF,GAAUF,EAAEC,GAAM+J,EAAK7Z,OAAO,GAAG6P,EAAE,GAAGiK,EAAU,GAAGjK,EAAEkK,EAAQ/Z,OAAO6P,GAAG,IAAI,IAAI8J,EAAO,EAAEA,EAAO3J,EAAQ2J,IAAS,CAAC,MAAM3X,EAAO2X,EAAO1J,EAAW,GAAGjK,IAAI,GAAI,MAAM,IAAIiQ,EAAM9V,OAAO6F,EAAE6T,GAAM,GAAG7T,IAAI+T,EAAQ9D,EAAMhG,IAAagG,GAAO6D,EAAU9T,GAAG,IAAK,IAAIiQ,EAAM,SAAS,IAAIqE,EAAKV,EAAY5X,EAAO/C,KAAKib,IAAIjE,GAAO,GAAGA,EAAM,IAAIqE,EAAKA,EAAK3K,UAAUb,EAAIA,EAAIhB,IAAIwM,EAAK,CAAC,OAAOxL,CAAG,EAAE,cAAAyL,CAAe1K,EAAExE,EAAEmP,GAAW,IAAIC,EAAKjK,GAAiB5P,IAAIyK,GAAG,OAAOoP,IAAOA,EAAKpc,KAAKob,iBAAiBpO,EAAEwE,GAAG,IAAIA,GAAGW,GAAiBrR,IAAIkM,EAAEmP,EAAUC,KAAQA,CAAI,EAAE,UAAAvC,CAAW7M,EAAErF,EAAEwU,GAAW,MAAM3K,EAAEa,GAAKrF,GAAG,OAAOhN,KAAK4Z,KAAKpI,EAAExR,KAAKkc,eAAe1K,EAAExE,EAAEmP,GAAWxU,EAAE,EAAE,gBAAAuS,CAAiBlN,EAAErF,EAAEwU,EAAUE,GAAM,MAAM7K,EAAEa,GAAKrF,GAAG,OAAO,IAAIwE,EAAExR,KAAKmb,aAAanO,EAAErF,EAAE0U,GAAMrc,KAAKgc,WAAWxK,EAAExR,KAAKkc,eAAe1K,EAAExE,EAAEmP,GAAWxU,EAAE0U,EAAK,EAAE,aAAA9D,CAAcvL,EAAEwE,GAAGD,GAAUC,EAAEC,GAAMW,GAAiBtR,IAAIkM,EAAEwE,GAAGW,GAAiBmK,OAAOtP,EAAE,IAAziE,IAAcxN,EAAEiS,ECA8/T,MAAM,CAACgD,MAAMA,EAAM8H,gBAAgBpG,EAAMP,uBAAuBA,EAAuBH,oBAAoBA,EAAoB+G,mBAAmB,SAASjW,GAAK,OAAO,EAAWA,EAAI,GAAIkO,EAAM9M,EAAE,EAAE,CAAwP,SAAS8U,GAAYC,GAAU,MAAMjI,EAA5R,SAAsBlC,GAAO,MAAMI,EAAKL,GAAcC,GAAO,OAAO,EAAkBI,EAAK,CAACrO,KAAK,OAAOU,KAAK,WAAW2X,YAAY,YAAY,CAACC,SAAS,WAAWC,cAAc,WAAWjK,KAAK,YAAY9N,OAAOsK,OAAO,CAACwD,MAAK,KAAMD,GAAM,CAAmDmK,CAAaJ,IAAWlS,GAAGA,EAAG7C,EAAEoV,GAAatI,EAAMuI,EAAcxS,EAAGkE,MAAM,EAAEuO,EAAgB,EAAEzS,EAAGkE,MAAM,EAAE,SAASwO,EAAK5d,GAAG,OAAO2M,GAAI3M,EAAEyd,EAAY,CAAC,SAASI,EAAK7d,GAAG,OAAOkN,GAAOlN,EAAEyd,EAAY,CAAC,MAAMR,gBAAgBpG,EAAMP,uBAAuBA,EAAuBH,oBAAoBA,EAAoB+G,mBAAmBA,GAAoBhI,GAAkB,IAAIC,EAAM,OAAA3D,CAAQsE,EAAGC,EAAM0F,GAAc,MAAMzb,EAAE+V,EAAME,WAAWhJ,EAAE/B,EAAGsG,QAAQxR,EAAEiN,GAAG6Q,EAAI,EAAe,OAAOzX,EAAM,eAAeoV,GAAcA,EAAaqC,EAAI9c,WAAWyF,KAAK,CAACsP,EAAMmD,WAAW,EAAE,IAAIjM,GAAG6Q,EAAI9c,WAAWyF,KAAK,CAAC,IAAIwG,EAAE/B,EAAGsG,QAAQxR,EAAEoN,GAAG,EAAE,SAAAqE,CAAU3K,GAAO,MAAM1F,EAAI0F,EAAMlG,OAAOmd,EAAKjX,EAAM,GAAGoP,EAAKpP,EAAMrF,SAAS,GAAG,GAAGL,IAAMsc,GAAe,IAAIK,GAAM,IAAIA,EAAK,CAAC,GAAG3c,IAAMuc,GAAiB,IAAII,EAAM,MAAM,CAAC9Q,EAAE/B,EAAGuG,UAAUyE,EAAKzU,SAAS,EAAEyJ,EAAGkE,QAAQhC,EAAElC,EAAGuG,UAAUyE,EAAKzU,SAASyJ,EAAGkE,MAAM,EAAElE,EAAGkE,SAAS,MAAM,IAAItM,MAAM,qCAAqC4a,EAAc,qBAAqBC,EAAgB,SAASvc,EAAI,CAAC,CAAC,MAAM6L,EAAE,EAAmBiJ,GAAM,IAAI,EAAWjJ,EAAE,GAAI/B,EAAGgE,OAAO,MAAM,IAAIpM,MAAM,yBAAyB,MAAMkb,EAAG7H,EAAoBlJ,GAAG,IAAIG,EAAE,IAAIA,EAAElC,EAAG2F,KAAKmN,EAAG,CAAC,MAAMC,GAAW,MAAMC,EAAOD,aAAqBnb,MAAM,KAAKmb,EAAUtY,QAAQ,GAAG,MAAM,IAAI7C,MAAM,wBAAwBob,EAAO,CAAC,QAAQ,GAAGH,OAAU3Q,EAAE,MAAO,MAAOA,EAAElC,EAAGuD,IAAIrB,IAAI,CAACH,EAAEA,EAAEG,EAAEA,EAAE,CAAC,IAAI+Q,EAAclX,GAAK,EAAc,EAAmBA,EAAIkO,EAAM1F,cAAc,SAAS2O,EAAsBjR,GAAQ,OAAOA,EAAOsQ,GAAa,EAAG,CAAC,MAAMY,EAAO,CAACpe,EAAEwG,EAAKlD,IAAK,EAAmBtD,EAAEmD,MAAMqD,EAAKlD,IAAK,MAAM+a,EAAU,WAAAle,CAAYmN,EAAEqF,EAAE2L,GAAU7d,KAAK6M,EAAEA,EAAE7M,KAAKkS,EAAEA,EAAElS,KAAK6d,SAASA,EAAS7d,KAAKoX,gBAAgB,CAAC,kBAAO0G,CAAYzX,GAAK,MAAMpE,EAAEwS,EAAM1F,YAAY,OAAO1I,EAAI,EAAY,mBAAmBA,EAAI,EAAEpE,GAAG,IAAI2b,EAAUD,EAAOtX,EAAI,EAAEpE,GAAG0b,EAAOtX,EAAIpE,EAAE,EAAEA,GAAG,CAAC,cAAO8b,CAAQ1X,GAAK,MAAMwG,EAAEA,EAAEqF,EAAEA,GAAGe,GAAIW,MAAM,EAAY,MAAMvN,IAAM,OAAO,IAAIuX,EAAU/Q,EAAEqF,EAAE,CAAC,cAAAkF,GAAiB,EAAY,IAAIpX,KAAK6M,EAAE,GAAIkQ,GAAa,EAAY,IAAI/c,KAAKkS,EAAE,GAAI6K,EAAY,CAAC,cAAAiB,CAAeH,GAAU,OAAO,IAAID,EAAU5d,KAAK6M,EAAE7M,KAAKkS,EAAE2L,EAAS,CAAC,gBAAAI,CAAiBC,GAAS,MAAMrR,EAAEA,EAAEqF,EAAEA,EAAE2L,SAASM,GAAKne,KAAKgC,EAAE6a,EAAc,EAAY,UAAUqB,IAAU,GAAG,MAAMC,IAAM,CAAC,EAAE,EAAE,EAAE,GAAGpI,SAASoI,GAAK,MAAM,IAAI/b,MAAM,uBAAuB,MAAMgc,EAAK,IAAID,GAAK,IAAIA,EAAItR,EAAE4H,EAAM9M,EAAEkF,EAAE,GAAGuR,GAAM5T,EAAGgE,MAAM,MAAM,IAAIpM,MAAM,8BAA8B,MAAMic,EAAO,EAAEF,EAAI,KAAK,KAAKG,EAAEnI,EAAMgB,QAAQkH,EAAOZ,EAAcW,IAAOG,EAAGpB,EAAKiB,GAAMI,EAAGtB,GAAMlb,EAAEuc,GAAIE,EAAGvB,EAAKhL,EAAEqM,GAAI5Q,EAAEwI,EAAMoB,KAAKqD,qBAAqB0D,EAAEE,EAAGC,GAAI,IAAI9Q,EAAE,MAAM,IAAIvL,MAAM,qBAAqB,OAAOuL,EAAEyJ,iBAAiBzJ,CAAC,CAAC,QAAA+Q,GAAW,OAAOhB,EAAsB1d,KAAKkS,EAAE,CAAC,UAAAyM,GAAa,OAAO3e,KAAK0e,WAAW,IAAId,EAAU5d,KAAK6M,EAAEqQ,GAAMld,KAAKkS,GAAGlS,KAAK6d,UAAU7d,IAAI,CAAC,aAAA4e,GAAgB,OAAO,EAAc5e,KAAK6e,WAAW,CAAC,QAAAA,GAAW,OAAO5L,GAAIoB,WAAW,CAACxH,EAAE7M,KAAK6M,EAAEqF,EAAElS,KAAKkS,GAAG,CAAC,iBAAA4M,GAAoB,OAAO,EAAc9e,KAAK+e,eAAe,CAAC,YAAAA,GAAe,OAAOtB,EAAczd,KAAK6M,GAAG4Q,EAAczd,KAAKkS,EAAE,EAAE,MAAM8M,EAAM,CAAC,iBAAAC,CAAkB3H,GAAY,IAAI,OAAO1B,EAAuB0B,IAAY,CAAE,CAAC,MAAMtB,GAAO,OAAM,CAAE,CAAC,EAAEJ,uBAAuBA,EAAuBsJ,iBAAiB,KAAK,MAAMhf,EAAOiR,GAAiBsD,EAAM9M,GAAG,OFA3uQ,SAAwBnD,EAAIyM,GAAY,IAAInR,EAAKmI,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,IAAIA,UAAU,GAAG,MAAMvH,EAAI8D,EAAItE,OAAOif,EAASnO,GAAoBC,GAAYmO,EAAOjO,GAAiBF,GAAY,GAAGvQ,EAAI,IAAIA,EAAI0e,GAAQ1e,EAAI,KAAK,MAAM,IAAI0B,MAAM,YAAYgd,EAAO,6BAA6B1e,GAAK,MAAM2e,EAAQpT,GAAInM,EAAK,EAAgB0E,GAAK,EAAgBA,GAAKyM,EAAW,GAAK,EAAI,OAAOnR,EAAK8H,EAAgByX,EAAQF,GAAUzX,EAAgB2X,EAAQF,EAAS,CEA8xPG,CAAe7K,EAAMkI,YAAYzc,GAAQuU,EAAM9M,EAAC,EAAG,UAAA4X,GAAa,IAAI3N,EAAW3J,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,GAAGA,UAAU,GAAG,EAAEoN,EAAMpN,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,GAAGA,UAAU,GAAGkO,EAAMoB,KAAK,OAAOlC,EAAMgD,eAAezG,GAAYyD,EAAMmC,SAAS7V,OAAO,IAAI0T,CAAK,GAAG,SAASmK,EAAU9Z,GAAM,MAAMoD,EAAI,EAAWpD,GAAMyC,EAAI,iBAAiBzC,EAAKhF,GAAKoI,GAAKX,IAAMzC,EAAKxF,OAAO,OAAO4I,EAAIpI,IAAMsc,GAAetc,IAAMuc,EAAgB9U,EAAIzH,IAAM,EAAEsc,GAAetc,IAAM,EAAEuc,EAAgBvX,aAAgByQ,CAAK,CAAC,MAAMyG,EAASnI,EAAMmI,UAAU,SAASxW,GAAO,GAAGA,EAAMlG,OAAO,KAAK,MAAM,IAAIkC,MAAM,sBAAsB,MAAMmE,EAAI,EAAmBH,GAAOqZ,EAAM,EAAErZ,EAAMlG,OAAOuU,EAAM5F,WAAW,OAAO4Q,EAAM,EAAElZ,GAAK5E,OAAO8d,GAAOlZ,CAAG,EAAEsW,EAAcpI,EAAMoI,eAAe,SAASzW,GAAO,OAAO8W,EAAKN,EAASxW,GAAO,EAAEsZ,EAAW,EAAWjL,EAAM5F,YAAY,SAAS8Q,EAAWpZ,GAAK,OAAO,EAAY,WAAWkO,EAAM5F,WAAWtI,EAAI,GAAImZ,GAAY,EAAmBnZ,EAAIkO,EAAM1F,YAAY,CAA2pC,MAAM6Q,EAAe,CAAChN,KAAK6B,EAAM7B,KAAKC,SAAQ,GAAIgN,EAAe,CAACjN,KAAK6B,EAAM7B,KAAKC,SAAQ,GAAI,OAAOsD,EAAMoB,KAAKc,eAAe,GAAG,CAAC5D,MAAMA,EAAMqL,aAAa,SAASxI,GAAY,IAAIyD,IAAe9S,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,KAAKA,UAAU,GAAG,OAAOkO,EAAMkB,eAAeC,GAAYwD,WAAWC,EAAa,EAAEgF,gBAAgB,SAASC,EAASC,GAAS,IAAIlF,IAAe9S,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,KAAKA,UAAU,GAAG,GAAGuX,EAAUQ,GAAU,MAAM,IAAI5d,MAAM,iCAAiC,IAAIod,EAAUS,GAAS,MAAM,IAAI7d,MAAM,iCAAiC,OAAO+T,EAAMgB,QAAQ8I,GAASzI,SAAS5B,EAAuBoK,IAAWlF,WAAWC,EAAa,EAAEmF,KAAK,SAAShC,EAAQiC,GAAS,IAAIxN,EAAK1K,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,GAAGA,UAAU,GAAG2X,EAAe,MAAMpW,KAAKA,EAAK4W,MAAMA,GAAv8D,SAAiBlC,EAAQ5G,GAAY,IAAI3E,EAAK1K,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,GAAGA,UAAU,GAAG2X,EAAe,GAAG,CAAC,YAAY,aAAaS,MAAMjX,GAAGA,KAAKuJ,IAAO,MAAM,IAAIvQ,MAAM,uCAAuC,MAAMkC,KAAKA,EAAKqY,YAAYA,GAAalI,EAAM,IAAI7B,KAAKA,EAAKC,QAAQA,EAAQyN,aAAaC,GAAK5N,EAAK,MAAMC,IAAOA,GAAK,GAAIsL,EAAQ,EAAY,UAAUA,GAASxL,GAAmBC,GAAME,IAAUqL,EAAQ,EAAY,oBAAoB5Z,EAAK4Z,KAAW,MAAMsC,EAAM3D,EAAcqB,GAASvO,EAAEiG,EAAuB0B,GAAYmJ,EAAS,CAACd,EAAWhQ,GAAGgQ,EAAWa,IAAQ,GAAG,MAAMD,IAAK,IAAKA,EAAI,CAAC,MAAMzY,GAAE,IAAKyY,EAAI5D,EAAYnS,EAAGkE,OAAO6R,EAAIE,EAAS9W,KAAK,EAAY,eAAe7B,GAAG,CAAC,MAAM0B,EAAK,KAAkBiX,GAAU3T,EAAE0T,EAAM,MAAM,CAAChX,KAAKA,EAAK4W,MAAM,SAASM,GAAQ,MAAMtX,EAAEwT,EAAS8D,GAAQ,IAAIlE,EAAmBpT,GAAG,OAAO,MAAMuX,EAAGxD,EAAK/T,GAAGwD,EAAEuJ,EAAMoB,KAAKC,SAASpO,GAAGmM,WAAW1I,EAAEqQ,EAAKtQ,EAAEL,GAAG,GAAGM,IAAI,GAAI,OAAO,MAAMqF,EAAEgL,EAAKyD,EAAGzD,EAAKpQ,EAAED,EAAE8C,IAAI,GAAGuC,IAAI,GAAI,OAAO,IAAI2L,GAAUjR,EAAEL,IAAIM,EAAE,EAAE,GAAG/K,OAAO8K,EAAEF,EAAE,IAAKkU,EAAM1O,EAAE,OAAOU,GAAM8K,EAAsBxL,KAAK0O,EAAM,SAAS1O,GAAG,OAAOwL,EAAsBxL,GAAGgL,GAAMhL,GAAGA,CAAC,CAAtD,CAAwDA,GAAG2L,GAAU,GAAG,IAAID,EAAU/Q,EAAE+T,EAAM/C,EAAS,EAAE,CAAqzBgD,CAAQ3C,EAAQiC,EAAQxN,GAAMtP,EAAEoR,EAAM,OAAO,EAAkBpR,EAAEiB,KAAK1E,UAAUyD,EAAE0L,YAAY1L,EAAE2B,KAAnD,CAAyDwE,EAAK4W,EAAM,EAAEU,OAAO,SAASC,EAAU7C,EAAQ8C,GAAW,IAAIrO,EAAK1K,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,GAAGA,UAAU,GAAG4X,EAAe,MAAMoB,EAAGF,EAAU7C,EAAQ,EAAY,UAAUA,GAAS8C,EAAU,EAAY,YAAYA,GAAW,MAAMpO,KAAKA,EAAKC,QAAQA,EAAQqO,OAAOA,GAAQvO,EAAK,GAAGD,GAAmBC,GAAM,WAAWA,EAAK,MAAM,IAAIvQ,MAAM,sCAAsC,QAAG,IAAS8e,GAAQ,YAAYA,GAAQ,QAAQA,EAAO,MAAM,IAAI9e,MAAM,iCAAiC,MAAM+e,EAAM,iBAAiBF,GAAI,EAAWA,GAAIG,GAAOD,IAAQD,GAAQ,iBAAiBD,GAAI,OAAOA,GAAI,iBAAiBA,EAAGpU,GAAG,iBAAiBoU,EAAG/O,EAAE,IAAIiP,IAAQC,EAAM,MAAM,IAAIhf,MAAM,4EAA4E,IAAIif,EAAKrU,EAAE,IAAI,GAAGoU,IAAQC,EAAK,IAAIzD,EAAUqD,EAAGpU,EAAEoU,EAAG/O,IAAIiP,EAAM,CAAC,IAAI,YAAYD,IAASG,EAAKzD,EAAUG,QAAQkD,GAAI,CAAC,MAAMK,GAAU,KAAKA,aAAoBrO,GAAIC,KAAK,MAAMoO,CAAQ,CAACD,GAAM,QAAQH,IAASG,EAAKzD,EAAUE,YAAYmD,GAAI,CAACjU,EAAEmJ,EAAMgB,QAAQ6J,EAAU,CAAC,MAAMhL,GAAO,OAAM,CAAE,CAAC,IAAIqL,EAAK,OAAM,EAAG,GAAGzO,GAAMyO,EAAK3C,WAAW,OAAM,EAAG7L,IAAUqL,EAAQzJ,EAAMnQ,KAAK4Z,IAAU,MAAMrR,EAAEA,EAAEqF,EAAEA,GAAGmP,EAAKrf,EAAE6a,EAAcqB,GAASqD,EAAGpE,EAAKjL,GAAGsM,EAAGtB,EAAKlb,EAAEuf,GAAI9C,EAAGvB,EAAKrQ,EAAE0U,GAAIjD,EAAEnI,EAAMoB,KAAKqD,qBAAqB5N,EAAEwR,EAAGC,IAAKlJ,WAAW,QAAQ+I,GAAGpB,EAAKoB,EAAE/R,KAAKM,CAAC,EAAE0P,gBAAgBpG,EAAMyH,UAAUA,EAAUoB,MAAMA,EAAM,CAA6rC,SAASwC,GAAoBhX,EAAGmI,GAAM,GAAGrE,GAAc9D,IAAKA,EAAGC,QAAQkI,EAAKxP,KAAKqH,EAAGC,QAAQkI,EAAKvP,KAAKoH,EAAGC,QAAQkI,EAAK9E,GAAG,MAAM,IAAIzL,MAAM,qCAAqC,MAAMqf,EAAz2C,SAAwBjX,EAAGqD,GAAG,MAAMjB,EAAEpC,EAAGgE,MAAM,IAAIvM,EAAE,GAAI,IAAI,IAAIyf,EAAE9U,EAAE,GAAI8U,EAAE,KAAM,GAAIA,GAAG,GAAIzf,GAAG,GAAI,MAAMoL,EAAGpL,EAAE0f,EAAa,IAAKtU,EAAG,GAAI,GAAIuU,EAAWD,EAAa,GAAIE,GAAIjV,EAAE,IAAKgV,EAAWE,GAAID,EAAG,IAAK,GAAIE,EAAGH,EAAW,GAAII,EAAGL,EAAaM,EAAGzX,EAAG2B,IAAI0B,EAAEgU,GAAIK,EAAG1X,EAAG2B,IAAI0B,GAAGgU,EAAG,IAAK,IAAK,IAAIJ,EAAU,CAAC9U,EAAExD,KAAK,IAAIgZ,EAAIF,EAAGG,EAAI5X,EAAG2B,IAAIhD,EAAE4Y,GAAIM,EAAI7X,EAAG4C,IAAIgV,GAAKC,EAAI7X,EAAG8C,IAAI+U,EAAIlZ,GAAG,IAAImZ,EAAI9X,EAAG8C,IAAIX,EAAE0V,GAAKC,EAAI9X,EAAG2B,IAAImW,EAAIR,GAAIQ,EAAI9X,EAAG8C,IAAIgV,EAAIF,GAAKA,EAAI5X,EAAG8C,IAAIgV,EAAInZ,GAAGkZ,EAAI7X,EAAG8C,IAAIgV,EAAI3V,GAAG,IAAI4V,EAAI/X,EAAG8C,IAAI+U,EAAID,GAAKE,EAAI9X,EAAG2B,IAAIoW,EAAIP,GAAI,IAAIQ,EAAKhY,EAAG2C,IAAImV,EAAI9X,EAAGiD,KAAK2U,EAAI5X,EAAG8C,IAAI+U,EAAIH,GAAII,EAAI9X,EAAG8C,IAAIiV,EAAIJ,GAAKE,EAAI7X,EAAGqG,KAAKuR,EAAIC,EAAIG,GAAMD,EAAI/X,EAAGqG,KAAKyR,EAAIC,EAAIC,GAAM,IAAI,IAAIlhB,EAAE+L,EAAG/L,EAAE,GAAIA,IAAI,CAAC,IAAIghB,EAAIhhB,EAAE,GAAIghB,EAAI,IAAKA,EAAI,GAAI,IAAIG,EAAKjY,EAAG2B,IAAIoW,EAAID,GAAK,MAAMI,EAAGlY,EAAG2C,IAAIsV,EAAKjY,EAAGiD,KAAK2U,EAAI5X,EAAG8C,IAAI+U,EAAIF,GAAKA,EAAI3X,EAAG8C,IAAI6U,EAAIA,GAAKM,EAAKjY,EAAG8C,IAAIiV,EAAIJ,GAAKE,EAAI7X,EAAGqG,KAAKuR,EAAIC,EAAIK,GAAIH,EAAI/X,EAAGqG,KAAK4R,EAAKF,EAAIG,EAAG,CAAC,MAAM,CAACjY,QAAQ+X,EAAKhhB,MAAM6gB,EAAG,EAAG,GAAG7X,EAAGgE,MAAM,KAAM,GAAI,CAAC,MAAMnB,GAAI7C,EAAGgE,MAAM,IAAK,GAAIqT,EAAGrX,EAAG2F,KAAK3F,EAAGuD,IAAIF,IAAI4T,EAAU,CAAC9U,EAAExD,KAAK,IAAIgZ,EAAI3X,EAAG4C,IAAIjE,GAAG,MAAMiZ,EAAI5X,EAAG8C,IAAIX,EAAExD,GAAGgZ,EAAI3X,EAAG8C,IAAI6U,EAAIC,GAAK,IAAIO,EAAGnY,EAAG2B,IAAIgW,EAAI9U,GAAIsV,EAAGnY,EAAG8C,IAAIqV,EAAGP,GAAK,MAAM9E,EAAG9S,EAAG8C,IAAIqV,EAAGd,GAAIQ,EAAI7X,EAAG8C,IAAI9C,EAAG4C,IAAIuV,GAAIxZ,GAAGqZ,EAAKhY,EAAG2C,IAAIkV,EAAI1V,GAAG,MAAM,CAAClC,QAAQ+X,EAAKhhB,MAAMgJ,EAAGqG,KAAKyM,EAAGqF,EAAGH,GAAK,CAAE,CAAC,OAAOf,CAAS,CAAsMmB,CAAepY,EAAGmI,EAAK9E,GAAG,IAAIrD,EAAG8E,MAAM,MAAM,IAAIlN,MAAM,gCAAgC,OAAOuK,IAAI,IAAIwV,EAAIC,EAAIC,EAAIE,EAAID,EAAIO,EAAItW,EAAEG,EAAEyV,EAAI3X,EAAG4C,IAAIT,GAAGwV,EAAI3X,EAAG8C,IAAI6U,EAAIxP,EAAK9E,GAAGuU,EAAI5X,EAAG4C,IAAI+U,GAAKC,EAAI5X,EAAGiF,IAAI2S,EAAID,GAAKE,EAAI7X,EAAGiF,IAAI2S,EAAI5X,EAAGiD,KAAK4U,EAAI7X,EAAG8C,IAAI+U,EAAI1P,EAAKvP,GAAGmf,EAAI/X,EAAGqG,KAAK8B,EAAK9E,EAAErD,EAAGuD,IAAIqU,IAAM5X,EAAG2C,IAAIiV,EAAI5X,EAAGyD,OAAOsU,EAAI/X,EAAG8C,IAAIiV,EAAI5P,EAAKxP,GAAGif,EAAI5X,EAAG4C,IAAIiV,GAAKQ,EAAIrY,EAAG4C,IAAImV,GAAKD,EAAI9X,EAAG8C,IAAIuV,EAAIlQ,EAAKxP,GAAGif,EAAI5X,EAAGiF,IAAI2S,EAAIE,GAAKF,EAAI5X,EAAG8C,IAAI8U,EAAIC,GAAKQ,EAAIrY,EAAG8C,IAAIuV,EAAIN,GAAKD,EAAI9X,EAAG8C,IAAIuV,EAAIlQ,EAAKvP,GAAGgf,EAAI5X,EAAGiF,IAAI2S,EAAIE,GAAK/V,EAAE/B,EAAG8C,IAAI6U,EAAIE,GAAK,MAAM5X,QAAQA,EAAQjJ,MAAMA,GAAOigB,EAAUW,EAAIS,GAAKnW,EAAElC,EAAG8C,IAAI6U,EAAIxV,GAAGD,EAAElC,EAAG8C,IAAIZ,EAAElL,GAAO+K,EAAE/B,EAAGqG,KAAKtE,EAAE8V,EAAI5X,GAASiC,EAAElC,EAAGqG,KAAKnE,EAAElL,EAAMiJ,GAAS,MAAMiY,EAAGlY,EAAG8E,MAAM3C,KAAKnC,EAAG8E,MAAM5C,GAAG,OAAOA,EAAElC,EAAGqG,KAAKrG,EAAGuD,IAAIrB,GAAGA,EAAEgW,GAAInW,EAAE/B,EAAGqF,IAAItD,EAAEgW,GAAK,CAAChW,EAAEA,EAAEG,EAAEA,EAAC,CAAE,CCAn2pB,SAASoW,GAAQxe,GAAM,MAAM,CAACA,KAAKA,EAAKU,KAAK,SAASR,GAAK,IAAI,IAAI8E,EAAKrB,UAAU/H,OAAO6iB,EAAK,IAAIjd,MAAMwD,EAAK,EAAEA,EAAK,EAAE,GAAG/E,EAAK,EAAEA,EAAK+E,EAAK/E,IAAOwe,EAAKxe,EAAK,GAAG0D,UAAU1D,GAAM,OAAOS,EAAKV,EAAKE,GAAI,WAAeue,GAAM,EAAEpG,YAAY,KAAY,CCAtR,MAAMqG,GAAM,EAAgB,SAASC,GAAMzhB,EAAMtB,GAAQ,GAAGgjB,GAAK1hB,GAAO0hB,GAAKhjB,GAAQsB,EAAM,GAAGA,GAAO,GAAG,EAAEtB,EAAO,MAAM,IAAIkC,MAAM,wBAAwBZ,GAAO,MAAMiB,EAAIqD,MAAMC,KAAK,CAAC7F,OAAOA,IAASmB,KAAK,GAAG,IAAI,IAAIC,EAAEpB,EAAO,EAAEoB,GAAG,EAAEA,IAAImB,EAAInB,GAAG,IAAIE,EAAMA,KAAS,EAAE,OAAO,IAAIlB,WAAWmC,EAAI,CAAC,SAAS0gB,GAAO7jB,EAAEC,GAAG,MAAMuJ,EAAI,IAAIxI,WAAWhB,EAAEY,QAAQ,IAAI,IAAIoB,EAAE,EAAEA,EAAEhC,EAAEY,OAAOoB,IAAIwH,EAAIxH,GAAGhC,EAAEgC,GAAG/B,EAAE+B,GAAG,OAAOwH,CAAG,CAAC,SAASoa,GAAKxd,GAAM,IAAI5D,OAAOsI,cAAc1E,GAAM,MAAM,IAAItD,MAAM,kBAAkB,CAA8qC,SAASghB,GAAcC,EAAIC,EAAMC,GAAS7Y,EAAe6Y,EAAQ,CAACC,IAAI,qBAAqB9T,EAAE,SAAS5C,EAAE,gBAAgB1D,EAAE,gBAAgB9E,KAAK,SAAS,MAAMoL,EAAEA,EAAEtG,EAAEA,EAAE0D,EAAEA,EAAExI,KAAKA,EAAKmf,OAAOA,EAAOD,IAAIE,GAAMH,EAAQ9d,EAAO4d,GAAKH,GAAKI,GAAO,MAAME,EAAI,iBAAiBE,EAAKxb,EAAYwb,GAAMA,EAAKC,EAAMjU,EAAEzJ,SAAS,GAAG/F,OAAO0jB,EAAEhjB,KAAKoO,MAAM2U,EAAMva,GAAG,GAAGya,EAAaP,EAAMxW,EAAE8W,EAAE,IAAIE,EAAI,GAAG,QAAQL,EAAOK,EAA9iD,SAA4BT,EAAIG,EAAIO,EAAWrgB,GAAG+B,EAAO4d,GAAK5d,EAAO+d,GAAKN,GAAKa,GAAYP,EAAItjB,OAAO,MAAMsjB,EAAI9f,EAAEqE,EAAYG,EAAY,qBAAqBsb,KAAO,MAAM5jB,UAAUokB,EAAWrkB,SAASskB,GAAYvgB,EAAEwgB,EAAItjB,KAAKoO,KAAK+U,EAAWC,GAAY,GAAGD,EAAW,OAAOG,EAAI,IAAI,MAAM,IAAI9hB,MAAM,0CAA0C,MAAM+hB,EAAUpc,EAAYyb,EAAIP,GAAMO,EAAItjB,OAAO,IAAIkkB,EAAMnB,GAAM,EAAEgB,GAAYI,EAAUpB,GAAMc,EAAW,GAAGxkB,EAAE,IAAIuG,MAAMoe,GAAKI,EAAI5gB,EAAEqE,EAAYqc,EAAMf,EAAIgB,EAAUpB,GAAM,EAAE,GAAGkB,IAAY5kB,EAAE,GAAGmE,EAAEqE,EAAYuc,EAAIrB,GAAM,EAAE,GAAGkB,IAAY,IAAI,IAAI7iB,EAAE,EAAEA,GAAG4iB,EAAI5iB,IAAI,CAAC,MAAMoK,EAAK,CAACyX,GAAOmB,EAAI/kB,EAAE+B,EAAE,IAAI2hB,GAAM3hB,EAAE,EAAE,GAAG6iB,GAAW5kB,EAAE+B,GAAGoC,EAAEqE,KAAe2D,GAAM,CAAC,OAAO3D,KAAexI,GAAGmD,MAAM,EAAEqhB,EAAW,CAA61BQ,CAAmBlB,EAAIG,EAAIK,EAAavf,QAAW,GAAG,QAAQmf,EAAOK,EAA15B,SAA4BT,EAAIG,EAAIO,EAAW3a,EAAE1F,GAAG,GAAG+B,EAAO4d,GAAK5d,EAAO+d,GAAKN,GAAKa,GAAYP,EAAItjB,OAAO,IAAI,CAAC,MAAMskB,EAAM5jB,KAAKoO,KAAK,EAAE5F,EAAE,GAAGoa,EAAI9f,EAAEgB,OAAO,CAAC8f,MAAMA,IAAQhkB,OAAO0H,EAAY,sBAAsB1H,OAAOgjB,GAAKhhB,QAAQ,CAAC,GAAGuhB,EAAW,OAAOP,EAAItjB,OAAO,IAAI,MAAM,IAAIkC,MAAM,0CAA0C,OAAOsB,EAAEgB,OAAO,CAAC8f,MAAMT,IAAavjB,OAAO6iB,GAAK7iB,OAAOyiB,GAAMc,EAAW,IAAIvjB,OAAOgjB,GAAKhjB,OAAOyiB,GAAMO,EAAItjB,OAAO,IAAIsC,QAAQ,CAA6diiB,CAAmBpB,EAAIG,EAAIK,EAAaza,EAAE9E,OAAU,CAAC,GAAG,mBAAmBmf,EAAO,MAAM,IAAIrhB,MAAM,iCAAiC0hB,EAAIT,CAAG,CAAC,MAAM1W,EAAE,IAAI7G,MAAMwd,GAAO,IAAI,IAAIhiB,EAAE,EAAEA,EAAEgiB,EAAMhiB,IAAI,CAAC,MAAMwG,EAAE,IAAIhC,MAAMgH,GAAG,IAAI,IAAIiL,EAAE,EAAEA,EAAEjL,EAAEiL,IAAI,CAAC,MAAM2M,EAAWd,GAAG7L,EAAEzW,EAAEwL,GAAG6X,EAAGb,EAAI/iB,SAAS2jB,EAAWA,EAAWd,GAAG9b,EAAEiQ,GAAG9L,GAAI+W,GAAM2B,GAAIjV,EAAE,CAAC/C,EAAErL,GAAGwG,CAAC,CAAC,OAAO6E,CAAC,CCAlpE,MAAMiY,GAAWjjB,OAAO,sEAAsEkjB,GAAWljB,OAAO,sEAAsE,GAAIA,OAAO,GAAG,GAAIA,OAAO,GAAGmjB,GAAW,CAACxlB,EAAEC,KAAKD,EAAEC,EAAE,IAAKA,EAAE,SAASwlB,GAAQrY,GAAG,MAAMM,EAAE4X,GAAW/Y,EAAIlK,OAAO,GAAGqjB,EAAIrjB,OAAO,GAAGsjB,EAAKtjB,OAAO,IAAIujB,EAAKvjB,OAAO,IAAIwjB,EAAKxjB,OAAO,IAAIyjB,EAAKzjB,OAAO,IAAI0jB,EAAK1jB,OAAO,IAAI2jB,EAAG5Y,EAAEA,EAAEA,EAAEM,EAAEkM,EAAGoM,EAAGA,EAAG5Y,EAAEM,EAAEuY,EAAGjZ,GAAK4M,EAAGrN,EAAImB,GAAGkM,EAAGlM,EAAEwY,EAAGlZ,GAAKiZ,EAAG1Z,EAAImB,GAAGkM,EAAGlM,EAAEyY,EAAInZ,GAAKkZ,EAAG,GAAIxY,GAAGsY,EAAGtY,EAAE0Y,EAAIpZ,GAAKmZ,EAAIR,EAAKjY,GAAGyY,EAAIzY,EAAE2Y,EAAIrZ,GAAKoZ,EAAIR,EAAKlY,GAAG0Y,EAAI1Y,EAAE4Y,EAAItZ,GAAKqZ,EAAIP,EAAKpY,GAAG2Y,EAAI3Y,EAAE6Y,EAAKvZ,GAAKsZ,EAAIP,EAAKrY,GAAG4Y,EAAI5Y,EAAE8Y,EAAKxZ,GAAKuZ,EAAKT,EAAKpY,GAAG2Y,EAAI3Y,EAAE+Y,EAAKzZ,GAAKwZ,EAAKja,EAAImB,GAAGkM,EAAGlM,EAAEuM,EAAGjN,GAAKyZ,EAAKZ,EAAKnY,GAAG0Y,EAAI1Y,EAAEkB,EAAG5B,GAAKiN,EAAGyL,EAAIhY,GAAGsY,EAAGtY,EAAEE,EAAKZ,GAAK4B,EAAG,GAAIlB,GAAG,IAAIgZ,GAAK7Y,IAAI6Y,GAAK5Y,IAAIF,GAAMR,GAAG,MAAM,IAAItK,MAAM,2BAA2B,OAAO8K,CAAI,CAAC,MAAM8Y,GAAK/W,GAAM2V,QAAW,OAAO,EAAO,CAACzU,KAAK4U,KAAuBkB,GFAj3B,SAAqBvJ,EAASwJ,GAAS,MAAMxhB,EAAOJ,GAAMmY,GAAY,IAAIC,KAAYoG,GAAQxe,KAAQ,MAAM,IAAII,EAAOwhB,GAASxhB,OAAOA,EAAO,CEA6uByhB,CAAY,CAAC7mB,EAAEqC,OAAO,GAAGpC,EAAEoC,OAAO,GAAG6I,GAAGwb,GAAKre,EAAEkd,GAAWrS,GAAG7Q,OAAO,iFAAiF8Q,GAAG9Q,OAAO,iFAAiFK,EAAEL,OAAO,GAAGiR,MAAK,EAAGmC,KAAK,CAACC,KAAKrT,OAAO,sEAAsEsT,YAAY7L,IAAI,MAAMzB,EAAEkd,GAAWuB,EAAGzkB,OAAO,sCAAsC0kB,GAAI,GAAI1kB,OAAO,sCAAsC2kB,EAAG3kB,OAAO,uCAAuC2jB,EAAGc,EAAGG,EAAU5kB,OAAO,uCAAuC0L,EAAGyX,GAAWQ,EAAGlc,EAAEzB,GAAGka,EAAGiD,IAAYuB,EAAGjd,EAAEzB,GAAG,IAAIyS,EAAGnO,GAAI7C,EAAEiE,EAAG+Y,EAAGvE,EAAGyE,EAAG3e,GAAG2S,EAAGrO,IAAKoB,EAAGgZ,EAAGxE,EAAGyD,EAAG3d,GAAG,MAAMwS,EAAMC,EAAGmM,EAAUlM,EAAMC,EAAGiM,EAAU,GAAGpM,IAAQC,EAAGzS,EAAEyS,GAAIC,IAAQC,EAAG3S,EAAE2S,GAAIF,EAAGmM,GAAWjM,EAAGiM,EAAU,MAAM,IAAInkB,MAAM,uCAAuCgH,GAAG,MAAM,CAAC+Q,MAAMA,EAAMC,GAAGA,EAAGC,MAAMA,EAAMC,GAAGA,EAAE,IAAKlW,GAAc,GAAIzC,OAAO,GAAG6kB,GAAqB,CAAC,EAAE,SAASC,GAAWrT,GAAK,IAAIsT,EAAKF,GAAqBpT,GAAK,QAAG,IAASsT,EAAK,CAAC,MAAMC,EAAKviB,EAAO9D,WAAWyF,KAAKqN,GAAK5T,GAAGA,EAAE8H,WAAW,MAAMof,EAAK3e,EAAY4e,EAAKA,GAAMH,GAAqBpT,GAAKsT,CAAI,CAAC,IAAI,IAAIpd,EAAKrB,UAAU/H,OAAO0mB,EAAS,IAAI9gB,MAAMwD,EAAK,EAAEA,EAAK,EAAE,GAAG/E,EAAK,EAAEA,EAAK+E,EAAK/E,IAAOqiB,EAASriB,EAAK,GAAG0D,UAAU1D,GAAM,OAAOH,EAAO2D,EAAY2e,KAAQE,GAAU,CAAC,MAAMC,GAAaxR,GAAOA,EAAMyF,YAAW,GAAIpY,MAAM,GAAGokB,GAASnf,GAAGD,EAAgBC,EAAE,IAAIof,GAAKxa,GAAGN,GAAIM,EAAEqY,IAAY1H,GAAK3Q,GAAGN,GAAIM,EAAEsY,IAAY1O,GAAM8P,GAAU1J,gBAAwE,SAASyK,GAAoBC,GAAM,IAAIC,EAAGjB,GAAUjH,MAAMpJ,uBAAuBqR,GAAMvX,EAAEyG,GAAMkB,eAAe6P,GAAI,MAAM,CAAClP,OAAOtI,EAAE8I,WAAW0O,EAAGhK,IAAMgK,GAAI9gB,MAAMygB,GAAanX,GAAG,CAAC,SAASyX,GAAO5a,GAAG9D,EAAS,IAAI8D,EAAE,GAAIqY,IAAY,MAAMwC,EAAGL,GAAKxa,EAAEA,GAAG,IAAIG,EAAEqY,GAAQgC,GAAKK,EAAG7a,EAAE5K,OAAO,KAAK+K,EAAE,KAAM,KAAMA,EAAEqa,IAAMra,IAAI,MAAMgD,EAAE,IAAIyG,GAAM5J,EAAEG,EAAE,IAAK,OAAOgD,EAAE0H,iBAAiB1H,CAAC,CAAC,MAAMnJ,GAAI,EAAgB,SAAS8gB,KAAY,IAAI,IAAI5b,EAAMxD,UAAU/H,OAAOwL,EAAK,IAAI5F,MAAM2F,GAAOE,EAAM,EAAEA,EAAMF,EAAME,IAAQD,EAAKC,GAAO1D,UAAU0D,GAAO,OAAOuR,GAAK3W,GAAIkgB,GAAW,uBAAuB/a,IAAO,CAAC,SAAS4b,GAAoBhQ,GAAY,OAAO0P,GAAoB1P,GAAYlR,KAAK,CAAC,SAASmhB,GAAYtiB,EAAQqS,GAAY,IAAIkQ,EAAQvf,UAAU/H,OAAO,QAAG,IAAS+H,UAAU,GAAGA,UAAU,IAAG,QAAY,IAAI,MAAM6E,EAAE,EAAY,UAAU7H,IAAUmB,MAAMkQ,EAAG0B,OAAOrI,GAAGqX,GAAoB1P,GAAYhY,EAAE,EAAY,UAAUkoB,EAAQ,IAAIC,EAAEX,GAASnX,EAAEpJ,GAAIkgB,GAAW,cAAcnnB,KAAKooB,EAAKjB,GAAW,gBAAgBgB,EAAEnR,EAAGxJ,GAAG6a,EAAGzK,GAAK3W,GAAImhB,IAAO,GAAGC,IAAK,GAAI,MAAM,IAAIvlB,MAAM,0BAA0B,MAAMgE,MAAMwhB,EAAG5P,OAAO5O,GAAG4d,GAAoBW,GAAI7f,EAAEuf,GAAUO,EAAGtR,EAAGxJ,GAAGwH,EAAI,IAAIhU,WAAW,IAAI,GAAGgU,EAAIxT,IAAI8mB,EAAG,GAAGtT,EAAIxT,IAAIgmB,GAAS5J,GAAK9T,EAAEtB,EAAE6H,IAAI,KAAKkY,GAAcvT,EAAIxH,EAAEwJ,GAAI,MAAM,IAAIlU,MAAM,oCAAoC,OAAOkS,CAAG,CAAC,SAASuT,GAAc9G,EAAU9b,EAAQ+b,GAAW,MAAM1M,EAAI,EAAY,YAAYyM,EAAU,IAAIjU,EAAE,EAAY,UAAU7H,GAAS6iB,EAAI,EAAY,YAAY9G,EAAU,IAAI,IAAI,MAAMhU,EAAEma,GAAO5gB,GAAIuhB,IAAMjb,EAAEtG,GAAI+N,EAAIvT,SAAS,EAAE,KAAK,IAAIwH,EAAQsE,EAAE,GAAI+X,IAAY,OAAM,EAAG,MAAM1S,EAAE3L,GAAI+N,EAAIvT,SAAS,GAAG,KAAK,IAAIwH,EAAQ2J,EAAE,GAAI2S,IAAY,OAAM,EAAG,MAAM/c,EAAEuf,GAAUP,GAASja,GAAGga,GAAa7Z,GAAGF,GAAGwR,GAAhtD3Q,EAA0tDX,EAAxtD1N,EAA0tD4S,EAAxtD3S,EAA0tD2d,IAAMpV,GAA5tDqO,GAAMoB,KAAKqD,qBAAqBjN,EAAErO,EAAEC,IAA4rD,SAAS+e,IAAIA,EAAE9F,YAAY8F,EAAE/I,WAAWhJ,IAAIM,EAAE,CAAC,MAAMmJ,GAAO,OAAM,CAAE,CAA7yD,IAACrI,EAAErO,EAAEC,CAAyyD,CAA4H0mB,GAAUjH,MAAME,iBAApI,MAAuS6I,GDAtxE,SAAoBzd,EAAMgB,GAAK,MAAM0c,EAAM1c,EAAIA,KAAKhK,GAAGwE,MAAMC,KAAKzE,GAAGmG,YAAY,MAAM,CAAC8E,EAAEG,KAAK,MAAMub,EAAKC,EAAKC,EAAKC,GAAMJ,EAAM1c,KAAKvB,GAAKA,EAAIwE,QAAO,CAAEkC,EAAInP,IAAIgJ,EAAMmF,IAAInF,EAAMgD,IAAImD,EAAIlE,GAAGjL,OAAO,OAAOiL,EAAEjC,EAAMuF,IAAIoY,EAAKC,GAAMxb,EAAEpC,EAAMgD,IAAIZ,EAAEpC,EAAMuF,IAAIsY,EAAKC,IAAO,CAAC7b,EAAEA,EAAEG,EAAEA,EAAC,CAAE,CCAqhE2b,CAAWrC,GAAK,CAAC,CAAC,qEAAqE,oEAAoE,qEAAqE,sEAAsE,CAAC,qEAAqE,qEAAqE,sEAAsE,CAAC,qEAAqE,qEAAqE,qEAAqE,sEAAsE,CAAC,qEAAqE,qEAAqE,qEAAqE,uEAAuE1a,KAAKhK,GAAGA,EAAEgK,KAAKyM,GAAGpW,OAAOoW,QAAWuQ,GAAY9G,GAAoBwE,GAAK,CAAC7iB,EAAExB,OAAO,sEAAsEyB,EAAEzB,OAAO,QAAQkM,EAAEmY,GAAKthB,OAAO/C,OAAO,UAAa4mB,GDA7vG,SAAsBpS,EAAMqS,EAAWC,GAAK,GAAG,mBAAmBD,EAAW,MAAM,IAAIpmB,MAAM,gCAAgC,MAAM,CAAC,WAAAsmB,CAAYrF,EAAIE,GAAS,MAAM5W,EAAEyW,GAAcC,EAAI,EAAE,IAAIoF,EAAIjF,IAAIiF,EAAIjF,OAAOD,IAAUoF,EAAGxS,EAAMa,WAAWwR,EAAW7b,EAAE,KAAK6R,EAAGrI,EAAMa,WAAWwR,EAAW7b,EAAE,KAAKK,EAAE2b,EAAGlZ,IAAI+O,GAAI3J,gBAAgB,OAAO7H,EAAEoK,iBAAiBpK,CAAC,EAAE,aAAA4b,CAAcvF,EAAIE,GAAS,MAAM5W,EAAEyW,GAAcC,EAAI,EAAE,IAAIoF,EAAIjF,IAAIiF,EAAII,aAAatF,IAAUvW,EAAEmJ,EAAMa,WAAWwR,EAAW7b,EAAE,KAAKkI,gBAAgB,OAAO7H,EAAEoK,iBAAiBpK,CAAC,EAAE,UAAAwb,CAAWvW,GAAS,IAAInM,MAAMuE,QAAQ4H,GAAS,MAAM,IAAI7P,MAAM,yCAAyC,IAAI,MAAMd,KAAK2Q,EAAQ,GAAG,iBAAiB3Q,EAAE,MAAM,IAAIc,MAAM,yCAAyC,MAAM4K,EAAEmJ,EAAMa,WAAWwR,EAAWvW,IAAU4C,gBAAgB,OAAO7H,EAAEoK,iBAAiBpK,CAAC,EAAE,CCA68E8b,CAAa7C,GAAU1J,iBAAiBtK,IAAU,MAAM1F,EAAEA,EAAEG,EAAEA,GAAG4b,GAAOtC,GAAKthB,OAAOuN,EAAQ,KAAK,OAAO8V,GAAOxb,EAAEG,EAAG,GAAE,CAAC8W,IAAI,iCAAiCqF,UAAU,iCAAiCnZ,EAAEsW,GAAKxX,MAAM1B,EAAE,EAAE1D,EAAE,IAAIqa,OAAO,MAAMnf,KAAKF,IAA0CmkB,GAAIG,YAA+CH,GAAIK,a","sources":["../node_modules/@noble/hashes/esm/_md.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/curves/esm/abstract/utils.js","../node_modules/@noble/curves/esm/abstract/modular.js","../node_modules/@noble/curves/esm/abstract/curve.js","../node_modules/@noble/curves/esm/abstract/weierstrass.js","../node_modules/@noble/curves/esm/_shortw_utils.js","../node_modules/@noble/curves/esm/abstract/hash-to-curve.js","../node_modules/@noble/curves/esm/secp256k1.js"],"sourcesContent":["import{aexists,aoutput}from\"./_assert.js\";import{Hash,createView,toBytes}from\"./utils.js\";export function setBigUint64(view,byteOffset,value,isLE){if(\"function\"==typeof view.setBigUint64)return view.setBigUint64(byteOffset,value,isLE);const _32n=BigInt(32),_u32_max=BigInt(4294967295),wh=Number(value>>_32n&_u32_max),wl=Number(value&_u32_max),h=isLE?4:0,l=isLE?0:4;view.setUint32(byteOffset+h,wh,isLE),view.setUint32(byteOffset+l,wl,isLE)}export function Chi(a,b,c){return a&b^~a&c}export function Maj(a,b,c){return a&b^a&c^b&c}export class HashMD extends Hash{constructor(blockLen,outputLen,padOffset,isLE){super(),this.blockLen=blockLen,this.outputLen=outputLen,this.padOffset=padOffset,this.isLE=isLE,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(blockLen),this.view=createView(this.buffer)}update(data){aexists(this);const{view:view,buffer:buffer,blockLen:blockLen}=this,len=(data=toBytes(data)).length;for(let pos=0;pos<len;){const take=Math.min(blockLen-this.pos,len-pos);if(take!==blockLen)buffer.set(data.subarray(pos,pos+take),this.pos),this.pos+=take,pos+=take,this.pos===blockLen&&(this.process(view,0),this.pos=0);else{const dataView=createView(data);for(;blockLen<=len-pos;pos+=blockLen)this.process(dataView,pos)}}return this.length+=data.length,this.roundClean(),this}digestInto(out){aexists(this),aoutput(out,this),this.finished=!0;const{buffer:buffer,view:view,blockLen:blockLen,isLE:isLE}=this;let{pos:pos}=this;buffer[pos++]=128,this.buffer.subarray(pos).fill(0),this.padOffset>blockLen-pos&&(this.process(view,0),pos=0);for(let i=pos;i<blockLen;i++)buffer[i]=0;setBigUint64(view,blockLen-8,BigInt(8*this.length),isLE),this.process(view,0);const oview=createView(out),len=this.outputLen;if(len%4)throw new Error(\"_sha2: outputLen should be aligned to 32bit\");const outLen=len/4,state=this.get();if(outLen>state.length)throw new Error(\"_sha2: outputLen bigger than state\");for(let i=0;i<outLen;i++)oview.setUint32(4*i,state[i],isLE)}digest(){const{buffer:buffer,outputLen:outputLen}=this;this.digestInto(buffer);const res=buffer.slice(0,outputLen);return this.destroy(),res}_cloneInto(to){to||(to=new this.constructor),to.set(...this.get());const{blockLen:blockLen,buffer:buffer,length:length,finished:finished,destroyed:destroyed,pos:pos}=this;return to.length=length,to.pos=pos,to.finished=finished,to.destroyed=destroyed,length%blockLen&&to.buffer.set(buffer),to}}","import{Chi,HashMD,Maj}from\"./_md.js\";import{rotr,wrapConstructor}from\"./utils.js\";const SHA256_K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),SHA256_IV=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),SHA256_W=new Uint32Array(64);export class SHA256 extends HashMD{constructor(){super(64,32,8,!1),this.A=0|SHA256_IV[0],this.B=0|SHA256_IV[1],this.C=0|SHA256_IV[2],this.D=0|SHA256_IV[3],this.E=0|SHA256_IV[4],this.F=0|SHA256_IV[5],this.G=0|SHA256_IV[6],this.H=0|SHA256_IV[7]}get(){const{A:A,B:B,C:C,D:D,E:E,F:F,G:G,H:H}=this;return[A,B,C,D,E,F,G,H]}set(A,B,C,D,E,F,G,H){this.A=0|A,this.B=0|B,this.C=0|C,this.D=0|D,this.E=0|E,this.F=0|F,this.G=0|G,this.H=0|H}process(view,offset){for(let i=0;i<16;i++,offset+=4)SHA256_W[i]=view.getUint32(offset,!1);for(let i=16;i<64;i++){const W15=SHA256_W[i-15],W2=SHA256_W[i-2],s0=rotr(W15,7)^rotr(W15,18)^W15>>>3,s1=rotr(W2,17)^rotr(W2,19)^W2>>>10;SHA256_W[i]=s1+SHA256_W[i-7]+s0+SHA256_W[i-16]|0}let{A:A,B:B,C:C,D:D,E:E,F:F,G:G,H:H}=this;for(let i=0;i<64;i++){const T1=H+(rotr(E,6)^rotr(E,11)^rotr(E,25))+Chi(E,F,G)+SHA256_K[i]+SHA256_W[i]|0,T2=(rotr(A,2)^rotr(A,13)^rotr(A,22))+Maj(A,B,C)|0;H=G,G=F,F=E,E=D+T1|0,D=C,C=B,B=A,A=T1+T2|0}A=A+this.A|0,B=B+this.B|0,C=C+this.C|0,D=D+this.D|0,E=E+this.E|0,F=F+this.F|0,G=G+this.G|0,H=H+this.H|0,this.set(A,B,C,D,E,F,G,H)}roundClean(){SHA256_W.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}class SHA224 extends SHA256{constructor(){super(),this.A=-1056596264,this.B=914150663,this.C=812702999,this.D=-150054599,this.E=-4191439,this.F=1750603025,this.G=1694076839,this.H=-1090891868,this.outputLen=28}}export const sha256=wrapConstructor((()=>new SHA256));export const sha224=wrapConstructor((()=>new SHA224));","import{abytes,aexists,ahash}from\"./_assert.js\";import{Hash,toBytes}from\"./utils.js\";export class HMAC extends Hash{constructor(hash,_key){super(),this.finished=!1,this.destroyed=!1,ahash(hash);const key=toBytes(_key);if(this.iHash=hash.create(),\"function\"!=typeof this.iHash.update)throw new Error(\"Expected instance of class which extends utils.Hash\");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const blockLen=this.blockLen,pad=new Uint8Array(blockLen);pad.set(key.length>blockLen?hash.create().update(key).digest():key);for(let i=0;i<pad.length;i++)pad[i]^=54;this.iHash.update(pad),this.oHash=hash.create();for(let i=0;i<pad.length;i++)pad[i]^=106;this.oHash.update(pad),pad.fill(0)}update(buf){return aexists(this),this.iHash.update(buf),this}digestInto(out){aexists(this),abytes(out,this.outputLen),this.finished=!0,this.iHash.digestInto(out),this.oHash.update(out),this.oHash.digestInto(out),this.destroy()}digest(){const out=new Uint8Array(this.oHash.outputLen);return this.digestInto(out),out}_cloneInto(to){to||(to=Object.create(Object.getPrototypeOf(this),{}));const{oHash:oHash,iHash:iHash,finished:finished,destroyed:destroyed,blockLen:blockLen,outputLen:outputLen}=this;return to.finished=finished,to.destroyed=destroyed,to.blockLen=blockLen,to.outputLen=outputLen,to.oHash=oHash._cloneInto(to.oHash),to.iHash=iHash._cloneInto(to.iHash),to}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}export const hmac=(hash,key,message)=>new HMAC(hash,key).update(message).digest();hmac.create=(hash,key)=>new HMAC(hash,key);","const _0n=BigInt(0),_1n=BigInt(1),_2n=BigInt(2);export function isBytes(a){return a instanceof Uint8Array||ArrayBuffer.isView(a)&&\"Uint8Array\"===a.constructor.name}export function abytes(item){if(!isBytes(item))throw new Error(\"Uint8Array expected\")}export function abool(title,value){if(\"boolean\"!=typeof value)throw new Error(title+\" boolean expected, got \"+value)}const hexes=Array.from({length:256},((_,i)=>i.toString(16).padStart(2,\"0\")));export function bytesToHex(bytes){abytes(bytes);let hex=\"\";for(let i=0;i<bytes.length;i++)hex+=hexes[bytes[i]];return hex}export function numberToHexUnpadded(num){const hex=num.toString(16);return 1&hex.length?\"0\"+hex:hex}export function hexToNumber(hex){if(\"string\"!=typeof hex)throw new Error(\"hex string expected, got \"+typeof hex);return\"\"===hex?_0n:BigInt(\"0x\"+hex)}const asciis={_0:48,_9:57,A:65,F:70,a:97,f:102};function asciiToBase16(ch){return ch>=asciis._0&&ch<=asciis._9?ch-asciis._0:ch>=asciis.A&&ch<=asciis.F?ch-(asciis.A-10):ch>=asciis.a&&ch<=asciis.f?ch-(asciis.a-10):void 0}export function hexToBytes(hex){if(\"string\"!=typeof hex)throw new Error(\"hex string expected, got \"+typeof hex);const hl=hex.length,al=hl/2;if(hl%2)throw new Error(\"hex string expected, got unpadded hex of length \"+hl);const array=new Uint8Array(al);for(let ai=0,hi=0;ai<al;ai++,hi+=2){const n1=asciiToBase16(hex.charCodeAt(hi)),n2=asciiToBase16(hex.charCodeAt(hi+1));if(void 0===n1||void 0===n2){const char=hex[hi]+hex[hi+1];throw new Error('hex string expected, got non-hex character \"'+char+'\" at index '+hi)}array[ai]=16*n1+n2}return array}export function bytesToNumberBE(bytes){return hexToNumber(bytesToHex(bytes))}export function bytesToNumberLE(bytes){return abytes(bytes),hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()))}export function numberToBytesBE(n,len){return hexToBytes(n.toString(16).padStart(2*len,\"0\"))}export function numberToBytesLE(n,len){return numberToBytesBE(n,len).reverse()}export function numberToVarBytesBE(n){return hexToBytes(numberToHexUnpadded(n))}export function ensureBytes(title,hex,expectedLength){let res;if(\"string\"==typeof hex)try{res=hexToBytes(hex)}catch(e){throw new Error(title+\" must be hex string or Uint8Array, cause: \"+e)}else{if(!isBytes(hex))throw new Error(title+\" must be hex string or Uint8Array\");res=Uint8Array.from(hex)}const len=res.length;if(\"number\"==typeof expectedLength&&len!==expectedLength)throw new Error(title+\" of length \"+expectedLength+\" expected, got \"+len);return res}export function concatBytes(){let sum=0;for(let i=0;i<arguments.length;i++){const a=i<0||arguments.length<=i?void 0:arguments[i];abytes(a),sum+=a.length}const res=new Uint8Array(sum);for(let i=0,pad=0;i<arguments.length;i++){const a=i<0||arguments.length<=i?void 0:arguments[i];res.set(a,pad),pad+=a.length}return res}export function equalBytes(a,b){if(a.length!==b.length)return!1;let diff=0;for(let i=0;i<a.length;i++)diff|=a[i]^b[i];return 0===diff}export function utf8ToBytes(str){if(\"string\"!=typeof str)throw new Error(\"string expected\");return new Uint8Array((new TextEncoder).encode(str))}const isPosBig=n=>\"bigint\"==typeof n&&_0n<=n;export function inRange(n,min,max){return isPosBig(n)&&isPosBig(min)&&isPosBig(max)&&min<=n&&n<max}export function aInRange(title,n,min,max){if(!inRange(n,min,max))throw new Error(\"expected valid \"+title+\": \"+min+\" <= n < \"+max+\", got \"+n)}export function bitLen(n){let len;for(len=0;n>_0n;n>>=_1n,len+=1);return len}export function bitGet(n,pos){return n>>BigInt(pos)&_1n}export function bitSet(n,pos,value){return n|(value?_1n:_0n)<<BigInt(pos)}export const bitMask=n=>(_2n<<BigInt(n-1))-_1n;const u8n=data=>new Uint8Array(data),u8fr=arr=>Uint8Array.from(arr);export function createHmacDrbg(hashLen,qByteLen,hmacFn){if(\"number\"!=typeof hashLen||hashLen<2)throw new Error(\"hashLen must be a number\");if(\"number\"!=typeof qByteLen||qByteLen<2)throw new Error(\"qByteLen must be a number\");if(\"function\"!=typeof hmacFn)throw new Error(\"hmacFn must be a function\");let v=u8n(hashLen),k=u8n(hashLen),i=0;const reset=()=>{v.fill(1),k.fill(0),i=0},h=function(){for(var _len=arguments.length,b=new Array(_len),_key=0;_key<_len;_key++)b[_key]=arguments[_key];return hmacFn(k,v,...b)},reseed=function(){let seed=arguments.length>0&&void 0!==arguments[0]?arguments[0]:u8n();k=h(u8fr([0]),seed),v=h(),0!==seed.length&&(k=h(u8fr([1]),seed),v=h())},gen=()=>{if(i++>=1e3)throw new Error(\"drbg: tried 1000 values\");let len=0;const out=[];for(;len<qByteLen;){v=h();const sl=v.slice();out.push(sl),len+=v.length}return concatBytes(...out)};return(seed,pred)=>{let res;for(reset(),reseed(seed);!(res=pred(gen()));)reseed();return reset(),res}}const validatorFns={bigint:val=>\"bigint\"==typeof val,function:val=>\"function\"==typeof val,boolean:val=>\"boolean\"==typeof val,string:val=>\"string\"==typeof val,stringOrUint8Array:val=>\"string\"==typeof val||isBytes(val),isSafeInteger:val=>Number.isSafeInteger(val),array:val=>Array.isArray(val),field:(val,object)=>object.Fp.isValid(val),hash:val=>\"function\"==typeof val&&Number.isSafeInteger(val.outputLen)};export function validateObject(object,validators){let optValidators=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const checkField=(fieldName,type,isOptional)=>{const checkVal=validatorFns[type];if(\"function\"!=typeof checkVal)throw new Error(\"invalid validator function\");const val=object[fieldName];if(!(isOptional&&void 0===val||checkVal(val,object)))throw new Error(\"param \"+String(fieldName)+\" is invalid. Expected \"+type+\", got \"+val)};for(const[fieldName,type]of Object.entries(validators))checkField(fieldName,type,!1);for(const[fieldName,type]of Object.entries(optValidators))checkField(fieldName,type,!0);return object}export const notImplemented=()=>{throw new Error(\"not implemented\")};export function memoized(fn){const map=new WeakMap;return function(arg){const val=map.get(arg);if(void 0!==val)return val;for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++)args[_key2-1]=arguments[_key2];const computed=fn(arg,...args);return map.set(arg,computed),computed}}","import{bitMask,bytesToNumberBE,bytesToNumberLE,ensureBytes,numberToBytesBE,numberToBytesLE,validateObject}from\"./utils.js\";const _0n=BigInt(0),_1n=BigInt(1),_2n=BigInt(2),_3n=BigInt(3),_4n=BigInt(4),_5n=BigInt(5),_8n=BigInt(8),_9n=BigInt(9),_16n=BigInt(16);export function mod(a,b){const result=a%b;return result>=_0n?result:b+result}export function pow(num,power,modulo){if(power<_0n)throw new Error(\"invalid exponent, negatives unsupported\");if(modulo<=_0n)throw new Error(\"invalid modulus\");if(modulo===_1n)return _0n;let res=_1n;for(;power>_0n;)power&_1n&&(res=res*num%modulo),num=num*num%modulo,power>>=_1n;return res}export function pow2(x,power,modulo){let res=x;for(;power-- >_0n;)res*=res,res%=modulo;return res}export function invert(number,modulo){if(number===_0n)throw new Error(\"invert: expected non-zero number\");if(modulo<=_0n)throw new Error(\"invert: expected positive modulus, got \"+modulo);let a=mod(number,modulo),b=modulo,x=_0n,y=_1n,u=_1n,v=_0n;for(;a!==_0n;){const q=b/a,r=b%a,m=x-u*q,n=y-v*q;b=a,a=r,x=u,y=v,u=m,v=n}if(b!==_1n)throw new Error(\"invert: does not exist\");return mod(x,modulo)}export function tonelliShanks(P){const legendreC=(P-_1n)/_2n;let Q,S,Z;for(Q=P-_1n,S=0;Q%_2n===_0n;Q/=_2n,S++);for(Z=_2n;Z<P&&pow(Z,legendreC,P)!==P-_1n;Z++)if(Z>1e3)throw new Error(\"Cannot find square root: likely non-prime P\");if(1===S){const p1div4=(P+_1n)/_4n;return function(Fp,n){const root=Fp.pow(n,p1div4);if(!Fp.eql(Fp.sqr(root),n))throw new Error(\"Cannot find square root\");return root}}const Q1div2=(Q+_1n)/_2n;return function(Fp,n){if(Fp.pow(n,legendreC)===Fp.neg(Fp.ONE))throw new Error(\"Cannot find square root\");let r=S,g=Fp.pow(Fp.mul(Fp.ONE,Z),Q),x=Fp.pow(n,Q1div2),b=Fp.pow(n,Q);for(;!Fp.eql(b,Fp.ONE);){if(Fp.eql(b,Fp.ZERO))return Fp.ZERO;let m=1;for(let t2=Fp.sqr(b);m<r&&!Fp.eql(t2,Fp.ONE);m++)t2=Fp.sqr(t2);const ge=Fp.pow(g,_1n<<BigInt(r-m-1));g=Fp.sqr(ge),x=Fp.mul(x,ge),b=Fp.mul(b,g),r=m}return x}}export function FpSqrt(P){if(P%_4n===_3n){const p1div4=(P+_1n)/_4n;return function(Fp,n){const root=Fp.pow(n,p1div4);if(!Fp.eql(Fp.sqr(root),n))throw new Error(\"Cannot find square root\");return root}}if(P%_8n===_5n){const c1=(P-_5n)/_8n;return function(Fp,n){const n2=Fp.mul(n,_2n),v=Fp.pow(n2,c1),nv=Fp.mul(n,v),i=Fp.mul(Fp.mul(nv,_2n),v),root=Fp.mul(nv,Fp.sub(i,Fp.ONE));if(!Fp.eql(Fp.sqr(root),n))throw new Error(\"Cannot find square root\");return root}}return tonelliShanks(P)}export const isNegativeLE=(num,modulo)=>(mod(num,modulo)&_1n)===_1n;const FIELD_FIELDS=[\"create\",\"isValid\",\"is0\",\"neg\",\"inv\",\"sqrt\",\"sqr\",\"eql\",\"add\",\"sub\",\"mul\",\"pow\",\"div\",\"addN\",\"subN\",\"mulN\",\"sqrN\"];export function validateField(field){const opts=FIELD_FIELDS.reduce(((map,val)=>(map[val]=\"function\",map)),{ORDER:\"bigint\",MASK:\"bigint\",BYTES:\"isSafeInteger\",BITS:\"isSafeInteger\"});return validateObject(field,opts)}export function FpPow(f,num,power){if(power<_0n)throw new Error(\"invalid exponent, negatives unsupported\");if(power===_0n)return f.ONE;if(power===_1n)return num;let p=f.ONE,d=num;for(;power>_0n;)power&_1n&&(p=f.mul(p,d)),d=f.sqr(d),power>>=_1n;return p}export function FpInvertBatch(f,nums){const tmp=new Array(nums.length),lastMultiplied=nums.reduce(((acc,num,i)=>f.is0(num)?acc:(tmp[i]=acc,f.mul(acc,num))),f.ONE),inverted=f.inv(lastMultiplied);return nums.reduceRight(((acc,num,i)=>f.is0(num)?acc:(tmp[i]=f.mul(acc,tmp[i]),f.mul(acc,num))),inverted),tmp}export function FpDiv(f,lhs,rhs){return f.mul(lhs,\"bigint\"==typeof rhs?invert(rhs,f.ORDER):f.inv(rhs))}export function FpLegendre(order){const legendreConst=(order-_1n)/_2n;return(f,x)=>f.pow(x,legendreConst)}export function FpIsSquare(f){const legendre=FpLegendre(f.ORDER);return x=>{const p=legendre(f,x);return f.eql(p,f.ZERO)||f.eql(p,f.ONE)}}export function nLength(n,nBitLength){const _nBitLength=void 0!==nBitLength?nBitLength:n.toString(2).length;return{nBitLength:_nBitLength,nByteLength:Math.ceil(_nBitLength/8)}}export function Field(ORDER,bitLen){let isLE=arguments.length>2&&void 0!==arguments[2]&&arguments[2],redef=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(ORDER<=_0n)throw new Error(\"invalid field: expected ORDER > 0, got \"+ORDER);const{nBitLength:BITS,nByteLength:BYTES}=nLength(ORDER,bitLen);if(BYTES>2048)throw new Error(\"invalid field: expected ORDER of <= 2048 bytes\");let sqrtP;const f=Object.freeze({ORDER:ORDER,isLE:isLE,BITS:BITS,BYTES:BYTES,MASK:bitMask(BITS),ZERO:_0n,ONE:_1n,create:num=>mod(num,ORDER),isValid:num=>{if(\"bigint\"!=typeof num)throw new Error(\"invalid field element: expected bigint, got \"+typeof num);return _0n<=num&&num<ORDER},is0:num=>num===_0n,isOdd:num=>(num&_1n)===_1n,neg:num=>mod(-num,ORDER),eql:(lhs,rhs)=>lhs===rhs,sqr:num=>mod(num*num,ORDER),add:(lhs,rhs)=>mod(lhs+rhs,ORDER),sub:(lhs,rhs)=>mod(lhs-rhs,ORDER),mul:(lhs,rhs)=>mod(lhs*rhs,ORDER),pow:(num,power)=>FpPow(f,num,power),div:(lhs,rhs)=>mod(lhs*invert(rhs,ORDER),ORDER),sqrN:num=>num*num,addN:(lhs,rhs)=>lhs+rhs,subN:(lhs,rhs)=>lhs-rhs,mulN:(lhs,rhs)=>lhs*rhs,inv:num=>invert(num,ORDER),sqrt:redef.sqrt||(n=>(sqrtP||(sqrtP=FpSqrt(ORDER)),sqrtP(f,n))),invertBatch:lst=>FpInvertBatch(f,lst),cmov:(a,b,c)=>c?b:a,toBytes:num=>isLE?numberToBytesLE(num,BYTES):numberToBytesBE(num,BYTES),fromBytes:bytes=>{if(bytes.length!==BYTES)throw new Error(\"Field.fromBytes: expected \"+BYTES+\" bytes, got \"+bytes.length);return isLE?bytesToNumberLE(bytes):bytesToNumberBE(bytes)}});return Object.freeze(f)}export function FpSqrtOdd(Fp,elm){if(!Fp.isOdd)throw new Error(\"Field doesn't have isOdd\");const root=Fp.sqrt(elm);return Fp.isOdd(root)?root:Fp.neg(root)}export function FpSqrtEven(Fp,elm){if(!Fp.isOdd)throw new Error(\"Field doesn't have isOdd\");const root=Fp.sqrt(elm);return Fp.isOdd(root)?Fp.neg(root):root}export function hashToPrivateScalar(hash,groupOrder){let isLE=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const hashLen=(hash=ensureBytes(\"privateHash\",hash)).length,minLen=nLength(groupOrder).nByteLength+8;if(minLen<24||hashLen<minLen||hashLen>1024)throw new Error(\"hashToPrivateScalar: expected \"+minLen+\"-1024 bytes of input, got \"+hashLen);return mod(isLE?bytesToNumberLE(hash):bytesToNumberBE(hash),groupOrder-_1n)+_1n}export function getFieldBytesLength(fieldOrder){if(\"bigint\"!=typeof fieldOrder)throw new Error(\"field order must be bigint\");const bitLength=fieldOrder.toString(2).length;return Math.ceil(bitLength/8)}export function getMinHashLength(fieldOrder){const length=getFieldBytesLength(fieldOrder);return length+Math.ceil(length/2)}export function mapHashToField(key,fieldOrder){let isLE=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const len=key.length,fieldLen=getFieldBytesLength(fieldOrder),minLen=getMinHashLength(fieldOrder);if(len<16||len<minLen||len>1024)throw new Error(\"expected \"+minLen+\"-1024 bytes of input, got \"+len);const reduced=mod(isLE?bytesToNumberLE(key):bytesToNumberBE(key),fieldOrder-_1n)+_1n;return isLE?numberToBytesLE(reduced,fieldLen):numberToBytesBE(reduced,fieldLen)}","import{nLength,validateField}from\"./modular.js\";import{bitLen,validateObject}from\"./utils.js\";const _0n=BigInt(0),_1n=BigInt(1);function constTimeNegate(condition,item){const neg=item.negate();return condition?neg:item}function validateW(W,bits){if(!Number.isSafeInteger(W)||W<=0||W>bits)throw new Error(\"invalid window size, expected [1..\"+bits+\"], got W=\"+W)}function calcWOpts(W,bits){validateW(W,bits);return{windows:Math.ceil(bits/W)+1,windowSize:2**(W-1)}}function validateMSMPoints(points,c){if(!Array.isArray(points))throw new Error(\"array expected\");points.forEach(((p,i)=>{if(!(p instanceof c))throw new Error(\"invalid point at index \"+i)}))}function validateMSMScalars(scalars,field){if(!Array.isArray(scalars))throw new Error(\"array of scalars expected\");scalars.forEach(((s,i)=>{if(!field.isValid(s))throw new Error(\"invalid scalar at index \"+i)}))}const pointPrecomputes=new WeakMap,pointWindowSizes=new WeakMap;function getW(P){return pointWindowSizes.get(P)||1}export function wNAF(c,bits){return{constTimeNegate:constTimeNegate,hasPrecomputes:elm=>1!==getW(elm),unsafeLadder(elm,n){let p=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c.ZERO,d=elm;for(;n>_0n;)n&_1n&&(p=p.add(d)),d=d.double(),n>>=_1n;return p},precomputeWindow(elm,W){const{windows:windows,windowSize:windowSize}=calcWOpts(W,bits),points=[];let p=elm,base=p;for(let window=0;window<windows;window++){base=p,points.push(base);for(let i=1;i<windowSize;i++)base=base.add(p),points.push(base);p=base.double()}return points},wNAF(W,precomputes,n){const{windows:windows,windowSize:windowSize}=calcWOpts(W,bits);let p=c.ZERO,f=c.BASE;const mask=BigInt(2**W-1),maxNumber=2**W,shiftBy=BigInt(W);for(let window=0;window<windows;window++){const offset=window*windowSize;let wbits=Number(n&mask);n>>=shiftBy,wbits>windowSize&&(wbits-=maxNumber,n+=_1n);const offset1=offset,offset2=offset+Math.abs(wbits)-1,cond1=window%2!=0,cond2=wbits<0;0===wbits?f=f.add(constTimeNegate(cond1,precomputes[offset1])):p=p.add(constTimeNegate(cond2,precomputes[offset2]))}return{p:p,f:f}},wNAFUnsafe(W,precomputes,n){let acc=arguments.length>3&&void 0!==arguments[3]?arguments[3]:c.ZERO;const{windows:windows,windowSize:windowSize}=calcWOpts(W,bits),mask=BigInt(2**W-1),maxNumber=2**W,shiftBy=BigInt(W);for(let window=0;window<windows;window++){const offset=window*windowSize;if(n===_0n)break;let wbits=Number(n&mask);if(n>>=shiftBy,wbits>windowSize&&(wbits-=maxNumber,n+=_1n),0===wbits)continue;let curr=precomputes[offset+Math.abs(wbits)-1];wbits<0&&(curr=curr.negate()),acc=acc.add(curr)}return acc},getPrecomputes(W,P,transform){let comp=pointPrecomputes.get(P);return comp||(comp=this.precomputeWindow(P,W),1!==W&&pointPrecomputes.set(P,transform(comp))),comp},wNAFCached(P,n,transform){const W=getW(P);return this.wNAF(W,this.getPrecomputes(W,P,transform),n)},wNAFCachedUnsafe(P,n,transform,prev){const W=getW(P);return 1===W?this.unsafeLadder(P,n,prev):this.wNAFUnsafe(W,this.getPrecomputes(W,P,transform),n,prev)},setWindowSize(P,W){validateW(W,bits),pointWindowSizes.set(P,W),pointPrecomputes.delete(P)}}}export function pippenger(c,fieldN,points,scalars){if(validateMSMPoints(points,c),validateMSMScalars(scalars,fieldN),points.length!==scalars.length)throw new Error(\"arrays of points and scalars must have equal length\");const zero=c.ZERO,wbits=bitLen(BigInt(points.length)),windowSize=wbits>12?wbits-3:wbits>4?wbits-2:wbits?2:1,MASK=(1<<windowSize)-1,buckets=new Array(MASK+1).fill(zero);let sum=zero;for(let i=Math.floor((fieldN.BITS-1)/windowSize)*windowSize;i>=0;i-=windowSize){buckets.fill(zero);for(let j=0;j<scalars.length;j++){const scalar=scalars[j],wbits=Number(scalar>>BigInt(i)&BigInt(MASK));buckets[wbits]=buckets[wbits].add(points[j])}let resI=zero;for(let j=buckets.length-1,sumI=zero;j>0;j--)sumI=sumI.add(buckets[j]),resI=resI.add(sumI);if(sum=sum.add(resI),0!==i)for(let j=0;j<windowSize;j++)sum=sum.double()}return sum}export function precomputeMSMUnsafe(c,fieldN,points,windowSize){validateW(windowSize,fieldN.BITS),validateMSMPoints(points,c);const zero=c.ZERO,tableSize=2**windowSize-1,chunks=Math.ceil(fieldN.BITS/windowSize),MASK=BigInt((1<<windowSize)-1),tables=points.map((p=>{const res=[];for(let i=0,acc=p;i<tableSize;i++)res.push(acc),acc=acc.add(p);return res}));return scalars=>{if(validateMSMScalars(scalars,fieldN),scalars.length>points.length)throw new Error(\"array of scalars must be smaller than array of points\");let res=zero;for(let i=0;i<chunks;i++){if(res!==zero)for(let j=0;j<windowSize;j++)res=res.double();const shiftBy=BigInt(chunks*windowSize-(i+1)*windowSize);for(let j=0;j<scalars.length;j++){const n=scalars[j],curr=Number(n>>shiftBy&MASK);curr&&(res=res.add(tables[j][curr-1]))}}return res}}export function validateBasic(curve){return validateField(curve.Fp),validateObject(curve,{n:\"bigint\",h:\"bigint\",Gx:\"field\",Gy:\"field\"},{nBitLength:\"isSafeInteger\",nByteLength:\"isSafeInteger\"}),Object.freeze({...nLength(curve.n,curve.nBitLength),...curve,p:curve.Fp.ORDER})}","import{pippenger,validateBasic,wNAF}from\"./curve.js\";import{Field,getMinHashLength,invert,mapHashToField,mod,validateField}from\"./modular.js\";import*as ut from\"./utils.js\";import{abool,ensureBytes,memoized}from\"./utils.js\";function validateSigVerOpts(opts){void 0!==opts.lowS&&abool(\"lowS\",opts.lowS),void 0!==opts.prehash&&abool(\"prehash\",opts.prehash)}function validatePointOpts(curve){const opts=validateBasic(curve);ut.validateObject(opts,{a:\"field\",b:\"field\"},{allowedPrivateKeyLengths:\"array\",wrapPrivateKey:\"boolean\",isTorsionFree:\"function\",clearCofactor:\"function\",allowInfinityPoint:\"boolean\",fromBytes:\"function\",toBytes:\"function\"});const{endo:endo,Fp:Fp,a:a}=opts;if(endo){if(!Fp.eql(a,Fp.ZERO))throw new Error(\"invalid endomorphism, can only be defined for Koblitz curves that have a=0\");if(\"object\"!=typeof endo||\"bigint\"!=typeof endo.beta||\"function\"!=typeof endo.splitScalar)throw new Error(\"invalid endomorphism, expected beta: bigint and splitScalar: function\")}return Object.freeze({...opts})}const{bytesToNumberBE:b2n,hexToBytes:h2b}=ut;export class DERErr extends Error{constructor(){super(arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\")}}export const DER={Err:DERErr,_tlv:{encode:(tag,data)=>{const{Err:E}=DER;if(tag<0||tag>256)throw new E(\"tlv.encode: wrong tag\");if(1&data.length)throw new E(\"tlv.encode: unpadded data\");const dataLen=data.length/2,len=ut.numberToHexUnpadded(dataLen);if(len.length/2&128)throw new E(\"tlv.encode: long form length too big\");const lenLen=dataLen>127?ut.numberToHexUnpadded(len.length/2|128):\"\";return ut.numberToHexUnpadded(tag)+lenLen+len+data},decode(tag,data){const{Err:E}=DER;let pos=0;if(tag<0||tag>256)throw new E(\"tlv.encode: wrong tag\");if(data.length<2||data[pos++]!==tag)throw new E(\"tlv.decode: wrong tlv\");const first=data[pos++];let length=0;if(!!(128&first)){const lenLen=127&first;if(!lenLen)throw new E(\"tlv.decode(long): indefinite length not supported\");if(lenLen>4)throw new E(\"tlv.decode(long): byte length is too big\");const lengthBytes=data.subarray(pos,pos+lenLen);if(lengthBytes.length!==lenLen)throw new E(\"tlv.decode: length bytes not complete\");if(0===lengthBytes[0])throw new E(\"tlv.decode(long): zero leftmost byte\");for(const b of lengthBytes)length=length<<8|b;if(pos+=lenLen,length<128)throw new E(\"tlv.decode(long): not minimal encoding\")}else length=first;const v=data.subarray(pos,pos+length);if(v.length!==length)throw new E(\"tlv.decode: wrong value length\");return{v:v,l:data.subarray(pos+length)}}},_int:{encode(num){const{Err:E}=DER;if(num<_0n)throw new E(\"integer: negative integers are not allowed\");let hex=ut.numberToHexUnpadded(num);if(8&Number.parseInt(hex[0],16)&&(hex=\"00\"+hex),1&hex.length)throw new E(\"unexpected DER parsing assertion: unpadded hex\");return hex},decode(data){const{Err:E}=DER;if(128&data[0])throw new E(\"invalid signature integer: negative\");if(0===data[0]&&!(128&data[1]))throw new E(\"invalid signature integer: unnecessary leading zero\");return b2n(data)}},toSig(hex){const{Err:E,_int:int,_tlv:tlv}=DER,data=\"string\"==typeof hex?h2b(hex):hex;ut.abytes(data);const{v:seqBytes,l:seqLeftBytes}=tlv.decode(48,data);if(seqLeftBytes.length)throw new E(\"invalid signature: left bytes after parsing\");const{v:rBytes,l:rLeftBytes}=tlv.decode(2,seqBytes),{v:sBytes,l:sLeftBytes}=tlv.decode(2,rLeftBytes);if(sLeftBytes.length)throw new E(\"invalid signature: left bytes after parsing\");return{r:int.decode(rBytes),s:int.decode(sBytes)}},hexFromSig(sig){const{_tlv:tlv,_int:int}=DER,seq=tlv.encode(2,int.encode(sig.r))+tlv.encode(2,int.encode(sig.s));return tlv.encode(48,seq)}};const _0n=BigInt(0),_1n=BigInt(1),_2n=BigInt(2),_3n=BigInt(3),_4n=BigInt(4);export function weierstrassPoints(opts){const CURVE=validatePointOpts(opts),{Fp:Fp}=CURVE,Fn=Field(CURVE.n,CURVE.nBitLength),toBytes=CURVE.toBytes||((_c,point,_isCompressed)=>{const a=point.toAffine();return ut.concatBytes(Uint8Array.from([4]),Fp.toBytes(a.x),Fp.toBytes(a.y))}),fromBytes=CURVE.fromBytes||(bytes=>{const tail=bytes.subarray(1);return{x:Fp.fromBytes(tail.subarray(0,Fp.BYTES)),y:Fp.fromBytes(tail.subarray(Fp.BYTES,2*Fp.BYTES))}});function weierstrassEquation(x){const{a:a,b:b}=CURVE,x2=Fp.sqr(x),x3=Fp.mul(x2,x);return Fp.add(Fp.add(x3,Fp.mul(x,a)),b)}if(!Fp.eql(Fp.sqr(CURVE.Gy),weierstrassEquation(CURVE.Gx)))throw new Error(\"bad generator point: equation left != right\");function normPrivateKeyToScalar(key){const{allowedPrivateKeyLengths:lengths,nByteLength:nByteLength,wrapPrivateKey:wrapPrivateKey,n:N}=CURVE;if(lengths&&\"bigint\"!=typeof key){if(ut.isBytes(key)&&(key=ut.bytesToHex(key)),\"string\"!=typeof key||!lengths.includes(key.length))throw new Error(\"invalid private key\");key=key.padStart(2*nByteLength,\"0\")}let num;try{num=\"bigint\"==typeof key?key:ut.bytesToNumberBE(ensureBytes(\"private key\",key,nByteLength))}catch(error){throw new Error(\"invalid private key, expected hex or \"+nByteLength+\" bytes, got \"+typeof key)}return wrapPrivateKey&&(num=mod(num,N)),ut.aInRange(\"private key\",num,_1n,N),num}function assertPrjPoint(other){if(!(other instanceof Point))throw new Error(\"ProjectivePoint expected\")}const toAffineMemo=memoized(((p,iz)=>{const{px:x,py:y,pz:z}=p;if(Fp.eql(z,Fp.ONE))return{x:x,y:y};const is0=p.is0();null==iz&&(iz=is0?Fp.ONE:Fp.inv(z));const ax=Fp.mul(x,iz),ay=Fp.mul(y,iz),zz=Fp.mul(z,iz);if(is0)return{x:Fp.ZERO,y:Fp.ZERO};if(!Fp.eql(zz,Fp.ONE))throw new Error(\"invZ was invalid\");return{x:ax,y:ay}})),assertValidMemo=memoized((p=>{if(p.is0()){if(CURVE.allowInfinityPoint&&!Fp.is0(p.py))return;throw new Error(\"bad point: ZERO\")}const{x:x,y:y}=p.toAffine();if(!Fp.isValid(x)||!Fp.isValid(y))throw new Error(\"bad point: x or y not FE\");const left=Fp.sqr(y),right=weierstrassEquation(x);if(!Fp.eql(left,right))throw new Error(\"bad point: equation left != right\");if(!p.isTorsionFree())throw new Error(\"bad point: not in prime-order subgroup\");return!0}));class Point{constructor(px,py,pz){if(this.px=px,this.py=py,this.pz=pz,null==px||!Fp.isValid(px))throw new Error(\"x required\");if(null==py||!Fp.isValid(py))throw new Error(\"y required\");if(null==pz||!Fp.isValid(pz))throw new Error(\"z required\");Object.freeze(this)}static fromAffine(p){const{x:x,y:y}=p||{};if(!p||!Fp.isValid(x)||!Fp.isValid(y))throw new Error(\"invalid affine point\");if(p instanceof Point)throw new Error(\"projective point not allowed\");const is0=i=>Fp.eql(i,Fp.ZERO);return is0(x)&&is0(y)?Point.ZERO:new Point(x,y,Fp.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(points){const toInv=Fp.invertBatch(points.map((p=>p.pz)));return points.map(((p,i)=>p.toAffine(toInv[i]))).map(Point.fromAffine)}static fromHex(hex){const P=Point.fromAffine(fromBytes(ensureBytes(\"pointHex\",hex)));return P.assertValidity(),P}static fromPrivateKey(privateKey){return Point.BASE.multiply(normPrivateKeyToScalar(privateKey))}static msm(points,scalars){return pippenger(Point,Fn,points,scalars)}_setWindowSize(windowSize){wnaf.setWindowSize(this,windowSize)}assertValidity(){assertValidMemo(this)}hasEvenY(){const{y:y}=this.toAffine();if(Fp.isOdd)return!Fp.isOdd(y);throw new Error(\"Field doesn't support isOdd\")}equals(other){assertPrjPoint(other);const{px:X1,py:Y1,pz:Z1}=this,{px:X2,py:Y2,pz:Z2}=other,U1=Fp.eql(Fp.mul(X1,Z2),Fp.mul(X2,Z1)),U2=Fp.eql(Fp.mul(Y1,Z2),Fp.mul(Y2,Z1));return U1&&U2}negate(){return new Point(this.px,Fp.neg(this.py),this.pz)}double(){const{a:a,b:b}=CURVE,b3=Fp.mul(b,_3n),{px:X1,py:Y1,pz:Z1}=this;let X3=Fp.ZERO,Y3=Fp.ZERO,Z3=Fp.ZERO,t0=Fp.mul(X1,X1),t1=Fp.mul(Y1,Y1),t2=Fp.mul(Z1,Z1),t3=Fp.mul(X1,Y1);return t3=Fp.add(t3,t3),Z3=Fp.mul(X1,Z1),Z3=Fp.add(Z3,Z3),X3=Fp.mul(a,Z3),Y3=Fp.mul(b3,t2),Y3=Fp.add(X3,Y3),X3=Fp.sub(t1,Y3),Y3=Fp.add(t1,Y3),Y3=Fp.mul(X3,Y3),X3=Fp.mul(t3,X3),Z3=Fp.mul(b3,Z3),t2=Fp.mul(a,t2),t3=Fp.sub(t0,t2),t3=Fp.mul(a,t3),t3=Fp.add(t3,Z3),Z3=Fp.add(t0,t0),t0=Fp.add(Z3,t0),t0=Fp.add(t0,t2),t0=Fp.mul(t0,t3),Y3=Fp.add(Y3,t0),t2=Fp.mul(Y1,Z1),t2=Fp.add(t2,t2),t0=Fp.mul(t2,t3),X3=Fp.sub(X3,t0),Z3=Fp.mul(t2,t1),Z3=Fp.add(Z3,Z3),Z3=Fp.add(Z3,Z3),new Point(X3,Y3,Z3)}add(other){assertPrjPoint(other);const{px:X1,py:Y1,pz:Z1}=this,{px:X2,py:Y2,pz:Z2}=other;let X3=Fp.ZERO,Y3=Fp.ZERO,Z3=Fp.ZERO;const a=CURVE.a,b3=Fp.mul(CURVE.b,_3n);let t0=Fp.mul(X1,X2),t1=Fp.mul(Y1,Y2),t2=Fp.mul(Z1,Z2),t3=Fp.add(X1,Y1),t4=Fp.add(X2,Y2);t3=Fp.mul(t3,t4),t4=Fp.add(t0,t1),t3=Fp.sub(t3,t4),t4=Fp.add(X1,Z1);let t5=Fp.add(X2,Z2);return t4=Fp.mul(t4,t5),t5=Fp.add(t0,t2),t4=Fp.sub(t4,t5),t5=Fp.add(Y1,Z1),X3=Fp.add(Y2,Z2),t5=Fp.mul(t5,X3),X3=Fp.add(t1,t2),t5=Fp.sub(t5,X3),Z3=Fp.mul(a,t4),X3=Fp.mul(b3,t2),Z3=Fp.add(X3,Z3),X3=Fp.sub(t1,Z3),Z3=Fp.add(t1,Z3),Y3=Fp.mul(X3,Z3),t1=Fp.add(t0,t0),t1=Fp.add(t1,t0),t2=Fp.mul(a,t2),t4=Fp.mul(b3,t4),t1=Fp.add(t1,t2),t2=Fp.sub(t0,t2),t2=Fp.mul(a,t2),t4=Fp.add(t4,t2),t0=Fp.mul(t1,t4),Y3=Fp.add(Y3,t0),t0=Fp.mul(t5,t4),X3=Fp.mul(t3,X3),X3=Fp.sub(X3,t0),t0=Fp.mul(t3,t1),Z3=Fp.mul(t5,Z3),Z3=Fp.add(Z3,t0),new Point(X3,Y3,Z3)}subtract(other){return this.add(other.negate())}is0(){return this.equals(Point.ZERO)}wNAF(n){return wnaf.wNAFCached(this,n,Point.normalizeZ)}multiplyUnsafe(sc){const{endo:endo,n:N}=CURVE;ut.aInRange(\"scalar\",sc,_0n,N);const I=Point.ZERO;if(sc===_0n)return I;if(this.is0()||sc===_1n)return this;if(!endo||wnaf.hasPrecomputes(this))return wnaf.wNAFCachedUnsafe(this,sc,Point.normalizeZ);let{k1neg:k1neg,k1:k1,k2neg:k2neg,k2:k2}=endo.splitScalar(sc),k1p=I,k2p=I,d=this;for(;k1>_0n||k2>_0n;)k1&_1n&&(k1p=k1p.add(d)),k2&_1n&&(k2p=k2p.add(d)),d=d.double(),k1>>=_1n,k2>>=_1n;return k1neg&&(k1p=k1p.negate()),k2neg&&(k2p=k2p.negate()),k2p=new Point(Fp.mul(k2p.px,endo.beta),k2p.py,k2p.pz),k1p.add(k2p)}multiply(scalar){const{endo:endo,n:N}=CURVE;let point,fake;if(ut.aInRange(\"scalar\",scalar,_1n,N),endo){const{k1neg:k1neg,k1:k1,k2neg:k2neg,k2:k2}=endo.splitScalar(scalar);let{p:k1p,f:f1p}=this.wNAF(k1),{p:k2p,f:f2p}=this.wNAF(k2);k1p=wnaf.constTimeNegate(k1neg,k1p),k2p=wnaf.constTimeNegate(k2neg,k2p),k2p=new Point(Fp.mul(k2p.px,endo.beta),k2p.py,k2p.pz),point=k1p.add(k2p),fake=f1p.add(f2p)}else{const{p:p,f:f}=this.wNAF(scalar);point=p,fake=f}return Point.normalizeZ([point,fake])[0]}multiplyAndAddUnsafe(Q,a,b){const G=Point.BASE,mul=(P,a)=>a!==_0n&&a!==_1n&&P.equals(G)?P.multiply(a):P.multiplyUnsafe(a),sum=mul(this,a).add(mul(Q,b));return sum.is0()?void 0:sum}toAffine(iz){return toAffineMemo(this,iz)}isTorsionFree(){const{h:cofactor,isTorsionFree:isTorsionFree}=CURVE;if(cofactor===_1n)return!0;if(isTorsionFree)return isTorsionFree(Point,this);throw new Error(\"isTorsionFree() has not been declared for the elliptic curve\")}clearCofactor(){const{h:cofactor,clearCofactor:clearCofactor}=CURVE;return cofactor===_1n?this:clearCofactor?clearCofactor(Point,this):this.multiplyUnsafe(CURVE.h)}toRawBytes(){let isCompressed=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return abool(\"isCompressed\",isCompressed),this.assertValidity(),toBytes(Point,this,isCompressed)}toHex(){let isCompressed=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return abool(\"isCompressed\",isCompressed),ut.bytesToHex(this.toRawBytes(isCompressed))}}Point.BASE=new Point(CURVE.Gx,CURVE.Gy,Fp.ONE),Point.ZERO=new Point(Fp.ZERO,Fp.ONE,Fp.ZERO);const _bits=CURVE.nBitLength,wnaf=wNAF(Point,CURVE.endo?Math.ceil(_bits/2):_bits);return{CURVE:CURVE,ProjectivePoint:Point,normPrivateKeyToScalar:normPrivateKeyToScalar,weierstrassEquation:weierstrassEquation,isWithinCurveOrder:function(num){return ut.inRange(num,_1n,CURVE.n)}}}function validateOpts(curve){const opts=validateBasic(curve);return ut.validateObject(opts,{hash:\"hash\",hmac:\"function\",randomBytes:\"function\"},{bits2int:\"function\",bits2int_modN:\"function\",lowS:\"boolean\"}),Object.freeze({lowS:!0,...opts})}export function weierstrass(curveDef){const CURVE=validateOpts(curveDef),{Fp:Fp,n:CURVE_ORDER}=CURVE,compressedLen=Fp.BYTES+1,uncompressedLen=2*Fp.BYTES+1;function modN(a){return mod(a,CURVE_ORDER)}function invN(a){return invert(a,CURVE_ORDER)}const{ProjectivePoint:Point,normPrivateKeyToScalar:normPrivateKeyToScalar,weierstrassEquation:weierstrassEquation,isWithinCurveOrder:isWithinCurveOrder}=weierstrassPoints({...CURVE,toBytes(_c,point,isCompressed){const a=point.toAffine(),x=Fp.toBytes(a.x),cat=ut.concatBytes;return abool(\"isCompressed\",isCompressed),isCompressed?cat(Uint8Array.from([point.hasEvenY()?2:3]),x):cat(Uint8Array.from([4]),x,Fp.toBytes(a.y))},fromBytes(bytes){const len=bytes.length,head=bytes[0],tail=bytes.subarray(1);if(len!==compressedLen||2!==head&&3!==head){if(len===uncompressedLen&&4===head){return{x:Fp.fromBytes(tail.subarray(0,Fp.BYTES)),y:Fp.fromBytes(tail.subarray(Fp.BYTES,2*Fp.BYTES))}}throw new Error(\"invalid Point, expected length of \"+compressedLen+\", or uncompressed \"+uncompressedLen+\", got \"+len)}{const x=ut.bytesToNumberBE(tail);if(!ut.inRange(x,_1n,Fp.ORDER))throw new Error(\"Point is not on curve\");const y2=weierstrassEquation(x);let y;try{y=Fp.sqrt(y2)}catch(sqrtError){const suffix=sqrtError instanceof Error?\": \"+sqrtError.message:\"\";throw new Error(\"Point is not on curve\"+suffix)}return!(1&~head)!==((y&_1n)===_1n)&&(y=Fp.neg(y)),{x:x,y:y}}}}),numToNByteStr=num=>ut.bytesToHex(ut.numberToBytesBE(num,CURVE.nByteLength));function isBiggerThanHalfOrder(number){return number>CURVE_ORDER>>_1n}const slcNum=(b,from,to)=>ut.bytesToNumberBE(b.slice(from,to));class Signature{constructor(r,s,recovery){this.r=r,this.s=s,this.recovery=recovery,this.assertValidity()}static fromCompact(hex){const l=CURVE.nByteLength;return hex=ensureBytes(\"compactSignature\",hex,2*l),new Signature(slcNum(hex,0,l),slcNum(hex,l,2*l))}static fromDER(hex){const{r:r,s:s}=DER.toSig(ensureBytes(\"DER\",hex));return new Signature(r,s)}assertValidity(){ut.aInRange(\"r\",this.r,_1n,CURVE_ORDER),ut.aInRange(\"s\",this.s,_1n,CURVE_ORDER)}addRecoveryBit(recovery){return new Signature(this.r,this.s,recovery)}recoverPublicKey(msgHash){const{r:r,s:s,recovery:rec}=this,h=bits2int_modN(ensureBytes(\"msgHash\",msgHash));if(null==rec||![0,1,2,3].includes(rec))throw new Error(\"recovery id invalid\");const radj=2===rec||3===rec?r+CURVE.n:r;if(radj>=Fp.ORDER)throw new Error(\"recovery id 2 or 3 invalid\");const prefix=1&rec?\"03\":\"02\",R=Point.fromHex(prefix+numToNByteStr(radj)),ir=invN(radj),u1=modN(-h*ir),u2=modN(s*ir),Q=Point.BASE.multiplyAndAddUnsafe(R,u1,u2);if(!Q)throw new Error(\"point at infinify\");return Q.assertValidity(),Q}hasHighS(){return isBiggerThanHalfOrder(this.s)}normalizeS(){return this.hasHighS()?new Signature(this.r,modN(-this.s),this.recovery):this}toDERRawBytes(){return ut.hexToBytes(this.toDERHex())}toDERHex(){return DER.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return ut.hexToBytes(this.toCompactHex())}toCompactHex(){return numToNByteStr(this.r)+numToNByteStr(this.s)}}const utils={isValidPrivateKey(privateKey){try{return normPrivateKeyToScalar(privateKey),!0}catch(error){return!1}},normPrivateKeyToScalar:normPrivateKeyToScalar,randomPrivateKey:()=>{const length=getMinHashLength(CURVE.n);return mapHashToField(CURVE.randomBytes(length),CURVE.n)},precompute(){let windowSize=arguments.length>0&&void 0!==arguments[0]?arguments[0]:8,point=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Point.BASE;return point._setWindowSize(windowSize),point.multiply(BigInt(3)),point}};function isProbPub(item){const arr=ut.isBytes(item),str=\"string\"==typeof item,len=(arr||str)&&item.length;return arr?len===compressedLen||len===uncompressedLen:str?len===2*compressedLen||len===2*uncompressedLen:item instanceof Point}const bits2int=CURVE.bits2int||function(bytes){if(bytes.length>8192)throw new Error(\"input is too large\");const num=ut.bytesToNumberBE(bytes),delta=8*bytes.length-CURVE.nBitLength;return delta>0?num>>BigInt(delta):num},bits2int_modN=CURVE.bits2int_modN||function(bytes){return modN(bits2int(bytes))},ORDER_MASK=ut.bitMask(CURVE.nBitLength);function int2octets(num){return ut.aInRange(\"num < 2^\"+CURVE.nBitLength,num,_0n,ORDER_MASK),ut.numberToBytesBE(num,CURVE.nByteLength)}function prepSig(msgHash,privateKey){let opts=arguments.length>2&&void 0!==arguments[2]?arguments[2]:defaultSigOpts;if([\"recovered\",\"canonical\"].some((k=>k in opts)))throw new Error(\"sign() legacy options not supported\");const{hash:hash,randomBytes:randomBytes}=CURVE;let{lowS:lowS,prehash:prehash,extraEntropy:ent}=opts;null==lowS&&(lowS=!0),msgHash=ensureBytes(\"msgHash\",msgHash),validateSigVerOpts(opts),prehash&&(msgHash=ensureBytes(\"prehashed msgHash\",hash(msgHash)));const h1int=bits2int_modN(msgHash),d=normPrivateKeyToScalar(privateKey),seedArgs=[int2octets(d),int2octets(h1int)];if(null!=ent&&!1!==ent){const e=!0===ent?randomBytes(Fp.BYTES):ent;seedArgs.push(ensureBytes(\"extraEntropy\",e))}const seed=ut.concatBytes(...seedArgs),m=h1int;return{seed:seed,k2sig:function(kBytes){const k=bits2int(kBytes);if(!isWithinCurveOrder(k))return;const ik=invN(k),q=Point.BASE.multiply(k).toAffine(),r=modN(q.x);if(r===_0n)return;const s=modN(ik*modN(m+r*d));if(s===_0n)return;let recovery=(q.x===r?0:2)|Number(q.y&_1n),normS=s;return lowS&&isBiggerThanHalfOrder(s)&&(normS=function(s){return isBiggerThanHalfOrder(s)?modN(-s):s}(s),recovery^=1),new Signature(r,normS,recovery)}}}const defaultSigOpts={lowS:CURVE.lowS,prehash:!1},defaultVerOpts={lowS:CURVE.lowS,prehash:!1};return Point.BASE._setWindowSize(8),{CURVE:CURVE,getPublicKey:function(privateKey){let isCompressed=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed)},getSharedSecret:function(privateA,publicB){let isCompressed=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(isProbPub(privateA))throw new Error(\"first arg must be private key\");if(!isProbPub(publicB))throw new Error(\"second arg must be public key\");return Point.fromHex(publicB).multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed)},sign:function(msgHash,privKey){let opts=arguments.length>2&&void 0!==arguments[2]?arguments[2]:defaultSigOpts;const{seed:seed,k2sig:k2sig}=prepSig(msgHash,privKey,opts),C=CURVE;return ut.createHmacDrbg(C.hash.outputLen,C.nByteLength,C.hmac)(seed,k2sig)},verify:function(signature,msgHash,publicKey){let opts=arguments.length>3&&void 0!==arguments[3]?arguments[3]:defaultVerOpts;const sg=signature;msgHash=ensureBytes(\"msgHash\",msgHash),publicKey=ensureBytes(\"publicKey\",publicKey);const{lowS:lowS,prehash:prehash,format:format}=opts;if(validateSigVerOpts(opts),\"strict\"in opts)throw new Error(\"options.strict was renamed to lowS\");if(void 0!==format&&\"compact\"!==format&&\"der\"!==format)throw new Error(\"format must be compact or der\");const isHex=\"string\"==typeof sg||ut.isBytes(sg),isObj=!isHex&&!format&&\"object\"==typeof sg&&null!==sg&&\"bigint\"==typeof sg.r&&\"bigint\"==typeof sg.s;if(!isHex&&!isObj)throw new Error(\"invalid signature, expected Uint8Array, hex string or Signature instance\");let _sig,P;try{if(isObj&&(_sig=new Signature(sg.r,sg.s)),isHex){try{\"compact\"!==format&&(_sig=Signature.fromDER(sg))}catch(derError){if(!(derError instanceof DER.Err))throw derError}_sig||\"der\"===format||(_sig=Signature.fromCompact(sg))}P=Point.fromHex(publicKey)}catch(error){return!1}if(!_sig)return!1;if(lowS&&_sig.hasHighS())return!1;prehash&&(msgHash=CURVE.hash(msgHash));const{r:r,s:s}=_sig,h=bits2int_modN(msgHash),is=invN(s),u1=modN(h*is),u2=modN(r*is),R=Point.BASE.multiplyAndAddUnsafe(P,u1,u2)?.toAffine();return!!R&&modN(R.x)===r},ProjectivePoint:Point,Signature:Signature,utils:utils}}export function SWUFpSqrtRatio(Fp,Z){const q=Fp.ORDER;let l=_0n;for(let o=q-_1n;o%_2n===_0n;o/=_2n)l+=_1n;const c1=l,_2n_pow_c1_1=_2n<<c1-_1n-_1n,_2n_pow_c1=_2n_pow_c1_1*_2n,c2=(q-_1n)/_2n_pow_c1,c3=(c2-_1n)/_2n,c4=_2n_pow_c1-_1n,c5=_2n_pow_c1_1,c6=Fp.pow(Z,c2),c7=Fp.pow(Z,(c2+_1n)/_2n);let sqrtRatio=(u,v)=>{let tv1=c6,tv2=Fp.pow(v,c4),tv3=Fp.sqr(tv2);tv3=Fp.mul(tv3,v);let tv5=Fp.mul(u,tv3);tv5=Fp.pow(tv5,c3),tv5=Fp.mul(tv5,tv2),tv2=Fp.mul(tv5,v),tv3=Fp.mul(tv5,u);let tv4=Fp.mul(tv3,tv2);tv5=Fp.pow(tv4,c5);let isQR=Fp.eql(tv5,Fp.ONE);tv2=Fp.mul(tv3,c7),tv5=Fp.mul(tv4,tv1),tv3=Fp.cmov(tv2,tv3,isQR),tv4=Fp.cmov(tv5,tv4,isQR);for(let i=c1;i>_1n;i--){let tv5=i-_2n;tv5=_2n<<tv5-_1n;let tvv5=Fp.pow(tv4,tv5);const e1=Fp.eql(tvv5,Fp.ONE);tv2=Fp.mul(tv3,tv1),tv1=Fp.mul(tv1,tv1),tvv5=Fp.mul(tv4,tv1),tv3=Fp.cmov(tv2,tv3,e1),tv4=Fp.cmov(tvv5,tv4,e1)}return{isValid:isQR,value:tv3}};if(Fp.ORDER%_4n===_3n){const c1=(Fp.ORDER-_3n)/_4n,c2=Fp.sqrt(Fp.neg(Z));sqrtRatio=(u,v)=>{let tv1=Fp.sqr(v);const tv2=Fp.mul(u,v);tv1=Fp.mul(tv1,tv2);let y1=Fp.pow(tv1,c1);y1=Fp.mul(y1,tv2);const y2=Fp.mul(y1,c2),tv3=Fp.mul(Fp.sqr(y1),v),isQR=Fp.eql(tv3,u);return{isValid:isQR,value:Fp.cmov(y2,y1,isQR)}}}return sqrtRatio}export function mapToCurveSimpleSWU(Fp,opts){if(validateField(Fp),!Fp.isValid(opts.A)||!Fp.isValid(opts.B)||!Fp.isValid(opts.Z))throw new Error(\"mapToCurveSimpleSWU: invalid opts\");const sqrtRatio=SWUFpSqrtRatio(Fp,opts.Z);if(!Fp.isOdd)throw new Error(\"Fp.isOdd is not implemented!\");return u=>{let tv1,tv2,tv3,tv4,tv5,tv6,x,y;tv1=Fp.sqr(u),tv1=Fp.mul(tv1,opts.Z),tv2=Fp.sqr(tv1),tv2=Fp.add(tv2,tv1),tv3=Fp.add(tv2,Fp.ONE),tv3=Fp.mul(tv3,opts.B),tv4=Fp.cmov(opts.Z,Fp.neg(tv2),!Fp.eql(tv2,Fp.ZERO)),tv4=Fp.mul(tv4,opts.A),tv2=Fp.sqr(tv3),tv6=Fp.sqr(tv4),tv5=Fp.mul(tv6,opts.A),tv2=Fp.add(tv2,tv5),tv2=Fp.mul(tv2,tv3),tv6=Fp.mul(tv6,tv4),tv5=Fp.mul(tv6,opts.B),tv2=Fp.add(tv2,tv5),x=Fp.mul(tv1,tv3);const{isValid:isValid,value:value}=sqrtRatio(tv2,tv6);y=Fp.mul(tv1,u),y=Fp.mul(y,value),x=Fp.cmov(x,tv3,isValid),y=Fp.cmov(y,value,isValid);const e1=Fp.isOdd(u)===Fp.isOdd(y);return y=Fp.cmov(Fp.neg(y),y,e1),x=Fp.div(x,tv4),{x:x,y:y}}}","import{hmac}from\"@noble/hashes/hmac\";import{concatBytes,randomBytes}from\"@noble/hashes/utils\";import{weierstrass}from\"./abstract/weierstrass.js\";export function getHash(hash){return{hash:hash,hmac:function(key){for(var _len=arguments.length,msgs=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)msgs[_key-1]=arguments[_key];return hmac(hash,key,concatBytes(...msgs))},randomBytes:randomBytes}}export function createCurve(curveDef,defHash){const create=hash=>weierstrass({...curveDef,...getHash(hash)});return{...create(defHash),create:create}}","import{mod}from\"./modular.js\";import{abytes,bytesToNumberBE,concatBytes,utf8ToBytes,validateObject}from\"./utils.js\";const os2ip=bytesToNumberBE;function i2osp(value,length){if(anum(value),anum(length),value<0||value>=1<<8*length)throw new Error(\"invalid I2OSP input: \"+value);const res=Array.from({length:length}).fill(0);for(let i=length-1;i>=0;i--)res[i]=255&value,value>>>=8;return new Uint8Array(res)}function strxor(a,b){const arr=new Uint8Array(a.length);for(let i=0;i<a.length;i++)arr[i]=a[i]^b[i];return arr}function anum(item){if(!Number.isSafeInteger(item))throw new Error(\"number expected\")}export function expand_message_xmd(msg,DST,lenInBytes,H){abytes(msg),abytes(DST),anum(lenInBytes),DST.length>255&&(DST=H(concatBytes(utf8ToBytes(\"H2C-OVERSIZE-DST-\"),DST)));const{outputLen:b_in_bytes,blockLen:r_in_bytes}=H,ell=Math.ceil(lenInBytes/b_in_bytes);if(lenInBytes>65535||ell>255)throw new Error(\"expand_message_xmd: invalid lenInBytes\");const DST_prime=concatBytes(DST,i2osp(DST.length,1)),Z_pad=i2osp(0,r_in_bytes),l_i_b_str=i2osp(lenInBytes,2),b=new Array(ell),b_0=H(concatBytes(Z_pad,msg,l_i_b_str,i2osp(0,1),DST_prime));b[0]=H(concatBytes(b_0,i2osp(1,1),DST_prime));for(let i=1;i<=ell;i++){const args=[strxor(b_0,b[i-1]),i2osp(i+1,1),DST_prime];b[i]=H(concatBytes(...args))}return concatBytes(...b).slice(0,lenInBytes)}export function expand_message_xof(msg,DST,lenInBytes,k,H){if(abytes(msg),abytes(DST),anum(lenInBytes),DST.length>255){const dkLen=Math.ceil(2*k/8);DST=H.create({dkLen:dkLen}).update(utf8ToBytes(\"H2C-OVERSIZE-DST-\")).update(DST).digest()}if(lenInBytes>65535||DST.length>255)throw new Error(\"expand_message_xof: invalid lenInBytes\");return H.create({dkLen:lenInBytes}).update(msg).update(i2osp(lenInBytes,2)).update(DST).update(i2osp(DST.length,1)).digest()}export function hash_to_field(msg,count,options){validateObject(options,{DST:\"stringOrUint8Array\",p:\"bigint\",m:\"isSafeInteger\",k:\"isSafeInteger\",hash:\"hash\"});const{p:p,k:k,m:m,hash:hash,expand:expand,DST:_DST}=options;abytes(msg),anum(count);const DST=\"string\"==typeof _DST?utf8ToBytes(_DST):_DST,log2p=p.toString(2).length,L=Math.ceil((log2p+k)/8),len_in_bytes=count*m*L;let prb;if(\"xmd\"===expand)prb=expand_message_xmd(msg,DST,len_in_bytes,hash);else if(\"xof\"===expand)prb=expand_message_xof(msg,DST,len_in_bytes,k,hash);else{if(\"_internal_pass\"!==expand)throw new Error('expand must be \"xmd\" or \"xof\"');prb=msg}const u=new Array(count);for(let i=0;i<count;i++){const e=new Array(m);for(let j=0;j<m;j++){const elm_offset=L*(j+i*m),tv=prb.subarray(elm_offset,elm_offset+L);e[j]=mod(os2ip(tv),p)}u[i]=e}return u}export function isogenyMap(field,map){const COEFF=map.map((i=>Array.from(i).reverse()));return(x,y)=>{const[xNum,xDen,yNum,yDen]=COEFF.map((val=>val.reduce(((acc,i)=>field.add(field.mul(acc,x),i)))));return x=field.div(xNum,xDen),y=field.mul(y,field.div(yNum,yDen)),{x:x,y:y}}}export function createHasher(Point,mapToCurve,def){if(\"function\"!=typeof mapToCurve)throw new Error(\"mapToCurve() must be defined\");return{hashToCurve(msg,options){const u=hash_to_field(msg,2,{...def,DST:def.DST,...options}),u0=Point.fromAffine(mapToCurve(u[0])),u1=Point.fromAffine(mapToCurve(u[1])),P=u0.add(u1).clearCofactor();return P.assertValidity(),P},encodeToCurve(msg,options){const u=hash_to_field(msg,1,{...def,DST:def.encodeDST,...options}),P=Point.fromAffine(mapToCurve(u[0])).clearCofactor();return P.assertValidity(),P},mapToCurve(scalars){if(!Array.isArray(scalars))throw new Error(\"mapToCurve: expected array of bigints\");for(const i of scalars)if(\"bigint\"!=typeof i)throw new Error(\"mapToCurve: expected array of bigints\");const P=Point.fromAffine(mapToCurve(scalars)).clearCofactor();return P.assertValidity(),P}}}","import{sha256}from\"@noble/hashes/sha256\";import{randomBytes}from\"@noble/hashes/utils\";import{createCurve}from\"./_shortw_utils.js\";import{createHasher,isogenyMap}from\"./abstract/hash-to-curve.js\";import{Field,mod,pow2}from\"./abstract/modular.js\";import{aInRange,bytesToNumberBE,concatBytes,ensureBytes,inRange,numberToBytesBE}from\"./abstract/utils.js\";import{mapToCurveSimpleSWU}from\"./abstract/weierstrass.js\";const secp256k1P=BigInt(\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\"),secp256k1N=BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\"),_1n=BigInt(1),_2n=BigInt(2),divNearest=(a,b)=>(a+b/_2n)/b;function sqrtMod(y){const P=secp256k1P,_3n=BigInt(3),_6n=BigInt(6),_11n=BigInt(11),_22n=BigInt(22),_23n=BigInt(23),_44n=BigInt(44),_88n=BigInt(88),b2=y*y*y%P,b3=b2*b2*y%P,b6=pow2(b3,_3n,P)*b3%P,b9=pow2(b6,_3n,P)*b3%P,b11=pow2(b9,_2n,P)*b2%P,b22=pow2(b11,_11n,P)*b11%P,b44=pow2(b22,_22n,P)*b22%P,b88=pow2(b44,_44n,P)*b44%P,b176=pow2(b88,_88n,P)*b88%P,b220=pow2(b176,_44n,P)*b44%P,b223=pow2(b220,_3n,P)*b3%P,t1=pow2(b223,_23n,P)*b22%P,t2=pow2(t1,_6n,P)*b2%P,root=pow2(t2,_2n,P);if(!Fpk1.eql(Fpk1.sqr(root),y))throw new Error(\"Cannot find square root\");return root}const Fpk1=Field(secp256k1P,void 0,void 0,{sqrt:sqrtMod});export const secp256k1=createCurve({a:BigInt(0),b:BigInt(7),Fp:Fpk1,n:secp256k1N,Gx:BigInt(\"55066263022277343669578718895168534326250603453777594175500187360389116729240\"),Gy:BigInt(\"32670510020758816978083085130507043184471273380659243275938904335757337482424\"),h:BigInt(1),lowS:!0,endo:{beta:BigInt(\"0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\"),splitScalar:k=>{const n=secp256k1N,a1=BigInt(\"0x3086d221a7d46bcde86c90e49284eb15\"),b1=-_1n*BigInt(\"0xe4437ed6010e88286f547fa90abfe4c3\"),a2=BigInt(\"0x114ca50f7a8e2f3f657c1108d9d44cfd8\"),b2=a1,POW_2_128=BigInt(\"0x100000000000000000000000000000000\"),c1=divNearest(b2*k,n),c2=divNearest(-b1*k,n);let k1=mod(k-c1*a1-c2*a2,n),k2=mod(-c1*b1-c2*b2,n);const k1neg=k1>POW_2_128,k2neg=k2>POW_2_128;if(k1neg&&(k1=n-k1),k2neg&&(k2=n-k2),k1>POW_2_128||k2>POW_2_128)throw new Error(\"splitScalar: Endomorphism failed, k=\"+k);return{k1neg:k1neg,k1:k1,k2neg:k2neg,k2:k2}}}},sha256);const _0n=BigInt(0),TAGGED_HASH_PREFIXES={};function taggedHash(tag){let tagP=TAGGED_HASH_PREFIXES[tag];if(void 0===tagP){const tagH=sha256(Uint8Array.from(tag,(c=>c.charCodeAt(0))));tagP=concatBytes(tagH,tagH),TAGGED_HASH_PREFIXES[tag]=tagP}for(var _len=arguments.length,messages=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)messages[_key-1]=arguments[_key];return sha256(concatBytes(tagP,...messages))}const pointToBytes=point=>point.toRawBytes(!0).slice(1),numTo32b=n=>numberToBytesBE(n,32),modP=x=>mod(x,secp256k1P),modN=x=>mod(x,secp256k1N),Point=secp256k1.ProjectivePoint,GmulAdd=(Q,a,b)=>Point.BASE.multiplyAndAddUnsafe(Q,a,b);function schnorrGetExtPubKey(priv){let d_=secp256k1.utils.normPrivateKeyToScalar(priv),p=Point.fromPrivateKey(d_);return{scalar:p.hasEvenY()?d_:modN(-d_),bytes:pointToBytes(p)}}function lift_x(x){aInRange(\"x\",x,_1n,secp256k1P);const xx=modP(x*x);let y=sqrtMod(modP(xx*x+BigInt(7)));y%_2n!==_0n&&(y=modP(-y));const p=new Point(x,y,_1n);return p.assertValidity(),p}const num=bytesToNumberBE;function challenge(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];return modN(num(taggedHash(\"BIP0340/challenge\",...args)))}function schnorrGetPublicKey(privateKey){return schnorrGetExtPubKey(privateKey).bytes}function schnorrSign(message,privateKey){let auxRand=arguments.length>2&&void 0!==arguments[2]?arguments[2]:randomBytes(32);const m=ensureBytes(\"message\",message),{bytes:px,scalar:d}=schnorrGetExtPubKey(privateKey),a=ensureBytes(\"auxRand\",auxRand,32),t=numTo32b(d^num(taggedHash(\"BIP0340/aux\",a))),rand=taggedHash(\"BIP0340/nonce\",t,px,m),k_=modN(num(rand));if(k_===_0n)throw new Error(\"sign failed: k is zero\");const{bytes:rx,scalar:k}=schnorrGetExtPubKey(k_),e=challenge(rx,px,m),sig=new Uint8Array(64);if(sig.set(rx,0),sig.set(numTo32b(modN(k+e*d)),32),!schnorrVerify(sig,m,px))throw new Error(\"sign: Invalid signature produced\");return sig}function schnorrVerify(signature,message,publicKey){const sig=ensureBytes(\"signature\",signature,64),m=ensureBytes(\"message\",message),pub=ensureBytes(\"publicKey\",publicKey,32);try{const P=lift_x(num(pub)),r=num(sig.subarray(0,32));if(!inRange(r,_1n,secp256k1P))return!1;const s=num(sig.subarray(32,64));if(!inRange(s,_1n,secp256k1N))return!1;const e=challenge(numTo32b(r),pointToBytes(P),m),R=GmulAdd(P,s,modN(-e));return!(!R||!R.hasEvenY()||R.toAffine().x!==r)}catch(error){return!1}}export const schnorr=(()=>({getPublicKey:schnorrGetPublicKey,sign:schnorrSign,verify:schnorrVerify,utils:{randomPrivateKey:secp256k1.utils.randomPrivateKey,lift_x:lift_x,pointToBytes:pointToBytes,numberToBytesBE:numberToBytesBE,bytesToNumberBE:bytesToNumberBE,taggedHash:taggedHash,mod:mod}}))();const isoMap=(()=>isogenyMap(Fpk1,[[\"0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7\",\"0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581\",\"0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262\",\"0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c\"],[\"0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b\",\"0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],[\"0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c\",\"0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3\",\"0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931\",\"0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84\"],[\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b\",\"0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573\",\"0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"]].map((i=>i.map((j=>BigInt(j)))))))(),mapSWU=(()=>mapToCurveSimpleSWU(Fpk1,{A:BigInt(\"0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533\"),B:BigInt(\"1771\"),Z:Fpk1.create(BigInt(\"-11\"))}))(),htf=(()=>createHasher(secp256k1.ProjectivePoint,(scalars=>{const{x:x,y:y}=mapSWU(Fpk1.create(scalars[0]));return isoMap(x,y)}),{DST:\"secp256k1_XMD:SHA-256_SSWU_RO_\",encodeDST:\"secp256k1_XMD:SHA-256_SSWU_NU_\",p:Fpk1.ORDER,m:1,k:128,expand:\"xmd\",hash:sha256}))();export const hashToCurve=(()=>htf.hashToCurve)();export const encodeToCurve=(()=>htf.encodeToCurve)();"],"names":["Maj","a","b","c","HashMD","constructor","blockLen","outputLen","padOffset","isLE","super","this","finished","length","pos","destroyed","buffer","Uint8Array","view","update","data","len","take","Math","min","set","subarray","process","dataView","roundClean","digestInto","out","fill","i","byteOffset","value","setBigUint64","_32n","BigInt","_u32_max","wh","Number","wl","h","l","setUint32","oview","Error","outLen","state","get","digest","res","slice","destroy","_cloneInto","to","SHA256_K","Uint32Array","SHA256_IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","s1","T1","T2","SHA224","sha256","HMAC","hash","_key","key","iHash","create","pad","oHash","buf","Object","getPrototypeOf","hmac","message","_0n","_1n","_2n","isBytes","ArrayBuffer","isView","name","abytes","item","abool","title","hexes","Array","from","_","toString","padStart","bytesToHex","bytes","hex","numberToHexUnpadded","num","hexToNumber","asciis","_0","_9","f","asciiToBase16","ch","hexToBytes","hl","al","array","ai","hi","n1","charCodeAt","n2","char","reverse","numberToBytesBE","n","numberToBytesLE","expectedLength","e","concatBytes","sum","arguments","utf8ToBytes","str","TextEncoder","encode","isPosBig","inRange","max","aInRange","bitLen","bitMask","u8n","u8fr","arr","createHmacDrbg","hashLen","qByteLen","hmacFn","v","k","reset","_len","reseed","seed","gen","sl","push","pred","validatorFns","bigint","val","function","boolean","string","stringOrUint8Array","isSafeInteger","isArray","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","type","isOptional","checkVal","String","entries","memoized","fn","map","WeakMap","arg","_len2","args","_key2","computed","_3n","_4n","_5n","_8n","mod","result","pow","power","modulo","pow2","x","invert","number","y","u","q","r","m","FpSqrt","P","p1div4","root","eql","sqr","c1","mul","nv","sub","ONE","legendreC","Q","S","Z","Q1div2","neg","g","ZERO","t2","ge","tonelliShanks","FIELD_FIELDS","validateField","reduce","ORDER","MASK","BYTES","BITS","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","redef","sqrtP","freeze","is0","isOdd","lhs","rhs","add","p","d","FpPow","div","sqrN","addN","subN","mulN","inv","sqrt","invertBatch","lst","nums","tmp","lastMultiplied","acc","inverted","reduceRight","FpInvertBatch","cmov","toBytes","fromBytes","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","constTimeNegate","condition","negate","validateW","W","bits","calcWOpts","windows","windowSize","validateMSMPoints","points","forEach","validateMSMScalars","scalars","s","pointPrecomputes","pointWindowSizes","getW","validateBasic","curve","Gx","Gy","validateSigVerOpts","opts","lowS","prehash","b2n","h2b","DERErr","DER","Err","_tlv","tag","dataLen","lenLen","decode","first","lengthBytes","_int","parseInt","toSig","int","tlv","seqBytes","seqLeftBytes","rBytes","rLeftBytes","sBytes","sLeftBytes","hexFromSig","sig","seq","weierstrassPoints","CURVE","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","clearCofactor","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","Fn","_c","point","_isCompressed","toAffine","tail","weierstrassEquation","x2","x3","normPrivateKeyToScalar","lengths","N","includes","error","assertPrjPoint","other","Point","toAffineMemo","iz","px","py","pz","z","ax","ay","zz","assertValidMemo","left","right","fromAffine","normalizeZ","toInv","fromHex","assertValidity","fromPrivateKey","privateKey","BASE","multiply","msm","fieldN","zero","wbits","buckets","floor","j","scalar","resI","sumI","double","pippenger","_setWindowSize","wnaf","setWindowSize","hasEvenY","equals","X1","Y1","Z1","X2","Y2","Z2","U1","U2","b3","X3","Y3","Z3","t0","t1","t3","t4","t5","subtract","wNAF","wNAFCached","multiplyUnsafe","sc","I","hasPrecomputes","wNAFCachedUnsafe","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","cofactor","toRawBytes","isCompressed","toHex","_bits","elm","unsafeLadder","precomputeWindow","base","window","precomputes","mask","maxNumber","shiftBy","offset1","offset2","abs","cond1","cond2","wNAFUnsafe","curr","getPrecomputes","transform","comp","prev","delete","ProjectivePoint","isWithinCurveOrder","weierstrass","curveDef","randomBytes","bits2int","bits2int_modN","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","modN","invN","cat","head","y2","sqrtError","suffix","numToNByteStr","isBiggerThanHalfOrder","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","prefix","R","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","utils","isValidPrivateKey","randomPrivateKey","fieldLen","minLen","reduced","mapHashToField","precompute","isProbPub","delta","ORDER_MASK","int2octets","defaultSigOpts","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","sign","privKey","k2sig","some","extraEntropy","ent","h1int","seedArgs","kBytes","ik","normS","prepSig","verify","signature","publicKey","sg","format","isHex","isObj","_sig","derError","is","mapToCurveSimpleSWU","sqrtRatio","o","_2n_pow_c1_1","_2n_pow_c1","c2","c3","c4","c5","c6","c7","tv1","tv2","tv3","tv5","tv4","isQR","tvv5","e1","y1","SWUFpSqrtRatio","tv6","getHash","msgs","os2ip","i2osp","anum","strxor","hash_to_field","msg","count","options","DST","expand","_DST","log2p","L","len_in_bytes","prb","lenInBytes","b_in_bytes","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","expand_message_xmd","dkLen","expand_message_xof","elm_offset","tv","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b2","b6","b9","b11","b22","b44","b88","b176","b220","b223","Fpk1","secp256k1","defHash","createCurve","a1","b1","a2","POW_2_128","TAGGED_HASH_PREFIXES","taggedHash","tagP","tagH","messages","pointToBytes","numTo32b","modP","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrGetPublicKey","schnorrSign","auxRand","t","rand","k_","rx","schnorrVerify","pub","isoMap","COEFF","xNum","xDen","yNum","yDen","isogenyMap","mapSWU","htf","mapToCurve","def","hashToCurve","u0","encodeToCurve","encodeDST","createHasher"],"sourceRoot":""}