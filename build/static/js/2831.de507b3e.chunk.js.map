{"version":3,"file":"static/js/2831.de507b3e.chunk.js","mappings":"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","sources":["hooks/useV3PositionFees.ts","graphql/data/util.tsx","hooks/usePositionTokenURI.ts","pages/Pool/PositionPage.tsx","components/Toggle/MultiToggle.tsx","components/RateToggle/index.tsx","lib/utils/formatLocaleNumber.ts","utils/formatCurrencyAmount.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { Pool } from '@uniswap/v3-sdk'\nimport { Currency, CurrencyAmount } from '@synthra-swap/sdk-core'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\nimport { useEffect, useState } from 'react'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nimport { useV3NFTPositionManagerContract } from './useContract'\n\nconst MAX_UINT128 = BigNumber.from(2).pow(128).sub(1)\n\n// compute current + counterfactual fees for a v3 position\nexport function useV3PositionFees(\n  pool?: Pool,\n  tokenId?: BigNumber,\n  asWETH = false\n): [CurrencyAmount<Currency>, CurrencyAmount<Currency>] | [undefined, undefined] {\n  const positionManager = useV3NFTPositionManagerContract(false)\n  const owner: string | undefined = useSingleCallResult(tokenId ? positionManager : null, 'ownerOf', [tokenId])\n    .result?.[0]\n\n  const tokenIdHexString = tokenId?.toHexString()\n  const latestBlockNumber = useBlockNumber()\n\n  // we can't use multicall for this because we need to simulate the call from a specific address\n  // latestBlockNumber is included to ensure data stays up-to-date every block\n  const [amounts, setAmounts] = useState<[BigNumber, BigNumber] | undefined>()\n  useEffect(() => {\n    ;(async function getFees() {\n      if (positionManager && tokenIdHexString && owner) {\n        try {\n          const results = await positionManager.callStatic.collect(\n            {\n              tokenId: tokenIdHexString,\n              recipient: owner, // some tokens might fail if transferred to address(0)\n              amount0Max: MAX_UINT128,\n              amount1Max: MAX_UINT128,\n            },\n            { from: owner } // need to simulate the call as the owner\n          )\n          setAmounts([results.amount0, results.amount1])\n        } catch {\n          // If the static call fails, the default state will remain for `amounts`.\n          // This case is handled by returning unclaimed fees as empty.\n          // TODO(WEB-2283): Look into why we have failures with call data being 0x.\n        }\n      }\n    })()\n  }, [positionManager, tokenIdHexString, owner, latestBlockNumber])\n\n  if (pool && amounts) {\n    return [\n      CurrencyAmount.fromRawAmount(asWETH ? pool.token0 : unwrappedToken(pool.token0), amounts[0].toString()),\n      CurrencyAmount.fromRawAmount(asWETH ? pool.token1 : unwrappedToken(pool.token1), amounts[1].toString()),\n    ]\n  } else {\n    return [undefined, undefined]\n  }\n}\n","import { ChainId } from '@synthra-swap/sdk-core'\n\nconst GQL_CHAINS = [ChainId.MAINNET, ChainId.OPTIMISM, ChainId.POLYGON, ChainId.ARBITRUM_ONE, ChainId.CELO] as const\ntype GqlChainsType = (typeof GQL_CHAINS)[number]\n\nexport function isGqlSupportedChain(chainId: number | undefined): chainId is GqlChainsType {\n  return !!chainId && GQL_CHAINS.includes(chainId)\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport JSBI from 'jsbi'\nimport { NEVER_RELOAD, useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { useV3NFTPositionManagerContract } from './useContract'\n\ntype TokenId = number | JSBI | BigNumber\n\nconst STARTS_WITH = 'data:application/json;base64,'\n\ntype UsePositionTokenURIResult =\n  | {\n      valid: true\n      loading: false\n      result: {\n        name: string\n        description: string\n        image: string\n      }\n    }\n  | {\n      valid: false\n      loading: false\n    }\n  | {\n      valid: true\n      loading: true\n    }\n\nexport function usePositionTokenURI(tokenId: TokenId | undefined): UsePositionTokenURIResult {\n  const contract = useV3NFTPositionManagerContract()\n  const inputs = useMemo(\n    () => [tokenId instanceof BigNumber ? tokenId.toHexString() : tokenId?.toString(16)],\n    [tokenId]\n  )\n  const { result, error, loading, valid } = useSingleCallResult(contract, 'tokenURI', inputs, {\n    ...NEVER_RELOAD,\n    gasRequired: 3_000_000,\n  })\n\n  return useMemo(() => {\n    if (error || !valid || !tokenId) {\n      return {\n        valid: false,\n        loading: false,\n      }\n    }\n    if (loading) {\n      return {\n        valid: true,\n        loading: true,\n      }\n    }\n    if (!result) {\n      return {\n        valid: false,\n        loading: false,\n      }\n    }\n    const [tokenURI] = result as [string]\n    if (!tokenURI || !tokenURI.startsWith(STARTS_WITH))\n      return {\n        valid: false,\n        loading: false,\n      }\n\n    try {\n      const json = JSON.parse(atob(tokenURI.slice(STARTS_WITH.length)))\n\n      return {\n        valid: true,\n        loading: false,\n        result: json,\n      }\n    } catch (error) {\n      return { valid: false, loading: false }\n    }\n  }, [error, loading, result, tokenId, valid])\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { NonfungiblePositionManager, Pool, Position } from '@uniswap/v3-sdk'\nimport { Currency, CurrencyAmount, Fraction, Percent, Price, Token } from '@synthra-swap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport Badge from 'components/Badge'\nimport { ButtonConfirmed, ButtonGray, ButtonPrimary } from 'components/Button'\nimport { DarkCard, LightCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport { LoadingFullscreen } from 'components/Loader/styled'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { RowBetween, RowFixed } from 'components/Row'\nimport { Dots } from 'components/swap/styled'\nimport Toggle from 'components/Toggle'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from 'components/TransactionConfirmationModal'\nimport { CHAIN_IDS_TO_NAMES, isSupportedChain } from 'constants/chains'\nimport { isGqlSupportedChain } from 'graphql/data/util'\nimport { useToken } from 'hooks/Tokens'\nimport { useV3NFTPositionManagerContract } from 'hooks/useContract'\nimport useIsTickAtLimit from 'hooks/useIsTickAtLimit'\nimport { PoolState, usePool } from 'hooks/usePools'\nimport useStablecoinPrice from 'hooks/useStablecoinPrice'\nimport { useV3PositionFees } from 'hooks/useV3PositionFees'\nimport { useV3PositionFromTokenId } from 'hooks/useV3Positions'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport useNativeCurrency from 'lib/hooks/useNativeCurrency'\nimport { PropsWithChildren, useCallback, useMemo, useRef, useState } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { Bound } from 'state/mint/v3/actions'\nimport { useIsTransactionPending, useTransactionAdder } from 'state/transactions/hooks'\nimport styled, { useTheme } from 'styled-components'\nimport { ExternalLink, HideExtraSmall, HideSmall, StyledRouterLink, ThemedText } from 'theme/components'\nimport { currencyId } from 'utils/currencyId'\nimport { WrongChainError } from 'utils/errors'\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nimport RangeBadge from '../../components/Badge/RangeBadge'\nimport { SmallButtonPrimary } from '../../components/Button/index'\nimport { getPriceOrderingFromPositionForUI } from '../../components/PositionListItem'\nimport RateToggle from '../../components/RateToggle'\nimport { SwitchLocaleLink } from '../../components/SwitchLocaleLink'\nimport { usePositionTokenURI } from '../../hooks/usePositionTokenURI'\nimport { TransactionType } from '../../state/transactions/types'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport { LoadingRows } from './styled'\n\nconst PositionPageButtonPrimary = styled(ButtonPrimary)`\n  width: 228px;\n  height: 40px;\n  font-size: 16px;\n  line-height: 20px;\n  border-radius: 12px;\n`\n\nconst PageWrapper = styled.div`\n  padding: 68px 16px 16px 16px;\n\n  min-width: 800px;\n  max-width: 960px;\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    min-width: 100%;\n    padding: 16px;\n  }\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    min-width: 100%;\n    padding: 16px;\n  }\n`\n\nconst BadgeText = styled.div`\n  font-weight: 535;\n  font-size: 14px;\n  color: ${({ theme }) => theme.neutral2};\n`\n\n// responsive text\n// disable the warning because we don't use the end prop, we just want to filter it out\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst Label = styled(({ end, ...props }) => <ThemedText.DeprecatedLabel {...props} />)<{ end?: boolean }>`\n  display: flex;\n  font-size: 16px;\n  justify-content: ${({ end }) => (end ? 'flex-end' : 'flex-start')};\n  align-items: center;\n`\n\nconst ExtentsText = styled.span`\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 14px;\n  text-align: center;\n  margin-right: 4px;\n  font-weight: 535;\n`\n\nconst HoverText = styled(ThemedText.DeprecatedMain)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.neutral2};\n  :hover {\n    color: ${({ theme }) => theme.neutral1};\n    text-decoration: none;\n  }\n`\n\nconst DoubleArrow = styled.span`\n  color: ${({ theme }) => theme.neutral3};\n  margin: 0 1rem;\n`\nconst ResponsiveRow = styled(RowBetween)`\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    flex-direction: column;\n    align-items: flex-start;\n    row-gap: 16px;\n    width: 100%;\n  }\n`\n\nconst ActionButtonResponsiveRow = styled(ResponsiveRow)`\n  width: 50%;\n  justify-content: flex-end;\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    width: 100%;\n    flex-direction: row;\n    * {\n      width: 100%;\n    }\n  }\n`\n\nconst ResponsiveButtonConfirmed = styled(ButtonConfirmed)`\n  border-radius: 12px;\n  padding: 6px 8px;\n  width: fit-content;\n  font-size: 16px;\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    width: fit-content;\n  }\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    width: fit-content;\n  }\n`\n\nconst NFTGrid = styled.div`\n  display: grid;\n  grid-template: 'overlap';\n  min-height: 400px;\n`\n\nconst NFTCanvas = styled.canvas`\n  grid-area: overlap;\n`\n\nconst NFTImage = styled.img`\n  grid-area: overlap;\n  height: 400px;\n  /* Ensures SVG appears on top of canvas. */\n  z-index: 1;\n`\n\nfunction CurrentPriceCard({\n  inverted,\n  pool,\n  currencyQuote,\n  currencyBase,\n}: {\n  inverted?: boolean\n  pool?: Pool | null\n  currencyQuote?: Currency\n  currencyBase?: Currency\n}) {\n  const { formatPrice } = useFormatter()\n\n  if (!pool || !currencyQuote || !currencyBase) {\n    return null\n  }\n\n  return (\n    <LightCard padding=\"12px\">\n      <AutoColumn gap=\"sm\" justify=\"center\">\n        <ExtentsText>\n          <Trans>Current price</Trans>\n        </ExtentsText>\n        <ThemedText.DeprecatedMediumHeader textAlign=\"center\">\n          {formatPrice({ price: inverted ? pool.token1Price : pool.token0Price, type: NumberType.TokenTx })}\n        </ThemedText.DeprecatedMediumHeader>\n        <ExtentsText>\n          <Trans>\n            {currencyQuote?.symbol} per {currencyBase?.symbol}\n          </Trans>\n        </ExtentsText>\n      </AutoColumn>\n    </LightCard>\n  )\n}\n\nconst TokenLink = ({\n  children,\n  chainId,\n  address,\n}: PropsWithChildren<{ chainId: keyof typeof CHAIN_IDS_TO_NAMES; address: string }>) => {\n  const chainName = CHAIN_IDS_TO_NAMES[chainId]\n  return <StyledRouterLink to={`/tokens/${chainName}/${address}`}>{children}</StyledRouterLink>\n}\n\nconst ExternalTokenLink = ({ children, chainId, address }: PropsWithChildren<{ chainId: number; address: string }>) => {\n  return <ExternalLink href={getExplorerLink(chainId, address, ExplorerDataType.TOKEN)}>{children}</ExternalLink>\n}\n\nfunction LinkedCurrency({ chainId, currency }: { chainId?: number; currency?: Currency }) {\n  const address = (currency as Token)?.address\n\n  if (typeof chainId === 'number' && address) {\n    const Link = isGqlSupportedChain(chainId) ? TokenLink : ExternalTokenLink\n    return (\n      <Link chainId={chainId} address={address}>\n        <RowFixed>\n          <CurrencyLogo currency={currency} size=\"20px\" style={{ marginRight: '0.5rem' }} />\n          <ThemedText.DeprecatedMain>{currency?.symbol} ↗</ThemedText.DeprecatedMain>\n        </RowFixed>\n      </Link>\n    )\n  }\n\n  return (\n    <RowFixed>\n      <CurrencyLogo currency={currency} size=\"20px\" style={{ marginRight: '0.5rem' }} />\n      <ThemedText.DeprecatedMain>{currency?.symbol}</ThemedText.DeprecatedMain>\n    </RowFixed>\n  )\n}\n\nfunction getRatio(\n  lower: Price<Currency, Currency>,\n  current: Price<Currency, Currency>,\n  upper: Price<Currency, Currency>\n) {\n  try {\n    if (!current.greaterThan(lower)) {\n      return 100\n    } else if (!current.lessThan(upper)) {\n      return 0\n    }\n\n    const a = Number.parseFloat(lower.toSignificant(15))\n    const b = Number.parseFloat(upper.toSignificant(15))\n    const c = Number.parseFloat(current.toSignificant(15))\n\n    const ratio = Math.floor((1 / ((Math.sqrt(a * b) - Math.sqrt(b * c)) / (c - Math.sqrt(b * c)) + 1)) * 100)\n\n    if (ratio < 0 || ratio > 100) {\n      throw Error('Out of range')\n    }\n\n    return ratio\n  } catch {\n    return undefined\n  }\n}\n\n// snapshots a src img into a canvas\nfunction getSnapshot(src: HTMLImageElement, canvas: HTMLCanvasElement, targetHeight: number) {\n  const context = canvas.getContext('2d')\n\n  if (context) {\n    let { width, height } = src\n\n    // src may be hidden and not have the target dimensions\n    const ratio = width / height\n    height = targetHeight\n    width = Math.round(ratio * targetHeight)\n\n    // Ensure crispness at high DPIs\n    canvas.width = width * devicePixelRatio\n    canvas.height = height * devicePixelRatio\n    canvas.style.width = width + 'px'\n    canvas.style.height = height + 'px'\n    context.scale(devicePixelRatio, devicePixelRatio)\n\n    context.clearRect(0, 0, width, height)\n    context.drawImage(src, 0, 0, width, height)\n  }\n}\n\nfunction NFT({ image, height: targetHeight }: { image: string; height: number }) {\n  const [animate, setAnimate] = useState(false)\n\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const imageRef = useRef<HTMLImageElement>(null)\n\n  return (\n    <NFTGrid\n      onMouseEnter={() => {\n        setAnimate(true)\n      }}\n      onMouseLeave={() => {\n        // snapshot the current frame so the transition to the canvas is smooth\n        if (imageRef.current && canvasRef.current) {\n          getSnapshot(imageRef.current, canvasRef.current, targetHeight)\n        }\n        setAnimate(false)\n      }}\n    >\n      <NFTCanvas ref={canvasRef} />\n      <NFTImage\n        ref={imageRef}\n        src={image}\n        hidden={!animate}\n        onLoad={() => {\n          // snapshot for the canvas\n          if (imageRef.current && canvasRef.current) {\n            getSnapshot(imageRef.current, canvasRef.current, targetHeight)\n          }\n        }}\n      />\n    </NFTGrid>\n  )\n}\n\nconst useInverter = ({\n  priceLower,\n  priceUpper,\n  quote,\n  base,\n  invert,\n}: {\n  priceLower?: Price<Token, Token>\n  priceUpper?: Price<Token, Token>\n  quote?: Token\n  base?: Token\n  invert?: boolean\n}): {\n  priceLower?: Price<Token, Token>\n  priceUpper?: Price<Token, Token>\n  quote?: Token\n  base?: Token\n} => {\n  return {\n    priceUpper: invert ? priceLower?.invert() : priceUpper,\n    priceLower: invert ? priceUpper?.invert() : priceLower,\n    quote: invert ? base : quote,\n    base: invert ? quote : base,\n  }\n}\n\nexport function PositionPageUnsupportedContent() {\n  return (\n    <PageWrapper>\n      <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n        <ThemedText.HeadlineLarge style={{ marginBottom: '8px' }}>\n          <Trans>Position unavailable</Trans>\n        </ThemedText.HeadlineLarge>\n        <ThemedText.BodyPrimary style={{ marginBottom: '32px' }}>\n          <Trans>To view a position, you must be connected to the network it belongs to.</Trans>\n        </ThemedText.BodyPrimary>\n        <PositionPageButtonPrimary as={Link} to=\"/pools\" width=\"fit-content\">\n          <Trans>Back to Pools</Trans>\n        </PositionPageButtonPrimary>\n      </div>\n    </PageWrapper>\n  )\n}\n\nexport default function PositionPage() {\n  const { chainId } = useWeb3React()\n  if (isSupportedChain(chainId)) {\n    return <PositionPageContent />\n  } else {\n    return <PositionPageUnsupportedContent />\n  }\n}\n\nconst PositionLabelRow = styled(RowFixed)({\n  flexWrap: 'wrap',\n  gap: 8,\n})\n\nfunction parseTokenId(tokenId: string | undefined): BigNumber | undefined {\n  if (!tokenId) return\n  try {\n    return BigNumber.from(tokenId)\n  } catch (error) {\n    return\n  }\n}\n\nfunction PositionPageContent() {\n  const { tokenId: tokenIdFromUrl } = useParams<{ tokenId?: string }>()\n  const { chainId, account, provider } = useWeb3React()\n  const theme = useTheme()\n  const { formatTickPrice } = useFormatter()\n\n  const parsedTokenId = parseTokenId(tokenIdFromUrl)\n  const { loading, position: positionDetails } = useV3PositionFromTokenId(parsedTokenId)\n\n  const {\n    token0: token0Address,\n    token1: token1Address,\n    fee: feeAmount,\n    liquidity,\n    tickLower,\n    tickUpper,\n    tokenId,\n  } = positionDetails || {}\n\n  const removed = liquidity?.eq(0)\n\n  const metadata = usePositionTokenURI(parsedTokenId)\n\n  const token0 = useToken(token0Address)\n  const token1 = useToken(token1Address)\n\n  const currency0 = token0 ? unwrappedToken(token0) : undefined\n  const currency1 = token1 ? unwrappedToken(token1) : undefined\n\n  // flag for receiving WETH\n  const [receiveWETH, setReceiveWETH] = useState(false)\n  const nativeCurrency = useNativeCurrency(chainId)\n  const nativeWrappedSymbol = nativeCurrency.wrapped.symbol\n\n  // construct Position from details returned\n  const [poolState, pool] = usePool(token0 ?? undefined, token1 ?? undefined, feeAmount)\n  const position = useMemo(() => {\n    if (pool && liquidity && typeof tickLower === 'number' && typeof tickUpper === 'number') {\n      return new Position({ pool, liquidity: liquidity.toString(), tickLower, tickUpper })\n    }\n    return undefined\n  }, [liquidity, pool, tickLower, tickUpper])\n\n  const tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper)\n\n  const pricesFromPosition = getPriceOrderingFromPositionForUI(position)\n  const [manuallyInverted, setManuallyInverted] = useState(false)\n\n  // handle manual inversion\n  const { priceLower, priceUpper, base } = useInverter({\n    priceLower: pricesFromPosition.priceLower,\n    priceUpper: pricesFromPosition.priceUpper,\n    quote: pricesFromPosition.quote,\n    base: pricesFromPosition.base,\n    invert: manuallyInverted,\n  })\n\n  const inverted = token1 ? base?.equals(token1) : undefined\n  const currencyQuote = inverted ? currency0 : currency1\n  const currencyBase = inverted ? currency1 : currency0\n\n  const ratio = useMemo(() => {\n    return priceLower && pool && priceUpper\n      ? getRatio(\n          inverted ? priceUpper.invert() : priceLower,\n          pool.token0Price,\n          inverted ? priceLower.invert() : priceUpper\n        )\n      : undefined\n  }, [inverted, pool, priceLower, priceUpper])\n\n  // fees\n  const [feeValue0, feeValue1] = useV3PositionFees(pool ?? undefined, positionDetails?.tokenId, receiveWETH)\n\n  // these currencies will match the feeValue{0,1} currencies for the purposes of fee collection\n  const currency0ForFeeCollectionPurposes = pool ? (receiveWETH ? pool.token0 : unwrappedToken(pool.token0)) : undefined\n  const currency1ForFeeCollectionPurposes = pool ? (receiveWETH ? pool.token1 : unwrappedToken(pool.token1)) : undefined\n\n  const [collecting, setCollecting] = useState<boolean>(false)\n  const [collectMigrationHash, setCollectMigrationHash] = useState<string | null>(null)\n  const isCollectPending = useIsTransactionPending(collectMigrationHash ?? undefined)\n  const [showConfirm, setShowConfirm] = useState(false)\n\n  // usdc prices always in terms of tokens\n  const price0 = useStablecoinPrice(token0 ?? undefined)\n  const price1 = useStablecoinPrice(token1 ?? undefined)\n\n  const fiatValueOfFees: CurrencyAmount<Currency> | null = useMemo(() => {\n    if (!price0 || !price1 || !feeValue0 || !feeValue1) return null\n\n    // we wrap because it doesn't matter, the quote returns a USDC amount\n    const feeValue0Wrapped = feeValue0?.wrapped\n    const feeValue1Wrapped = feeValue1?.wrapped\n\n    if (!feeValue0Wrapped || !feeValue1Wrapped) return null\n\n    const amount0 = price0.quote(feeValue0Wrapped)\n    const amount1 = price1.quote(feeValue1Wrapped)\n    return amount0.add(amount1)\n  }, [price0, price1, feeValue0, feeValue1])\n\n  const fiatValueOfLiquidity: CurrencyAmount<Token> | null = useMemo(() => {\n    if (!price0 || !price1 || !position) return null\n    const amount0 = price0.quote(position.amount0)\n    const amount1 = price1.quote(position.amount1)\n    return amount0.add(amount1)\n  }, [price0, price1, position])\n\n  const addTransaction = useTransactionAdder()\n  const positionManager = useV3NFTPositionManagerContract()\n  const collect = useCallback(async () => {\n    if (\n      !currency0ForFeeCollectionPurposes ||\n      !currency1ForFeeCollectionPurposes ||\n      !chainId ||\n      !positionManager ||\n      !account ||\n      !tokenId ||\n      !provider\n    )\n      return\n\n    setCollecting(true)\n\n    // we fall back to expecting 0 fees in case the fetch fails, which is safe in the\n    // vast majority of cases\n    const { calldata, value } = NonfungiblePositionManager.collectCallParameters({\n      tokenId: tokenId.toString(),\n      expectedCurrencyOwed0: feeValue0 ?? CurrencyAmount.fromRawAmount(currency0ForFeeCollectionPurposes, 0),\n      expectedCurrencyOwed1: feeValue1 ?? CurrencyAmount.fromRawAmount(currency1ForFeeCollectionPurposes, 0),\n      recipient: account,\n    })\n\n    const txn = {\n      to: positionManager.address,\n      data: calldata,\n      value,\n    }\n\n    const connectedChainId = await provider.getSigner().getChainId()\n    if (chainId !== connectedChainId) throw new WrongChainError()\n\n    provider\n      .getSigner()\n      .estimateGas(txn)\n      .then((estimate) => {\n        const newTxn = {\n          ...txn,\n          gasLimit: calculateGasMargin(estimate),\n        }\n\n        return provider\n          .getSigner()\n          .sendTransaction(newTxn)\n          .then((response: TransactionResponse) => {\n            setCollectMigrationHash(response.hash)\n            setCollecting(false)\n            addTransaction(response, {\n              type: TransactionType.COLLECT_FEES,\n              currencyId0: currencyId(currency0ForFeeCollectionPurposes),\n              currencyId1: currencyId(currency1ForFeeCollectionPurposes),\n              expectedCurrencyOwed0:\n                feeValue0?.quotient.toString() ??\n                CurrencyAmount.fromRawAmount(currency0ForFeeCollectionPurposes, 0).toExact(),\n              expectedCurrencyOwed1:\n                feeValue1?.quotient.toString() ??\n                CurrencyAmount.fromRawAmount(currency1ForFeeCollectionPurposes, 0).toExact(),\n            })\n          })\n      })\n      .catch((error) => {\n        setCollecting(false)\n        console.error(error)\n      })\n  }, [\n    chainId,\n    feeValue0,\n    feeValue1,\n    currency0ForFeeCollectionPurposes,\n    currency1ForFeeCollectionPurposes,\n    positionManager,\n    account,\n    tokenId,\n    addTransaction,\n    provider,\n  ])\n\n  const owner = useSingleCallResult(tokenId ? positionManager : null, 'ownerOf', [tokenId]).result?.[0]\n  const ownsNFT = owner === account || positionDetails?.operator === account\n\n  const feeValueUpper = inverted ? feeValue0 : feeValue1\n  const feeValueLower = inverted ? feeValue1 : feeValue0\n\n  // check if price is within range\n  const below = pool && typeof tickLower === 'number' ? pool.tickCurrent < tickLower : undefined\n  const above = pool && typeof tickUpper === 'number' ? pool.tickCurrent >= tickUpper : undefined\n  const inRange: boolean = typeof below === 'boolean' && typeof above === 'boolean' ? !below && !above : false\n\n  function modalHeader() {\n    return (\n      <AutoColumn gap=\"md\" style={{ marginTop: '20px' }}>\n        <LightCard padding=\"12px 16px\">\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <RowFixed>\n                <CurrencyLogo currency={feeValueUpper?.currency} size=\"20px\" style={{ marginRight: '0.5rem' }} />\n                <ThemedText.DeprecatedMain>\n                  {feeValueUpper ? formatCurrencyAmount(feeValueUpper, 4) : '-'}\n                </ThemedText.DeprecatedMain>\n              </RowFixed>\n              <ThemedText.DeprecatedMain>{feeValueUpper?.currency?.symbol}</ThemedText.DeprecatedMain>\n            </RowBetween>\n            <RowBetween>\n              <RowFixed>\n                <CurrencyLogo currency={feeValueLower?.currency} size=\"20px\" style={{ marginRight: '0.5rem' }} />\n                <ThemedText.DeprecatedMain>\n                  {feeValueLower ? formatCurrencyAmount(feeValueLower, 4) : '-'}\n                </ThemedText.DeprecatedMain>\n              </RowFixed>\n              <ThemedText.DeprecatedMain>{feeValueLower?.currency?.symbol}</ThemedText.DeprecatedMain>\n            </RowBetween>\n          </AutoColumn>\n        </LightCard>\n        <ThemedText.DeprecatedItalic>\n          <Trans>Collecting fees will withdraw currently available fees for you.</Trans>\n        </ThemedText.DeprecatedItalic>\n        <ButtonPrimary data-testid=\"modal-collect-fees-button\" onClick={collect}>\n          <Trans>Collect</Trans>\n        </ButtonPrimary>\n      </AutoColumn>\n    )\n  }\n\n  const showCollectAsWeth = Boolean(\n    ownsNFT &&\n      (feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0)) &&\n      currency0 &&\n      currency1 &&\n      (currency0.isNative || currency1.isNative) &&\n      !collectMigrationHash\n  )\n\n  if (!positionDetails && !loading) {\n    return <PositionPageUnsupportedContent />\n  }\n\n  return loading || poolState === PoolState.LOADING || !feeAmount ? (\n    <LoadingRows>\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n      <div />\n    </LoadingRows>\n  ) : (\n    <>\n      <PageWrapper>\n        <TransactionConfirmationModal\n          isOpen={showConfirm}\n          onDismiss={() => setShowConfirm(false)}\n          attemptingTxn={collecting}\n          hash={collectMigrationHash ?? ''}\n          reviewContent={() => (\n            <ConfirmationModalContent\n              title={<Trans>Claim fees</Trans>}\n              onDismiss={() => setShowConfirm(false)}\n              topContent={modalHeader}\n            />\n          )}\n          pendingText={<Trans>Collecting fees</Trans>}\n        />\n        <AutoColumn gap=\"md\">\n          <AutoColumn gap=\"sm\">\n            <Link\n              data-cy=\"visit-pool\"\n              style={{ textDecoration: 'none', width: 'fit-content', marginBottom: '0.5rem' }}\n              to=\"/pools\"\n            >\n              <HoverText>\n                <Trans>← Back to Pools</Trans>\n              </HoverText>\n            </Link>\n            <ResponsiveRow>\n              <PositionLabelRow>\n                <DoubleCurrencyLogo currency0={currencyBase} currency1={currencyQuote} size={24} margin={true} />\n                <ThemedText.DeprecatedLabel fontSize=\"24px\" mr=\"10px\">\n                  &nbsp;{currencyQuote?.symbol}&nbsp;/&nbsp;{currencyBase?.symbol}\n                </ThemedText.DeprecatedLabel>\n                <Badge style={{ marginRight: '8px' }}>\n                  <BadgeText>\n                    <Trans>{new Percent(feeAmount, 1_000_000).toSignificant()}%</Trans>\n                  </BadgeText>\n                </Badge>\n                <RangeBadge removed={removed} inRange={inRange} />\n              </PositionLabelRow>\n              {ownsNFT && (\n                <ActionButtonResponsiveRow>\n                  {currency0 && currency1 && feeAmount && tokenId ? (\n                    <ButtonGray\n                      as={Link}\n                      to={`/increase/${currencyId(currency0)}/${currencyId(currency1)}/${feeAmount}/${tokenId}`}\n                      padding=\"6px 8px\"\n                      width=\"fit-content\"\n                      $borderRadius=\"12px\"\n                      style={{ marginRight: '8px' }}\n                    >\n                      <Trans>Increase liquidity</Trans>\n                    </ButtonGray>\n                  ) : null}\n                  {tokenId && !removed ? (\n                    <SmallButtonPrimary\n                      as={Link}\n                      to={`/remove/${tokenId}`}\n                      padding=\"6px 8px\"\n                      width=\"fit-content\"\n                      $borderRadius=\"12px\"\n                    >\n                      <Trans>Remove liquidity</Trans>\n                    </SmallButtonPrimary>\n                  ) : null}\n                </ActionButtonResponsiveRow>\n              )}\n            </ResponsiveRow>\n          </AutoColumn>\n          <ResponsiveRow align=\"flex-start\">\n            <HideSmall\n              style={{\n                height: '100%',\n                marginRight: 12,\n              }}\n            >\n              {'result' in metadata ? (\n                <DarkCard\n                  width=\"100%\"\n                  height=\"100%\"\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    flexDirection: 'column',\n                    justifyContent: 'space-around',\n                    minWidth: '340px',\n                  }}\n                >\n                  <NFT image={metadata.result.image} height={400} />\n                  {typeof chainId === 'number' && owner && !ownsNFT ? (\n                    <ExternalLink href={getExplorerLink(chainId, owner, ExplorerDataType.ADDRESS)}>\n                      <Trans>Owner</Trans>\n                    </ExternalLink>\n                  ) : null}\n                </DarkCard>\n              ) : (\n                <DarkCard\n                  width=\"100%\"\n                  height=\"100%\"\n                  style={{\n                    minWidth: '340px',\n                    position: 'relative',\n                    overflow: 'hidden',\n                  }}\n                >\n                  <LoadingFullscreen />\n                </DarkCard>\n              )}\n            </HideSmall>\n            <AutoColumn gap=\"sm\" style={{ width: '100%', height: '100%' }}>\n              <DarkCard>\n                <AutoColumn gap=\"md\" style={{ width: '100%' }}>\n                  <AutoColumn gap=\"md\">\n                    <Label>\n                      <Trans>Liquidity</Trans>\n                    </Label>\n                    {fiatValueOfLiquidity?.greaterThan(new Fraction(1, 100)) ? (\n                      <ThemedText.DeprecatedLargeHeader fontSize=\"36px\" fontWeight={535}>\n                        <Trans>${fiatValueOfLiquidity.toFixed(2, { groupSeparator: ',' })}</Trans>\n                      </ThemedText.DeprecatedLargeHeader>\n                    ) : (\n                      <ThemedText.DeprecatedLargeHeader color={theme.neutral1} fontSize=\"36px\" fontWeight={535}>\n                        <Trans>$-</Trans>\n                      </ThemedText.DeprecatedLargeHeader>\n                    )}\n                  </AutoColumn>\n                  <LightCard padding=\"12px 16px\">\n                    <AutoColumn gap=\"md\">\n                      <RowBetween>\n                        <LinkedCurrency chainId={chainId} currency={currencyQuote} />\n                        <RowFixed>\n                          <ThemedText.DeprecatedMain>\n                            {inverted ? position?.amount0.toSignificant(4) : position?.amount1.toSignificant(4)}\n                          </ThemedText.DeprecatedMain>\n                          {typeof ratio === 'number' && !removed ? (\n                            <Badge style={{ marginLeft: '10px' }}>\n                              <BadgeText>\n                                <Trans>{inverted ? ratio : 100 - ratio}%</Trans>\n                              </BadgeText>\n                            </Badge>\n                          ) : null}\n                        </RowFixed>\n                      </RowBetween>\n                      <RowBetween>\n                        <LinkedCurrency chainId={chainId} currency={currencyBase} />\n                        <RowFixed>\n                          <ThemedText.DeprecatedMain>\n                            {inverted ? position?.amount1.toSignificant(4) : position?.amount0.toSignificant(4)}\n                          </ThemedText.DeprecatedMain>\n                          {typeof ratio === 'number' && !removed ? (\n                            <Badge style={{ marginLeft: '10px' }}>\n                              <BadgeText>\n                                <Trans>{inverted ? 100 - ratio : ratio}%</Trans>\n                              </BadgeText>\n                            </Badge>\n                          ) : null}\n                        </RowFixed>\n                      </RowBetween>\n                    </AutoColumn>\n                  </LightCard>\n                </AutoColumn>\n              </DarkCard>\n              <DarkCard>\n                <AutoColumn gap=\"md\" style={{ width: '100%' }}>\n                  <AutoColumn gap=\"md\">\n                    <RowBetween style={{ alignItems: 'flex-start' }}>\n                      <AutoColumn gap=\"md\">\n                        <Label>\n                          <Trans>Unclaimed fees</Trans>\n                        </Label>\n                        {fiatValueOfFees?.greaterThan(new Fraction(1, 100)) ? (\n                          <ThemedText.DeprecatedLargeHeader color={theme.success} fontSize=\"36px\" fontWeight={535}>\n                            <Trans>${fiatValueOfFees.toFixed(2, { groupSeparator: ',' })}</Trans>\n                          </ThemedText.DeprecatedLargeHeader>\n                        ) : (\n                          <ThemedText.DeprecatedLargeHeader color={theme.neutral1} fontSize=\"36px\" fontWeight={535}>\n                            <Trans>$-</Trans>\n                          </ThemedText.DeprecatedLargeHeader>\n                        )}\n                      </AutoColumn>\n                      {ownsNFT && (feeValue0?.greaterThan(0) || feeValue1?.greaterThan(0) || !!collectMigrationHash) ? (\n                        <ResponsiveButtonConfirmed\n                          data-testid=\"collect-fees-button\"\n                          disabled={collecting || !!collectMigrationHash}\n                          confirmed={!!collectMigrationHash && !isCollectPending}\n                          width=\"fit-content\"\n                          style={{ borderRadius: '12px' }}\n                          padding=\"4px 8px\"\n                          onClick={() => setShowConfirm(true)}\n                        >\n                          {!!collectMigrationHash && !isCollectPending ? (\n                            <ThemedText.DeprecatedMain color={theme.neutral1}>\n                              <Trans> Collected</Trans>\n                            </ThemedText.DeprecatedMain>\n                          ) : isCollectPending || collecting ? (\n                            <ThemedText.DeprecatedMain color={theme.neutral1}>\n                              {' '}\n                              <Dots>\n                                <Trans>Collecting</Trans>\n                              </Dots>\n                            </ThemedText.DeprecatedMain>\n                          ) : (\n                            <>\n                              <ThemedText.DeprecatedMain color={theme.white}>\n                                <Trans>Collect fees</Trans>\n                              </ThemedText.DeprecatedMain>\n                            </>\n                          )}\n                        </ResponsiveButtonConfirmed>\n                      ) : null}\n                    </RowBetween>\n                  </AutoColumn>\n                  <LightCard padding=\"12px 16px\">\n                    <AutoColumn gap=\"md\">\n                      <RowBetween>\n                        <RowFixed>\n                          <CurrencyLogo\n                            currency={feeValueUpper?.currency}\n                            size=\"20px\"\n                            style={{ marginRight: '0.5rem' }}\n                          />\n                          <ThemedText.DeprecatedMain>{feeValueUpper?.currency?.symbol}</ThemedText.DeprecatedMain>\n                        </RowFixed>\n                        <RowFixed>\n                          <ThemedText.DeprecatedMain>\n                            {feeValueUpper ? formatCurrencyAmount(feeValueUpper, 4) : '-'}\n                          </ThemedText.DeprecatedMain>\n                        </RowFixed>\n                      </RowBetween>\n                      <RowBetween>\n                        <RowFixed>\n                          <CurrencyLogo\n                            currency={feeValueLower?.currency}\n                            size=\"20px\"\n                            style={{ marginRight: '0.5rem' }}\n                          />\n                          <ThemedText.DeprecatedMain>{feeValueLower?.currency?.symbol}</ThemedText.DeprecatedMain>\n                        </RowFixed>\n                        <RowFixed>\n                          <ThemedText.DeprecatedMain>\n                            {feeValueLower ? formatCurrencyAmount(feeValueLower, 4) : '-'}\n                          </ThemedText.DeprecatedMain>\n                        </RowFixed>\n                      </RowBetween>\n                    </AutoColumn>\n                  </LightCard>\n                  {showCollectAsWeth && (\n                    <AutoColumn gap=\"md\">\n                      <RowBetween>\n                        <ThemedText.DeprecatedMain>\n                          <Trans>Collect as {nativeWrappedSymbol}</Trans>\n                        </ThemedText.DeprecatedMain>\n                        <Toggle\n                          id=\"receive-as-weth\"\n                          isActive={receiveWETH}\n                          toggle={() => setReceiveWETH((receiveWETH) => !receiveWETH)}\n                        />\n                      </RowBetween>\n                    </AutoColumn>\n                  )}\n                </AutoColumn>\n              </DarkCard>\n            </AutoColumn>\n          </ResponsiveRow>\n          <DarkCard>\n            <AutoColumn gap=\"md\">\n              <RowBetween>\n                <RowFixed>\n                  <Label display=\"flex\" style={{ marginRight: '12px' }}>\n                    <Trans>Price range</Trans>\n                  </Label>\n                  <HideExtraSmall>\n                    <>\n                      <RangeBadge removed={removed} inRange={inRange} />\n                      <span style={{ width: '8px' }} />\n                    </>\n                  </HideExtraSmall>\n                </RowFixed>\n                <RowFixed>\n                  {currencyBase && currencyQuote && (\n                    <RateToggle\n                      currencyA={currencyBase}\n                      currencyB={currencyQuote}\n                      handleRateToggle={() => setManuallyInverted(!manuallyInverted)}\n                    />\n                  )}\n                </RowFixed>\n              </RowBetween>\n\n              <RowBetween>\n                <LightCard padding=\"12px\" width=\"100%\">\n                  <AutoColumn gap=\"sm\" justify=\"center\">\n                    <ExtentsText>\n                      <Trans>Min price</Trans>\n                    </ExtentsText>\n                    <ThemedText.DeprecatedMediumHeader textAlign=\"center\">\n                      {formatTickPrice({\n                        price: priceLower,\n                        atLimit: tickAtLimit,\n                        direction: Bound.LOWER,\n                        numberType: NumberType.TokenTx,\n                      })}\n                    </ThemedText.DeprecatedMediumHeader>\n                    <ExtentsText>\n                      {' '}\n                      <Trans>\n                        {currencyQuote?.symbol} per {currencyBase?.symbol}\n                      </Trans>\n                    </ExtentsText>\n\n                    {inRange && (\n                      <ThemedText.DeprecatedSmall color={theme.neutral3}>\n                        <Trans>Your position will be 100% {currencyBase?.symbol} at this price.</Trans>\n                      </ThemedText.DeprecatedSmall>\n                    )}\n                  </AutoColumn>\n                </LightCard>\n\n                <DoubleArrow>⟷</DoubleArrow>\n                <LightCard padding=\"12px\" width=\"100%\">\n                  <AutoColumn gap=\"sm\" justify=\"center\">\n                    <ExtentsText>\n                      <Trans>Max price</Trans>\n                    </ExtentsText>\n                    <ThemedText.DeprecatedMediumHeader textAlign=\"center\">\n                      {formatTickPrice({\n                        price: priceUpper,\n                        atLimit: tickAtLimit,\n                        direction: Bound.UPPER,\n                        numberType: NumberType.TokenTx,\n                      })}\n                    </ThemedText.DeprecatedMediumHeader>\n                    <ExtentsText>\n                      {' '}\n                      <Trans>\n                        {currencyQuote?.symbol} per {currencyBase?.symbol}\n                      </Trans>\n                    </ExtentsText>\n\n                    {inRange && (\n                      <ThemedText.DeprecatedSmall color={theme.neutral3}>\n                        <Trans>Your position will be 100% {currencyQuote?.symbol} at this price.</Trans>\n                      </ThemedText.DeprecatedSmall>\n                    )}\n                  </AutoColumn>\n                </LightCard>\n              </RowBetween>\n              <CurrentPriceCard\n                inverted={inverted}\n                pool={pool}\n                currencyQuote={currencyQuote}\n                currencyBase={currencyBase}\n              />\n            </AutoColumn>\n          </DarkCard>\n        </AutoColumn>\n      </PageWrapper>\n      <SwitchLocaleLink />\n    </>\n  )\n}\n","import styled from 'styled-components'\n\nexport const ToggleWrapper = styled.button<{ width?: string }>`\n  display: flex;\n  align-items: center;\n  width: ${({ width }) => width ?? '100%'};\n  padding: 1px;\n  background: ${({ theme }) => theme.surface2};\n  border-radius: 8px;\n  border: ${({ theme }) => '1px solid ' + theme.surface3};\n  cursor: pointer;\n  outline: none;\n`\n\nexport const ToggleElement = styled.span<{ isActive?: boolean; fontSize?: string }>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 4px 0.5rem;\n  border-radius: 6px;\n  justify-content: center;\n  height: 100%;\n  background: ${({ theme, isActive }) => (isActive ? theme.surface1 : 'none')};\n  color: ${({ theme, isActive }) => (isActive ? theme.neutral1 : theme.neutral3)};\n  font-size: ${({ fontSize }) => fontSize ?? '1rem'};\n  font-weight: 535;\n  white-space: nowrap;\n  :hover {\n    user-select: initial;\n    color: ${({ theme, isActive }) => (isActive ? theme.neutral2 : theme.neutral3)};\n  }\n`\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@synthra-swap/sdk-core'\nimport { ToggleElement, ToggleWrapper } from 'components/Toggle/MultiToggle'\n\n// the order of displayed base currencies from left to right is always in sort order\n// currencyA is treated as the preferred base currency\nexport default function RateToggle({\n  currencyA,\n  currencyB,\n  handleRateToggle,\n}: {\n  currencyA: Currency\n  currencyB: Currency\n  handleRateToggle: () => void\n}) {\n  const tokenA = currencyA?.wrapped\n  const tokenB = currencyB?.wrapped\n\n  const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB)\n\n  return tokenA && tokenB ? (\n    <div style={{ width: 'fit-content', display: 'flex', alignItems: 'center' }} onClick={handleRateToggle}>\n      <ToggleWrapper width=\"fit-content\">\n        <ToggleElement isActive={isSorted} fontSize=\"12px\">\n          <Trans>{isSorted ? currencyA.symbol : currencyB.symbol}</Trans>\n        </ToggleElement>\n        <ToggleElement isActive={!isSorted} fontSize=\"12px\">\n          <Trans>{isSorted ? currencyB.symbol : currencyA.symbol}</Trans>\n        </ToggleElement>\n      </ToggleWrapper>\n    </div>\n  ) : null\n}\n","import { Currency, CurrencyAmount, Price } from '@synthra-swap/sdk-core'\nimport { DEFAULT_LOCALE, SUPPORTED_LOCALES } from 'constants/locales'\n\ninterface FormatLocaleNumberArgs {\n  number: CurrencyAmount<Currency> | Price<Currency, Currency> | number\n  locale?: string | null\n  options?: Intl.NumberFormatOptions\n  sigFigs?: number\n  fixedDecimals?: number\n}\n\nexport default function formatLocaleNumber({\n  number,\n  locale,\n  sigFigs,\n  fixedDecimals,\n  options = {},\n}: FormatLocaleNumberArgs): string {\n  let localeArg: string | string[]\n  if (!locale || (locale && !SUPPORTED_LOCALES.includes(locale))) {\n    localeArg = DEFAULT_LOCALE\n  } else {\n    localeArg = [locale, DEFAULT_LOCALE]\n  }\n  options.minimumFractionDigits = options.minimumFractionDigits || fixedDecimals\n  options.maximumFractionDigits = options.maximumFractionDigits || fixedDecimals\n\n  // Fixed decimals should override significant figures.\n  options.maximumSignificantDigits = options.maximumSignificantDigits || fixedDecimals ? undefined : sigFigs\n\n  let numberString: number\n  if (typeof number === 'number') {\n    numberString = fixedDecimals ? parseFloat(number.toFixed(fixedDecimals)) : number\n  } else {\n    const baseString = parseFloat(number.toSignificant(sigFigs))\n    numberString = fixedDecimals ? parseFloat(baseString.toFixed(fixedDecimals)) : baseString\n  }\n\n  return numberString.toLocaleString(localeArg, options)\n}\n","import { Currency, CurrencyAmount, Fraction } from '@synthra-swap/sdk-core'\nimport { DEFAULT_LOCALE, SupportedLocale } from 'constants/locales'\nimport JSBI from 'jsbi'\nimport formatLocaleNumber from 'lib/utils/formatLocaleNumber'\n\nexport function formatCurrencyAmount(\n  amount: CurrencyAmount<Currency> | undefined,\n  sigFigs: number,\n  locale: SupportedLocale = DEFAULT_LOCALE,\n  fixedDecimals?: number\n): string {\n  if (!amount) {\n    return '-'\n  }\n\n  if (JSBI.equal(amount.quotient, JSBI.BigInt(0))) {\n    return '0'\n  }\n\n  if (amount.divide(amount.decimalScale).lessThan(new Fraction(1, 100000))) {\n    return `<${formatLocaleNumber({ number: 0.00001, locale })}`\n  }\n\n  return formatLocaleNumber({ number: amount, locale, sigFigs, fixedDecimals })\n}\n"],"names":["MAX_UINT128","BigNumber","from","pow","sub","useV3PositionFees","pool","tokenId","_useSingleCallResult$","asWETH","arguments","length","undefined","positionManager","useV3NFTPositionManagerContract","owner","useSingleCallResult","result","tokenIdHexString","toHexString","latestBlockNumber","useBlockNumber","amounts","setAmounts","useState","useEffect","results","callStatic","collect","recipient","amount0Max","amount1Max","amount0","amount1","CurrencyAmount","fromRawAmount","token0","unwrappedToken","toString","token1","GQL_CHAINS","ChainId","MAINNET","OPTIMISM","POLYGON","ARBITRUM_ONE","CELO","STARTS_WITH","PositionPageButtonPrimary","styled","ButtonPrimary","PageWrapper","div","_ref","theme","breakpoint","md","_ref2","sm","BadgeText","_ref3","neutral2","Label","_ref4","end","props","_jsx","ThemedText","DeprecatedLabel","_ref5","ExtentsText","span","_ref6","HoverText","DeprecatedMain","_ref7","_ref8","neutral1","DoubleArrow","_ref9","neutral3","ResponsiveRow","RowBetween","_ref10","ActionButtonResponsiveRow","_ref11","ResponsiveButtonConfirmed","ButtonConfirmed","_ref12","_ref13","NFTGrid","NFTCanvas","canvas","NFTImage","img","CurrentPriceCard","_ref14","inverted","currencyQuote","currencyBase","formatPrice","useFormatter","LightCard","padding","children","_jsxs","AutoColumn","gap","justify","Trans","id","DeprecatedMediumHeader","textAlign","price","token1Price","token0Price","type","NumberType","TokenTx","values","0","symbol","1","TokenLink","_ref15","chainId","address","chainName","CHAIN_IDS_TO_NAMES","StyledRouterLink","to","ExternalTokenLink","_ref16","ExternalLink","href","getExplorerLink","ExplorerDataType","TOKEN","LinkedCurrency","_ref17","currency","Link","includes","isGqlSupportedChain","RowFixed","CurrencyLogo","size","style","marginRight","getSnapshot","src","targetHeight","context","getContext","width","height","ratio","Math","round","devicePixelRatio","scale","clearRect","drawImage","NFT","_ref18","image","animate","setAnimate","canvasRef","useRef","imageRef","onMouseEnter","onMouseLeave","current","ref","hidden","onLoad","useInverter","_ref19","priceLower","priceUpper","quote","base","invert","PositionPageUnsupportedContent","display","alignItems","flexDirection","HeadlineLarge","marginBottom","BodyPrimary","as","PositionPage","useWeb3React","isSupportedChain","PositionPageContent","PositionLabelRow","flexWrap","_feeValueUpper$curren2","_feeValueLower$curren2","tokenIdFromUrl","useParams","account","provider","useTheme","formatTickPrice","parsedTokenId","error","parseTokenId","loading","position","positionDetails","useV3PositionFromTokenId","token0Address","token1Address","fee","feeAmount","liquidity","tickLower","tickUpper","removed","eq","metadata","contract","inputs","useMemo","valid","NEVER_RELOAD","gasRequired","tokenURI","startsWith","JSON","parse","atob","slice","usePositionTokenURI","useToken","currency0","currency1","receiveWETH","setReceiveWETH","nativeWrappedSymbol","useNativeCurrency","wrapped","poolState","usePool","Position","tickAtLimit","useIsTickAtLimit","pricesFromPosition","getPriceOrderingFromPositionForUI","manuallyInverted","setManuallyInverted","equals","lower","upper","greaterThan","lessThan","a","Number","parseFloat","toSignificant","b","c","floor","sqrt","Error","getRatio","feeValue0","feeValue1","currency0ForFeeCollectionPurposes","currency1ForFeeCollectionPurposes","collecting","setCollecting","collectMigrationHash","setCollectMigrationHash","isCollectPending","useIsTransactionPending","showConfirm","setShowConfirm","price0","useStablecoinPrice","price1","fiatValueOfFees","feeValue0Wrapped","feeValue1Wrapped","add","fiatValueOfLiquidity","addTransaction","useTransactionAdder","useCallback","async","calldata","value","NonfungiblePositionManager","collectCallParameters","expectedCurrencyOwed0","expectedCurrencyOwed1","txn","data","connectedChainId","getSigner","getChainId","WrongChainError","estimateGas","then","estimate","newTxn","gasLimit","calculateGasMargin","sendTransaction","response","_feeValue0$quotient$t","_feeValue1$quotient$t","hash","TransactionType","COLLECT_FEES","currencyId0","currencyId","currencyId1","quotient","toExact","catch","console","ownsNFT","operator","feeValueUpper","feeValueLower","below","tickCurrent","above","inRange","modalHeader","_feeValueUpper$curren","_feeValueLower$curren","marginTop","formatCurrencyAmount","DeprecatedItalic","onClick","showCollectAsWeth","Boolean","isNative","PoolState","LOADING","LoadingRows","_Fragment","TransactionConfirmationModal","isOpen","onDismiss","attemptingTxn","reviewContent","ConfirmationModalContent","title","topContent","pendingText","textDecoration","DoubleCurrencyLogo","margin","fontSize","mr","Badge","Percent","RangeBadge","ButtonGray","$borderRadius","SmallButtonPrimary","align","HideSmall","DarkCard","justifyContent","minWidth","ADDRESS","overflow","LoadingFullscreen","Fraction","DeprecatedLargeHeader","fontWeight","toFixed","groupSeparator","color","marginLeft","success","disabled","confirmed","borderRadius","Dots","white","Toggle","isActive","toggle","HideExtraSmall","RateToggle","currencyA","currencyB","handleRateToggle","atLimit","direction","Bound","LOWER","numberType","DeprecatedSmall","UPPER","SwitchLocaleLink","ToggleWrapper","button","surface2","surface3","ToggleElement","surface1","tokenA","tokenB","isSorted","sortsBefore","formatLocaleNumber","localeArg","numberString","number","locale","sigFigs","fixedDecimals","options","SUPPORTED_LOCALES","DEFAULT_LOCALE","minimumFractionDigits","maximumFractionDigits","maximumSignificantDigits","baseString","toLocaleString","amount","JSBI","divide","decimalScale"],"sourceRoot":""}