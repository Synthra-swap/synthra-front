{"version":3,"file":"static/js/1538.36c19913.chunk.js","mappings":"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","sources":["hooks/useNetworkSupportsV2.ts","components/V2Unsupported/index.tsx","hooks/useERC20Permit.ts","hooks/useV2LiquidityTokenPermit.ts","hooks/useTotalSupply.ts","utils/unwrappedToken.ts","components/FeeSelector/shared.tsx","components/FeeSelector/FeeOption.tsx","components/FeeSelector/index.tsx","pages/MigrateV2/MigrateV2Pair.tsx","components/Toggle/MultiToggle.tsx","components/RateToggle/index.tsx","lib/utils/formatLocaleNumber.ts","utils/formatCurrencyAmount.ts","components/FormattedCurrencyAmount/index.tsx","hooks/usePools.ts"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport { SUPPORTED_V2POOL_CHAIN_IDS } from 'constants/chains'\n\nexport function useNetworkSupportsV2() {\n  const { chainId } = useWeb3React()\n  return chainId && SUPPORTED_V2POOL_CHAIN_IDS.includes(chainId)\n}\n","import { Trans } from '@lingui/macro'\nimport { AutoColumn } from 'components/Column'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nconst TextWrapper = styled.div`\n  border: 1px solid ${({ theme }) => theme.neutral3};\n  padding: 16px 12px;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nexport function V2Unsupported() {\n  return (\n    <AutoColumn gap=\"lg\" justify=\"center\">\n      <AutoColumn gap=\"md\" style={{ width: '100%' }}>\n        <TextWrapper>\n          <ThemedText.BodySecondary color=\"neutral2\" textAlign=\"center\">\n            <Trans>The Synthra V2 is not available on this network.</Trans>\n          </ThemedText.BodySecondary>\n        </TextWrapper>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { splitSignature } from '@ethersproject/bytes'\nimport { ChainId, Currency, CurrencyAmount } from '@synthra-swap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo, useState } from 'react'\n\nimport { DAI, UNI, USDC_MAINNET } from '../constants/tokens'\nimport { useEIP2612Contract } from './useContract'\nimport useIsArgentWallet from './useIsArgentWallet'\n\nexport enum PermitType {\n  AMOUNT = 1,\n  ALLOWED = 2,\n}\n\n// 20 minutes to submit after signing\nconst PERMIT_VALIDITY_BUFFER = 20 * 60\n\nexport interface PermitInfo {\n  type: PermitType\n  name: string\n  // version is optional, and if omitted, will not be included in the domain\n  version?: string\n}\n\n// todo: read this information from extensions on token lists or elsewhere (permit registry?)\nconst PERMITTABLE_TOKENS: {\n  [chainId: number]: {\n    [checksummedTokenAddress: string]: PermitInfo\n  }\n} = {\n  [ChainId.MAINNET]: {\n    [USDC_MAINNET.address]: { type: PermitType.AMOUNT, name: 'USD Coin', version: '2' },\n    [DAI.address]: { type: PermitType.ALLOWED, name: 'Dai Stablecoin', version: '1' },\n    [UNI[ChainId.MAINNET].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\n  },\n  [ChainId.GOERLI]: {\n    [UNI[ChainId.GOERLI].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\n  },\n  [ChainId.SEPOLIA]: {\n    [UNI[ChainId.SEPOLIA].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\n  },\n}\n\nenum UseERC20PermitState {\n  // returned for any reason, e.g. it is an argent wallet, or the currency does not support it\n  NOT_APPLICABLE,\n  LOADING,\n  NOT_SIGNED,\n  SIGNED,\n}\n\ntype StandardSignatureData = {\n  v: number\n  r: string\n  s: string\n  deadline: number\n  nonce: number\n  owner: string\n  spender: string\n  chainId: number\n  tokenAddress: string\n  permitType: PermitType\n  amount: string\n}\n\ntype AllowedSignatureData = {\n  v: number\n  r: string\n  s: string\n  deadline: number\n  nonce: number\n  owner: string\n  spender: string\n  chainId: number\n  tokenAddress: string\n  permitType: PermitType\n  allowed: true\n}\n\ntype SignatureData = StandardSignatureData | AllowedSignatureData\n\nconst EIP712_DOMAIN_TYPE = [\n  { name: 'name', type: 'string' },\n  { name: 'version', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n]\n\nconst EIP712_DOMAIN_TYPE_NO_VERSION = [\n  { name: 'name', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n]\n\nconst EIP2612_TYPE = [\n  { name: 'owner', type: 'address' },\n  { name: 'spender', type: 'address' },\n  { name: 'value', type: 'uint256' },\n  { name: 'nonce', type: 'uint256' },\n  { name: 'deadline', type: 'uint256' },\n]\n\nconst PERMIT_ALLOWED_TYPE = [\n  { name: 'holder', type: 'address' },\n  { name: 'spender', type: 'address' },\n  { name: 'nonce', type: 'uint256' },\n  { name: 'expiry', type: 'uint256' },\n  { name: 'allowed', type: 'bool' },\n]\n\nexport function useERC20Permit(\n  currencyAmount: CurrencyAmount<Currency> | null | undefined,\n  spender: string | null | undefined,\n  transactionDeadline: BigNumber | undefined,\n  overridePermitInfo: PermitInfo | undefined | null\n): {\n  signatureData: SignatureData | null\n  state: UseERC20PermitState\n  gatherPermitSignature: null | (() => Promise<void>)\n} {\n  const { account, chainId, provider } = useWeb3React()\n  const tokenAddress = currencyAmount?.currency?.isToken ? currencyAmount.currency.address : undefined\n  const eip2612Contract = useEIP2612Contract(tokenAddress)\n  const isArgentWallet = useIsArgentWallet()\n  const nonceInputs = useMemo(() => [account ?? undefined], [account])\n  const tokenNonceState = useSingleCallResult(eip2612Contract, 'nonces', nonceInputs)\n  const permitInfo =\n    overridePermitInfo ?? (chainId && tokenAddress ? PERMITTABLE_TOKENS[chainId]?.[tokenAddress] : undefined)\n\n  const [signatureData, setSignatureData] = useState<SignatureData | null>(null)\n\n  return useMemo(() => {\n    if (\n      isArgentWallet ||\n      !currencyAmount ||\n      !eip2612Contract ||\n      !account ||\n      !chainId ||\n      !transactionDeadline ||\n      !provider ||\n      !tokenNonceState.valid ||\n      !tokenAddress ||\n      !spender ||\n      !permitInfo\n    ) {\n      return {\n        state: UseERC20PermitState.NOT_APPLICABLE,\n        signatureData: null,\n        gatherPermitSignature: null,\n      }\n    }\n\n    const nonceNumber = tokenNonceState.result?.[0]?.toNumber()\n    if (tokenNonceState.loading || typeof nonceNumber !== 'number') {\n      return {\n        state: UseERC20PermitState.LOADING,\n        signatureData: null,\n        gatherPermitSignature: null,\n      }\n    }\n\n    const isSignatureDataValid =\n      signatureData &&\n      signatureData.owner === account &&\n      signatureData.deadline >= transactionDeadline.toNumber() &&\n      signatureData.tokenAddress === tokenAddress &&\n      signatureData.nonce === nonceNumber &&\n      signatureData.spender === spender &&\n      ('allowed' in signatureData ||\n        JSBI.greaterThanOrEqual(JSBI.BigInt(signatureData.amount), currencyAmount.quotient))\n\n    return {\n      state: isSignatureDataValid ? UseERC20PermitState.SIGNED : UseERC20PermitState.NOT_SIGNED,\n      signatureData: isSignatureDataValid ? signatureData : null,\n      gatherPermitSignature: async function gatherPermitSignature() {\n        const allowed = permitInfo.type === PermitType.ALLOWED\n        const signatureDeadline = transactionDeadline.toNumber() + PERMIT_VALIDITY_BUFFER\n        const value = currencyAmount.quotient.toString()\n\n        const message = allowed\n          ? {\n              holder: account,\n              spender,\n              allowed,\n              nonce: nonceNumber,\n              expiry: signatureDeadline,\n            }\n          : {\n              owner: account,\n              spender,\n              value,\n              nonce: nonceNumber,\n              deadline: signatureDeadline,\n            }\n        const domain = permitInfo.version\n          ? {\n              name: permitInfo.name,\n              version: permitInfo.version,\n              verifyingContract: tokenAddress,\n              chainId,\n            }\n          : {\n              name: permitInfo.name,\n              verifyingContract: tokenAddress,\n              chainId,\n            }\n        const data = JSON.stringify({\n          types: {\n            EIP712Domain: permitInfo.version ? EIP712_DOMAIN_TYPE : EIP712_DOMAIN_TYPE_NO_VERSION,\n            Permit: allowed ? PERMIT_ALLOWED_TYPE : EIP2612_TYPE,\n          },\n          domain,\n          primaryType: 'Permit',\n          message,\n        })\n\n        return provider\n          .send('eth_signTypedData_v4', [account, data])\n          .then(splitSignature)\n          .then((signature) => {\n            setSignatureData({\n              v: signature.v,\n              r: signature.r,\n              s: signature.s,\n              deadline: signatureDeadline,\n              ...(allowed ? { allowed } : { amount: value }),\n              nonce: nonceNumber,\n              chainId,\n              owner: account,\n              spender,\n              tokenAddress,\n              permitType: permitInfo.type,\n            })\n          })\n      },\n    }\n  }, [\n    currencyAmount,\n    eip2612Contract,\n    account,\n    chainId,\n    isArgentWallet,\n    transactionDeadline,\n    provider,\n    tokenNonceState.loading,\n    tokenNonceState.valid,\n    tokenNonceState.result,\n    tokenAddress,\n    spender,\n    permitInfo,\n    signatureData,\n  ])\n}\n","import { CurrencyAmount, Token } from '@synthra-swap/sdk-core'\n\nimport { PermitInfo, PermitType, useERC20Permit } from './useERC20Permit'\nimport useTransactionDeadline from './useTransactionDeadline'\n\nconst REMOVE_V2_LIQUIDITY_PERMIT_INFO: PermitInfo = {\n  version: '1',\n  name: 'Uniswap V2',\n  type: PermitType.AMOUNT,\n}\n\nexport function useV2LiquidityTokenPermit(\n  liquidityAmount: CurrencyAmount<Token> | null | undefined,\n  spender: string | null | undefined\n) {\n  const transactionDeadline = useTransactionDeadline()\n  return useERC20Permit(liquidityAmount, spender, transactionDeadline, REMOVE_V2_LIQUIDITY_PERMIT_INFO)\n}\n","import { Currency, CurrencyAmount, Token } from '@synthra-swap/sdk-core'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token?: Currency): CurrencyAmount<Token> | undefined {\n  const contract = useTokenContract(token?.isToken ? token.address : undefined, false)\n\n  const totalSupplyStr: string | undefined = useSingleCallResult(contract, 'totalSupply')?.result?.[0]?.toString()\n\n  return useMemo(\n    () => (token?.isToken && totalSupplyStr ? CurrencyAmount.fromRawAmount(token, totalSupplyStr) : undefined),\n    [token, totalSupplyStr]\n  )\n}\n","import { Currency } from '@synthra-swap/sdk-core'\nimport { asSupportedChain } from 'constants/chains'\n\nimport { nativeOnChain, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens'\n\nexport function unwrappedToken(currency: Currency): Currency {\n  if (currency.isNative) return currency\n  const formattedChainId = asSupportedChain(currency.chainId)\n  if (formattedChainId && WRAPPED_NATIVE_CURRENCY[formattedChainId]?.equals(currency))\n    return nativeOnChain(currency.chainId)\n  return currency\n}\n","import { Trans } from '@lingui/macro'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { ChainId, SUPPORTED_CHAINS } from '@synthra-swap/sdk-core'\nimport type { ReactNode } from 'react'\n\nexport const FEE_AMOUNT_DETAIL: Record<\n  FeeAmount,\n  { label: string; description: ReactNode; supportedChains: readonly ChainId[] }\n> = {\n  [FeeAmount.LOWEST]: {\n    label: '0.01',\n    description: <Trans>Best for very stable pairs.</Trans>,\n    supportedChains: [\n      ChainId.ARBITRUM_ONE,\n      ChainId.BNB,\n      ChainId.CELO,\n      ChainId.CELO_ALFAJORES,\n      ChainId.MAINNET,\n      ChainId.OPTIMISM,\n      ChainId.POLYGON,\n      ChainId.POLYGON_MUMBAI,\n      ChainId.AVALANCHE,\n      ChainId.BASE,\n    ],\n  },\n  [FeeAmount.LOW]: {\n    label: '0.05',\n    description: <Trans>Best for stable pairs.</Trans>,\n    supportedChains: SUPPORTED_CHAINS,\n  },\n  [FeeAmount.MEDIUM]: {\n    label: '0.3',\n    description: <Trans>Best for most pairs.</Trans>,\n    supportedChains: SUPPORTED_CHAINS,\n  },\n  [FeeAmount.HIGH]: {\n    label: '1',\n    description: <Trans>Best for exotic pairs.</Trans>,\n    supportedChains: SUPPORTED_CHAINS,\n  },\n}\n","import { Trans } from '@lingui/macro'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { ButtonRadioChecked } from 'components/Button'\nimport { AutoColumn } from 'components/Column'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { FEE_AMOUNT_DETAIL } from './shared'\n\nconst ResponsiveText = styled(ThemedText.DeprecatedLabel)`\n  line-height: 16px;\n  font-size: 14px;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    font-size: 12px;\n    line-height: 12px;\n  `};\n`\n\ninterface FeeOptionProps {\n  feeAmount: FeeAmount\n  active: boolean\n  onClick: () => void\n}\n\nexport function FeeOption({ feeAmount, active, onClick }: FeeOptionProps) {\n  return (\n    <ButtonRadioChecked active={active} onClick={onClick}>\n      <AutoColumn gap=\"sm\" justify=\"flex-start\">\n        <AutoColumn justify=\"flex-start\" gap=\"6px\">\n          <ResponsiveText>\n            <Trans>{FEE_AMOUNT_DETAIL[feeAmount].label}%</Trans>\n          </ResponsiveText>\n          <ThemedText.DeprecatedMain fontWeight={485} fontSize=\"12px\" textAlign=\"left\">\n            {FEE_AMOUNT_DETAIL[feeAmount].description}\n          </ThemedText.DeprecatedMain>\n        </AutoColumn>\n      </AutoColumn>\n    </ButtonRadioChecked>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { ButtonGray } from 'components/Button'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport { RowBetween } from 'components/Row'\nimport usePrevious from 'hooks/usePrevious'\nimport { DynamicSection } from 'pages/AddLiquidity/styled'\nimport { useCallback, useEffect, useState } from 'react'\nimport { Box } from 'rebass'\nimport styled, { keyframes } from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { FeeOption } from './FeeOption'\nimport { FEE_AMOUNT_DETAIL } from './shared'\n\nconst pulse = (color: string) => keyframes`\n  0% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n\n  70% {\n    box-shadow: 0 0 0 2px ${color};\n  }\n\n  100% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n`\nconst FocusedOutlineCard = styled(Card)<{ pulsing: boolean }>`\n  border: 1px solid ${({ theme }) => theme.surface3};\n  animation: ${({ pulsing, theme }) => pulsing && pulse(theme.accent1)} 0.6s linear;\n  align-self: center;\n`\n\nconst Select = styled.div`\n  align-items: flex-start;\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 8px;\n`\n\nexport default function FeeSelector({\n  disabled = false,\n  feeAmount,\n  handleFeePoolSelect,\n}: {\n  disabled?: boolean\n  feeAmount?: FeeAmount\n  handleFeePoolSelect: (feeAmount: FeeAmount) => void\n}) {\n  const { chainId } = useWeb3React()\n\n  const [showOptions, setShowOptions] = useState(false)\n  const [pulsing, setPulsing] = useState(false)\n\n  const previousFeeAmount = usePrevious(feeAmount)\n\n  const handleFeePoolSelectWithEvent = useCallback(\n    (fee: FeeAmount) => {\n      handleFeePoolSelect(fee)\n    },\n    [handleFeePoolSelect]\n  )\n\n  useEffect(() => {\n    if (feeAmount) {\n      return\n    }\n\n    setShowOptions(true)\n  }, [feeAmount, handleFeePoolSelect])\n\n  useEffect(() => {\n    if (feeAmount && previousFeeAmount !== feeAmount) {\n      setPulsing(true)\n    }\n  }, [previousFeeAmount, feeAmount])\n\n  return (\n    <AutoColumn gap=\"16px\">\n      <DynamicSection gap=\"md\" disabled={disabled}>\n        <FocusedOutlineCard pulsing={pulsing} onAnimationEnd={() => setPulsing(false)}>\n          <RowBetween>\n            <AutoColumn id=\"add-liquidity-selected-fee\">\n              {!feeAmount ? (\n                <>\n                  <ThemedText.DeprecatedLabel>\n                    <Trans>Fee tier</Trans>\n                  </ThemedText.DeprecatedLabel>\n                  <ThemedText.DeprecatedMain fontWeight={485} fontSize=\"12px\" textAlign=\"left\">\n                    <Trans>The % you will earn in fees.</Trans>\n                  </ThemedText.DeprecatedMain>\n                </>\n              ) : (\n                <>\n                  <ThemedText.DeprecatedLabel className=\"selected-fee-label\">\n                    <Trans>{FEE_AMOUNT_DETAIL[feeAmount].label}% fee tier</Trans>\n                  </ThemedText.DeprecatedLabel>\n                  <Box style={{ width: 'fit-content', marginTop: '8px' }} className=\"selected-fee-percentage\"></Box>\n                </>\n              )}\n            </AutoColumn>\n\n            <ButtonGray onClick={() => setShowOptions(!showOptions)} width=\"auto\" padding=\"4px\" $borderRadius=\"6px\">\n              {showOptions ? <Trans>Hide</Trans> : <Trans>Edit</Trans>}\n            </ButtonGray>\n          </RowBetween>\n        </FocusedOutlineCard>\n\n        {chainId && showOptions && (\n          <Select>\n            {[FeeAmount.LOWEST, FeeAmount.LOW, FeeAmount.MEDIUM, FeeAmount.HIGH].map((_feeAmount, i) => {\n              const { supportedChains } = FEE_AMOUNT_DETAIL[_feeAmount]\n              if (supportedChains.includes(chainId)) {\n                return (\n                  <FeeOption\n                    feeAmount={_feeAmount}\n                    active={feeAmount === _feeAmount}\n                    onClick={() => handleFeePoolSelectWithEvent(_feeAmount)}\n                    key={i}\n                  />\n                )\n              }\n              return null\n            })}\n          </Select>\n        )}\n      </DynamicSection>\n    </AutoColumn>\n  )\n}\n","import { Contract } from '@ethersproject/contracts'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { FeeAmount, Pool, Position, priceToClosestTick, TickMath } from '@uniswap/v3-sdk'\nimport { CurrencyAmount, Fraction, Percent, Price, Token, V2_FACTORY_ADDRESSES } from '@synthra-swap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport Badge, { BadgeVariant } from 'components/Badge'\nimport { ButtonConfirmed } from 'components/Button'\nimport { BlueCard, DarkGrayCard, LightCard, YellowCard } from 'components/Card'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport FeeSelector from 'components/FeeSelector'\nimport RangeSelector from 'components/RangeSelector'\nimport RateToggle from 'components/RateToggle'\nimport SettingsTab from 'components/Settings'\nimport { Dots } from 'components/swap/styled'\nimport { V2Unsupported } from 'components/V2Unsupported'\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\nimport useCurrentBlockTimestamp from 'hooks/useCurrentBlockTimestamp'\nimport { useNetworkSupportsV2 } from 'hooks/useNetworkSupportsV2'\nimport { PoolState, usePool } from 'hooks/usePools'\nimport useTransactionDeadline from 'hooks/useTransactionDeadline'\nimport { useV2LiquidityTokenPermit } from 'hooks/useV2LiquidityTokenPermit'\nimport JSBI from 'jsbi'\nimport { NEVER_RELOAD, useSingleCallResult } from 'lib/hooks/multicall'\nimport { ReactNode, useCallback, useEffect, useMemo, useState } from 'react'\nimport { AlertCircle, AlertTriangle, ArrowDown } from 'react-feather'\nimport { Navigate, useParams } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport { useAppDispatch } from 'state/hooks'\nimport { Bound, resetMintState } from 'state/mint/v3/actions'\nimport { useRangeHopCallbacks, useV3DerivedMintInfo, useV3MintActionHandlers } from 'state/mint/v3/hooks'\nimport { useIsTransactionPending, useTransactionAdder } from 'state/transactions/hooks'\nimport { useUserSlippageToleranceWithDefault } from 'state/user/hooks'\nimport { useTheme } from 'styled-components'\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nimport { AutoColumn } from '../../components/Column'\nimport FormattedCurrencyAmount from '../../components/FormattedCurrencyAmount'\nimport CurrencyLogo from '../../components/Logo/CurrencyLogo'\nimport { AutoRow, RowBetween, RowFixed } from '../../components/Row'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useToken } from '../../hooks/Tokens'\nimport { usePairContract, useV2MigratorContract } from '../../hooks/useContract'\nimport useIsArgentWallet from '../../hooks/useIsArgentWallet'\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport { useTokenBalance } from '../../state/connection/hooks'\nimport { TransactionType } from '../../state/transactions/types'\nimport { BackArrowLink, ExternalLink, ThemedText } from '../../theme/components'\nimport { isAddress } from '../../utils'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { currencyId } from '../../utils/currencyId'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport { BodyWrapper } from '../AppBody'\n\nconst ZERO = JSBI.BigInt(0)\n\nconst DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE = new Percent(75, 10_000)\n\nfunction EmptyState({ message }: { message: ReactNode }) {\n  return (\n    <AutoColumn style={{ minHeight: 200, justifyContent: 'center', alignItems: 'center' }}>\n      <ThemedText.DeprecatedBody>{message}</ThemedText.DeprecatedBody>\n    </AutoColumn>\n  )\n}\n\nfunction LiquidityInfo({\n  token0Amount,\n  token1Amount,\n}: {\n  token0Amount: CurrencyAmount<Token>\n  token1Amount: CurrencyAmount<Token>\n}) {\n  const currency0 = unwrappedToken(token0Amount.currency)\n  const currency1 = unwrappedToken(token1Amount.currency)\n\n  return (\n    <AutoColumn gap=\"sm\">\n      <RowBetween>\n        <RowFixed>\n          <CurrencyLogo size=\"20px\" style={{ marginRight: '8px' }} currency={currency0} />\n          <Text fontSize={16} fontWeight={535}>\n            {currency0.symbol}\n          </Text>\n        </RowFixed>\n        <Text fontSize={16} fontWeight={535}>\n          <FormattedCurrencyAmount currencyAmount={token0Amount} />\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <CurrencyLogo size=\"20px\" style={{ marginRight: '8px' }} currency={currency1} />\n          <Text fontSize={16} fontWeight={535}>\n            {currency1.symbol}\n          </Text>\n        </RowFixed>\n\n        <Text fontSize={16} fontWeight={535}>\n          <FormattedCurrencyAmount currencyAmount={token1Amount} />\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\n// hard-code this for now\nconst percentageToMigrate = 100\n\nfunction V2PairMigration({\n  pair,\n  pairBalance,\n  totalSupply,\n  reserve0,\n  reserve1,\n  token0,\n  token1,\n}: {\n  pair: Contract\n  pairBalance: CurrencyAmount<Token>\n  totalSupply: CurrencyAmount<Token>\n  reserve0: CurrencyAmount<Token>\n  reserve1: CurrencyAmount<Token>\n  token0: Token\n  token1: Token\n}) {\n  const { chainId, account } = useWeb3React()\n  const theme = useTheme()\n  const v2FactoryAddress = chainId ? V2_FACTORY_ADDRESSES[chainId] : undefined\n\n  const pairFactory = useSingleCallResult(pair, 'factory')\n  const isNotUniswap = pairFactory.result?.[0] && pairFactory.result[0] !== v2FactoryAddress\n\n  const deadline = useTransactionDeadline() // custom from users settings\n  const blockTimestamp = useCurrentBlockTimestamp()\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE) // custom from users\n\n  const currency0 = unwrappedToken(token0)\n  const currency1 = unwrappedToken(token1)\n\n  // this is just getLiquidityValue with the fee off, but for the passed pair\n  const token0Value = useMemo(\n    () =>\n      CurrencyAmount.fromRawAmount(\n        token0,\n        JSBI.divide(JSBI.multiply(pairBalance.quotient, reserve0.quotient), totalSupply.quotient)\n      ),\n    [token0, pairBalance, reserve0, totalSupply]\n  )\n  const token1Value = useMemo(\n    () =>\n      CurrencyAmount.fromRawAmount(\n        token1,\n        JSBI.divide(JSBI.multiply(pairBalance.quotient, reserve1.quotient), totalSupply.quotient)\n      ),\n    [token1, pairBalance, reserve1, totalSupply]\n  )\n\n  // set up v3 pool\n  const [feeAmount, setFeeAmount] = useState(FeeAmount.MEDIUM)\n  const [poolState, pool] = usePool(token0, token1, feeAmount)\n  const noLiquidity = poolState === PoolState.NOT_EXISTS\n\n  // get spot prices + price difference\n  const v2SpotPrice = useMemo(\n    () => new Price(token0, token1, reserve0.quotient, reserve1.quotient),\n    [token0, token1, reserve0, reserve1]\n  )\n  const v3SpotPrice = poolState === PoolState.EXISTS ? pool?.token0Price : undefined\n\n  let priceDifferenceFraction: Fraction | undefined =\n    v2SpotPrice && v3SpotPrice ? v3SpotPrice.divide(v2SpotPrice).subtract(1).multiply(100) : undefined\n  if (priceDifferenceFraction?.lessThan(ZERO)) {\n    priceDifferenceFraction = priceDifferenceFraction.multiply(-1)\n  }\n\n  const largePriceDifference = priceDifferenceFraction && !priceDifferenceFraction?.lessThan(JSBI.BigInt(2))\n\n  // the following is a small hack to get access to price range data/input handlers\n  const [baseToken, setBaseToken] = useState(token0)\n  const { ticks, pricesAtTicks, invertPrice, invalidRange, outOfRange, ticksAtLimit } = useV3DerivedMintInfo(\n    token0,\n    token1,\n    feeAmount,\n    baseToken\n  )\n\n  // get value and prices at ticks\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks\n  const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = pricesAtTicks\n\n  const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper } = useRangeHopCallbacks(\n    baseToken,\n    baseToken.equals(token0) ? token1 : token0,\n    feeAmount,\n    tickLower,\n    tickUpper\n  )\n\n  const { onLeftRangeInput, onRightRangeInput } = useV3MintActionHandlers(noLiquidity)\n\n  // the v3 tick is either the pool's tickCurrent, or the tick closest to the v2 spot price\n  const tick = pool?.tickCurrent ?? priceToClosestTick(v2SpotPrice)\n  // the price is either the current v3 price, or the price at the tick\n  const sqrtPrice = pool?.sqrtRatioX96 ?? TickMath.getSqrtRatioAtTick(tick)\n  const position =\n    typeof tickLower === 'number' && typeof tickUpper === 'number' && !invalidRange\n      ? Position.fromAmounts({\n          pool: pool ?? new Pool(token0, token1, feeAmount, sqrtPrice, 0, tick, []),\n          tickLower,\n          tickUpper,\n          amount0: token0Value.quotient,\n          amount1: token1Value.quotient,\n          useFullPrecision: true, // we want full precision for the theoretical position\n        })\n      : undefined\n\n  const { amount0: v3Amount0Min, amount1: v3Amount1Min } = useMemo(\n    () => (position ? position.mintAmountsWithSlippage(allowedSlippage) : { amount0: undefined, amount1: undefined }),\n    [position, allowedSlippage]\n  )\n\n  const refund0 = useMemo(\n    () =>\n      position && CurrencyAmount.fromRawAmount(token0, JSBI.subtract(token0Value.quotient, position.amount0.quotient)),\n    [token0Value, position, token0]\n  )\n  const refund1 = useMemo(\n    () =>\n      position && CurrencyAmount.fromRawAmount(token1, JSBI.subtract(token1Value.quotient, position.amount1.quotient)),\n    [token1Value, position, token1]\n  )\n\n  const [confirmingMigration, setConfirmingMigration] = useState<boolean>(false)\n  const [pendingMigrationHash, setPendingMigrationHash] = useState<string | null>(null)\n\n  const migrator = useV2MigratorContract()\n\n  // approvals\n  const [approval, approveManually] = useApproveCallback(pairBalance, migrator?.address)\n  const { signatureData, gatherPermitSignature } = useV2LiquidityTokenPermit(pairBalance, migrator?.address)\n\n  const isArgentWallet = useIsArgentWallet()\n\n  const approve = useCallback(async () => {\n    if (isNotUniswap || isArgentWallet) {\n      // sushi has to be manually approved\n      await approveManually()\n    } else if (gatherPermitSignature) {\n      try {\n        await gatherPermitSignature()\n      } catch (error) {\n        // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n        if (error?.code !== 4001) {\n          await approveManually()\n        }\n      }\n    } else {\n      await approveManually()\n    }\n  }, [isNotUniswap, isArgentWallet, gatherPermitSignature, approveManually])\n\n  const addTransaction = useTransactionAdder()\n  const isMigrationPending = useIsTransactionPending(pendingMigrationHash ?? undefined)\n\n  const networkSupportsV2 = useNetworkSupportsV2()\n\n  const migrate = useCallback(() => {\n    if (\n      !migrator ||\n      !account ||\n      !deadline ||\n      !blockTimestamp ||\n      typeof tickLower !== 'number' ||\n      typeof tickUpper !== 'number' ||\n      !v3Amount0Min ||\n      !v3Amount1Min ||\n      !chainId ||\n      !networkSupportsV2\n    )\n      return\n\n    const deadlineToUse = signatureData?.deadline ?? deadline\n\n    const data: string[] = []\n\n    // permit if necessary\n    if (signatureData) {\n      data.push(\n        migrator.interface.encodeFunctionData('selfPermit', [\n          pair.address,\n          `0x${pairBalance.quotient.toString(16)}`,\n          deadlineToUse,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ])\n      )\n    }\n\n    // create/initialize pool if necessary\n    if (noLiquidity) {\n      data.push(\n        migrator.interface.encodeFunctionData('createAndInitializePoolIfNecessary', [\n          token0.address,\n          token1.address,\n          feeAmount,\n          `0x${sqrtPrice.toString(16)}`,\n        ])\n      )\n    }\n\n    // TODO could save gas by not doing this in multicall\n    data.push(\n      migrator.interface.encodeFunctionData('migrate', [\n        {\n          pair: pair.address,\n          liquidityToMigrate: `0x${pairBalance.quotient.toString(16)}`,\n          percentageToMigrate,\n          token0: token0.address,\n          token1: token1.address,\n          fee: feeAmount,\n          tickLower,\n          tickUpper,\n          amount0Min: `0x${v3Amount0Min.toString(16)}`,\n          amount1Min: `0x${v3Amount1Min.toString(16)}`,\n          recipient: account,\n          deadline: deadlineToUse,\n          refundAsETH: true, // hard-code this for now\n        },\n      ])\n    )\n\n    setConfirmingMigration(true)\n\n    migrator.estimateGas\n      .multicall(data)\n      .then((gasEstimate) => {\n        return migrator\n          .multicall(data, { gasLimit: calculateGasMargin(gasEstimate) })\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              type: TransactionType.MIGRATE_LIQUIDITY_V3,\n              baseCurrencyId: currencyId(currency0),\n              quoteCurrencyId: currencyId(currency1),\n              isFork: isNotUniswap,\n            })\n            setPendingMigrationHash(response.hash)\n          })\n      })\n      .catch(() => {\n        setConfirmingMigration(false)\n      })\n  }, [\n    migrator,\n    account,\n    deadline,\n    blockTimestamp,\n    tickLower,\n    tickUpper,\n    v3Amount0Min,\n    v3Amount1Min,\n    chainId,\n    networkSupportsV2,\n    signatureData,\n    noLiquidity,\n    pair.address,\n    pairBalance.quotient,\n    token0.address,\n    token1.address,\n    feeAmount,\n    sqrtPrice,\n    isNotUniswap,\n    currency0,\n    currency1,\n    addTransaction,\n  ])\n\n  const isSuccessfullyMigrated = !!pendingMigrationHash && JSBI.equal(pairBalance.quotient, ZERO)\n\n  if (!networkSupportsV2) return <V2Unsupported />\n\n  return (\n    <AutoColumn gap=\"20px\">\n      <ThemedText.DeprecatedBody my={9} style={{ fontWeight: 485 }}>\n        <Trans>\n          This tool will safely migrate your {isNotUniswap ? 'SushiSwap' : 'V2'} liquidity to V3. The process is\n          completely trustless thanks to the{' '}\n        </Trans>\n        {chainId && migrator && (\n          <ExternalLink href={getExplorerLink(chainId, migrator.address, ExplorerDataType.ADDRESS)}>\n            <ThemedText.DeprecatedBlue display=\"inline\">\n              <Trans>Uniswap migration contract↗</Trans>\n            </ThemedText.DeprecatedBlue>\n          </ExternalLink>\n        )}\n        .\n      </ThemedText.DeprecatedBody>\n\n      <LightCard>\n        <AutoColumn gap=\"lg\">\n          <RowBetween>\n            <RowFixed style={{ marginLeft: '8px' }}>\n              <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin={false} size={20} />\n              <ThemedText.DeprecatedMediumHeader style={{ marginLeft: '8px' }}>\n                <Trans>\n                  {currency0.symbol}/{currency1.symbol} LP Tokens\n                </Trans>\n              </ThemedText.DeprecatedMediumHeader>\n            </RowFixed>\n            <Badge variant={BadgeVariant.WARNING}>{isNotUniswap ? 'Sushi' : 'V2'}</Badge>\n          </RowBetween>\n          <LiquidityInfo token0Amount={token0Value} token1Amount={token1Value} />\n        </AutoColumn>\n      </LightCard>\n\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <ArrowDown size={24} />\n      </div>\n\n      <LightCard>\n        <AutoColumn gap=\"lg\">\n          <RowBetween>\n            <RowFixed style={{ marginLeft: '8px' }}>\n              <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin={false} size={20} />\n              <ThemedText.DeprecatedMediumHeader style={{ marginLeft: '8px' }}>\n                <Trans>\n                  {currency0.symbol}/{currency1.symbol} LP NFT\n                </Trans>\n              </ThemedText.DeprecatedMediumHeader>\n            </RowFixed>\n            <Badge variant={BadgeVariant.PRIMARY}>V3</Badge>\n          </RowBetween>\n\n          <FeeSelector feeAmount={feeAmount} handleFeePoolSelect={setFeeAmount} />\n          {noLiquidity && (\n            <BlueCard style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n              <AlertCircle color={theme.neutral1} style={{ marginBottom: '12px', opacity: 0.8 }} />\n              <ThemedText.DeprecatedBody\n                fontSize={14}\n                style={{ marginBottom: 8, fontWeight: 535, opacity: 0.8 }}\n                textAlign=\"center\"\n              >\n                <Trans>\n                  You are the first liquidity provider for this Uniswap V3 pool. Your liquidity will migrate at the\n                  current {isNotUniswap ? 'SushiSwap' : 'V2'} price.\n                </Trans>\n              </ThemedText.DeprecatedBody>\n\n              <ThemedText.DeprecatedBody\n                fontWeight={535}\n                textAlign=\"center\"\n                fontSize={14}\n                style={{ marginTop: '8px', opacity: 0.8 }}\n              >\n                <Trans>Your transaction cost will be much higher as it includes the gas to create the pool.</Trans>\n              </ThemedText.DeprecatedBody>\n\n              {v2SpotPrice && (\n                <AutoColumn gap=\"sm\" style={{ marginTop: '12px' }}>\n                  <RowBetween>\n                    <ThemedText.DeprecatedBody fontWeight={535} fontSize={14}>\n                      <Trans>\n                        {isNotUniswap ? 'SushiSwap' : 'V2'} {invertPrice ? currency1.symbol : currency0.symbol} Price:\n                      </Trans>{' '}\n                      {invertPrice\n                        ? `${v2SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                        : `${v2SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n                    </ThemedText.DeprecatedBody>\n                  </RowBetween>\n                </AutoColumn>\n              )}\n            </BlueCard>\n          )}\n\n          {largePriceDifference ? (\n            <YellowCard>\n              <AutoColumn gap=\"sm\">\n                <RowBetween>\n                  <ThemedText.DeprecatedBody fontSize={14}>\n                    <Trans>\n                      {isNotUniswap ? 'SushiSwap' : 'V2'} {invertPrice ? currency1.symbol : currency0.symbol} Price:\n                    </Trans>\n                  </ThemedText.DeprecatedBody>\n                  <ThemedText.DeprecatedBlack fontSize={14}>\n                    {invertPrice\n                      ? `${v2SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                      : `${v2SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n                  </ThemedText.DeprecatedBlack>\n                </RowBetween>\n\n                <RowBetween>\n                  <ThemedText.DeprecatedBody fontSize={14}>\n                    <Trans>V3 {invertPrice ? currency1.symbol : currency0.symbol} Price:</Trans>\n                  </ThemedText.DeprecatedBody>\n                  <ThemedText.DeprecatedBlack fontSize={14}>\n                    {invertPrice\n                      ? `${v3SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                      : `${v3SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n                  </ThemedText.DeprecatedBlack>\n                </RowBetween>\n\n                <RowBetween>\n                  <ThemedText.DeprecatedBody fontSize={14} color=\"inherit\">\n                    <Trans>Price difference:</Trans>\n                  </ThemedText.DeprecatedBody>\n                  <ThemedText.DeprecatedBlack fontSize={14} color=\"inherit\">\n                    <Trans>{priceDifferenceFraction?.toSignificant(4)}%</Trans>\n                  </ThemedText.DeprecatedBlack>\n                </RowBetween>\n              </AutoColumn>\n              <ThemedText.DeprecatedBody fontSize={14} style={{ marginTop: 8, fontWeight: 485 }}>\n                <Trans>\n                  You should only deposit liquidity into Uniswap V3 at a price you believe is correct. <br />\n                  If the price seems incorrect, you can either make a swap to move the price or wait for someone else to\n                  do so.\n                </Trans>\n              </ThemedText.DeprecatedBody>\n            </YellowCard>\n          ) : !noLiquidity && v3SpotPrice ? (\n            <RowBetween>\n              <ThemedText.DeprecatedBody fontSize={14}>\n                <Trans>V3 {invertPrice ? currency1.symbol : currency0.symbol} Price:</Trans>\n              </ThemedText.DeprecatedBody>\n              <ThemedText.DeprecatedBlack fontSize={14}>\n                {invertPrice\n                  ? `${v3SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                  : `${v3SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n              </ThemedText.DeprecatedBlack>\n            </RowBetween>\n          ) : null}\n\n          <RowBetween>\n            <ThemedText.DeprecatedLabel>\n              <Trans>Set price range</Trans>\n            </ThemedText.DeprecatedLabel>\n            <RateToggle\n              currencyA={invertPrice ? currency1 : currency0}\n              currencyB={invertPrice ? currency0 : currency1}\n              handleRateToggle={() => {\n                onLeftRangeInput('')\n                onRightRangeInput('')\n                setBaseToken((base) => (base.equals(token0) ? token1 : token0))\n              }}\n            />\n          </RowBetween>\n\n          <RangeSelector\n            priceLower={priceLower}\n            priceUpper={priceUpper}\n            getDecrementLower={getDecrementLower}\n            getIncrementLower={getIncrementLower}\n            getDecrementUpper={getDecrementUpper}\n            getIncrementUpper={getIncrementUpper}\n            onLeftRangeInput={onLeftRangeInput}\n            onRightRangeInput={onRightRangeInput}\n            currencyA={invertPrice ? currency1 : currency0}\n            currencyB={invertPrice ? currency0 : currency1}\n            feeAmount={feeAmount}\n            ticksAtLimit={ticksAtLimit}\n          />\n\n          {outOfRange ? (\n            <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n              <RowBetween>\n                <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\n                <ThemedText.DeprecatedYellow ml=\"12px\" fontSize=\"12px\">\n                  <Trans>\n                    Your position will not earn fees or be used in trades until the market price moves into your range.\n                  </Trans>\n                </ThemedText.DeprecatedYellow>\n              </RowBetween>\n            </YellowCard>\n          ) : null}\n\n          {invalidRange ? (\n            <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n              <RowBetween>\n                <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\n                <ThemedText.DeprecatedYellow ml=\"12px\" fontSize=\"12px\">\n                  <Trans>Invalid range selected. The min price must be lower than the max price.</Trans>\n                </ThemedText.DeprecatedYellow>\n              </RowBetween>\n            </YellowCard>\n          ) : null}\n\n          {position ? (\n            <DarkGrayCard>\n              <AutoColumn gap=\"md\">\n                <LiquidityInfo token0Amount={position.amount0} token1Amount={position.amount1} />\n                {chainId && refund0 && refund1 ? (\n                  <ThemedText.DeprecatedBlack fontSize={12}>\n                    <Trans>\n                      At least {formatCurrencyAmount(refund0, 4)}{' '}\n                      {chainId && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(token0) ? 'ETH' : token0.symbol} and{' '}\n                      {formatCurrencyAmount(refund1, 4)}{' '}\n                      {chainId && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(token1) ? 'ETH' : token1.symbol} will be\n                      refunded to your wallet due to selected price range.\n                    </Trans>\n                  </ThemedText.DeprecatedBlack>\n                ) : null}\n              </AutoColumn>\n            </DarkGrayCard>\n          ) : null}\n\n          <AutoColumn gap=\"md\">\n            {!isSuccessfullyMigrated && !isMigrationPending ? (\n              <AutoColumn gap=\"md\" style={{ flex: '1' }}>\n                <ButtonConfirmed\n                  confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\n                  disabled={\n                    approval !== ApprovalState.NOT_APPROVED ||\n                    signatureData !== null ||\n                    !v3Amount0Min ||\n                    !v3Amount1Min ||\n                    invalidRange ||\n                    confirmingMigration\n                  }\n                  onClick={approve}\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving</Trans>\n                    </Dots>\n                  ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\n                    <Trans>Allowed</Trans>\n                  ) : (\n                    <Trans>Allow LP token migration</Trans>\n                  )}\n                </ButtonConfirmed>\n              </AutoColumn>\n            ) : null}\n            <AutoColumn gap=\"md\" style={{ flex: '1' }}>\n              <ButtonConfirmed\n                confirmed={isSuccessfullyMigrated}\n                disabled={\n                  !v3Amount0Min ||\n                  !v3Amount1Min ||\n                  invalidRange ||\n                  (approval !== ApprovalState.APPROVED && signatureData === null) ||\n                  confirmingMigration ||\n                  isMigrationPending ||\n                  isSuccessfullyMigrated\n                }\n                onClick={migrate}\n              >\n                {isSuccessfullyMigrated ? (\n                  'Success!'\n                ) : isMigrationPending ? (\n                  <Dots>\n                    <Trans>Migrating</Trans>\n                  </Dots>\n                ) : (\n                  <Trans>Migrate</Trans>\n                )}\n              </ButtonConfirmed>\n            </AutoColumn>\n          </AutoColumn>\n        </AutoColumn>\n      </LightCard>\n    </AutoColumn>\n  )\n}\n\nexport default function MigrateV2Pair() {\n  const { address } = useParams<{ address: string }>()\n  // reset mint state on component mount, and as a cleanup (on unmount)\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(resetMintState())\n    return () => {\n      dispatch(resetMintState())\n    }\n  }, [dispatch])\n\n  const { chainId, account } = useWeb3React()\n\n  // get pair contract\n  const validatedAddress = isAddress(address)\n  const pair = usePairContract(validatedAddress ? validatedAddress : undefined)\n\n  // get token addresses from pair contract\n  const token0AddressCallState = useSingleCallResult(pair, 'token0', undefined, NEVER_RELOAD)\n  const token0Address = token0AddressCallState?.result?.[0]\n  const token1Address = useSingleCallResult(pair, 'token1', undefined, NEVER_RELOAD)?.result?.[0]\n\n  // get tokens\n  const token0 = useToken(token0Address)\n  const token1 = useToken(token1Address)\n\n  // get liquidity token balance\n  const liquidityToken: Token | undefined = useMemo(\n    () => (chainId && validatedAddress ? new Token(chainId, validatedAddress, 18) : undefined),\n    [chainId, validatedAddress]\n  )\n\n  // get data required for V2 pair migration\n  const pairBalance = useTokenBalance(account ?? undefined, liquidityToken)\n  const totalSupply = useTotalSupply(liquidityToken)\n  const [reserve0Raw, reserve1Raw] = useSingleCallResult(pair, 'getReserves')?.result ?? []\n  const reserve0 = useMemo(\n    () => (token0 && reserve0Raw ? CurrencyAmount.fromRawAmount(token0, reserve0Raw) : undefined),\n    [token0, reserve0Raw]\n  )\n  const reserve1 = useMemo(\n    () => (token1 && reserve1Raw ? CurrencyAmount.fromRawAmount(token1, reserve1Raw) : undefined),\n    [token1, reserve1Raw]\n  )\n\n  // redirect for invalid url params\n  if (\n    !validatedAddress ||\n    !pair ||\n    (pair &&\n      token0AddressCallState?.valid &&\n      !token0AddressCallState?.loading &&\n      !token0AddressCallState?.error &&\n      !token0Address)\n  ) {\n    console.error('Invalid pair address')\n    return <Navigate to=\"/migrate/v2\" replace />\n  }\n\n  return (\n    <BodyWrapper style={{ padding: 24 }}>\n      <AutoColumn gap=\"16px\">\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\n          <BackArrowLink to=\"/migrate/v2\" />\n          <ThemedText.DeprecatedMediumHeader>\n            <Trans>Migrate V2 liquidity</Trans>\n          </ThemedText.DeprecatedMediumHeader>\n          <SettingsTab autoSlippage={DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE} chainId={chainId} />\n        </AutoRow>\n\n        {!account ? (\n          <ThemedText.DeprecatedLargeHeader>\n            <Trans>You must connect an account.</Trans>\n          </ThemedText.DeprecatedLargeHeader>\n        ) : pairBalance && totalSupply && reserve0 && reserve1 && token0 && token1 ? (\n          <V2PairMigration\n            pair={pair}\n            pairBalance={pairBalance}\n            totalSupply={totalSupply}\n            reserve0={reserve0}\n            reserve1={reserve1}\n            token0={token0}\n            token1={token1}\n          />\n        ) : (\n          <EmptyState message={<Trans>Loading</Trans>} />\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  )\n}\n","import styled from 'styled-components'\n\nexport const ToggleWrapper = styled.button<{ width?: string }>`\n  display: flex;\n  align-items: center;\n  width: ${({ width }) => width ?? '100%'};\n  padding: 1px;\n  background: ${({ theme }) => theme.surface2};\n  border-radius: 8px;\n  border: ${({ theme }) => '1px solid ' + theme.surface3};\n  cursor: pointer;\n  outline: none;\n`\n\nexport const ToggleElement = styled.span<{ isActive?: boolean; fontSize?: string }>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 4px 0.5rem;\n  border-radius: 6px;\n  justify-content: center;\n  height: 100%;\n  background: ${({ theme, isActive }) => (isActive ? theme.surface1 : 'none')};\n  color: ${({ theme, isActive }) => (isActive ? theme.neutral1 : theme.neutral3)};\n  font-size: ${({ fontSize }) => fontSize ?? '1rem'};\n  font-weight: 535;\n  white-space: nowrap;\n  :hover {\n    user-select: initial;\n    color: ${({ theme, isActive }) => (isActive ? theme.neutral2 : theme.neutral3)};\n  }\n`\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@synthra-swap/sdk-core'\nimport { ToggleElement, ToggleWrapper } from 'components/Toggle/MultiToggle'\n\n// the order of displayed base currencies from left to right is always in sort order\n// currencyA is treated as the preferred base currency\nexport default function RateToggle({\n  currencyA,\n  currencyB,\n  handleRateToggle,\n}: {\n  currencyA: Currency\n  currencyB: Currency\n  handleRateToggle: () => void\n}) {\n  const tokenA = currencyA?.wrapped\n  const tokenB = currencyB?.wrapped\n\n  const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB)\n\n  return tokenA && tokenB ? (\n    <div style={{ width: 'fit-content', display: 'flex', alignItems: 'center' }} onClick={handleRateToggle}>\n      <ToggleWrapper width=\"fit-content\">\n        <ToggleElement isActive={isSorted} fontSize=\"12px\">\n          <Trans>{isSorted ? currencyA.symbol : currencyB.symbol}</Trans>\n        </ToggleElement>\n        <ToggleElement isActive={!isSorted} fontSize=\"12px\">\n          <Trans>{isSorted ? currencyB.symbol : currencyA.symbol}</Trans>\n        </ToggleElement>\n      </ToggleWrapper>\n    </div>\n  ) : null\n}\n","import { Currency, CurrencyAmount, Price } from '@synthra-swap/sdk-core'\nimport { DEFAULT_LOCALE, SUPPORTED_LOCALES } from 'constants/locales'\n\ninterface FormatLocaleNumberArgs {\n  number: CurrencyAmount<Currency> | Price<Currency, Currency> | number\n  locale?: string | null\n  options?: Intl.NumberFormatOptions\n  sigFigs?: number\n  fixedDecimals?: number\n}\n\nexport default function formatLocaleNumber({\n  number,\n  locale,\n  sigFigs,\n  fixedDecimals,\n  options = {},\n}: FormatLocaleNumberArgs): string {\n  let localeArg: string | string[]\n  if (!locale || (locale && !SUPPORTED_LOCALES.includes(locale))) {\n    localeArg = DEFAULT_LOCALE\n  } else {\n    localeArg = [locale, DEFAULT_LOCALE]\n  }\n  options.minimumFractionDigits = options.minimumFractionDigits || fixedDecimals\n  options.maximumFractionDigits = options.maximumFractionDigits || fixedDecimals\n\n  // Fixed decimals should override significant figures.\n  options.maximumSignificantDigits = options.maximumSignificantDigits || fixedDecimals ? undefined : sigFigs\n\n  let numberString: number\n  if (typeof number === 'number') {\n    numberString = fixedDecimals ? parseFloat(number.toFixed(fixedDecimals)) : number\n  } else {\n    const baseString = parseFloat(number.toSignificant(sigFigs))\n    numberString = fixedDecimals ? parseFloat(baseString.toFixed(fixedDecimals)) : baseString\n  }\n\n  return numberString.toLocaleString(localeArg, options)\n}\n","import { Currency, CurrencyAmount, Fraction } from '@synthra-swap/sdk-core'\nimport { DEFAULT_LOCALE, SupportedLocale } from 'constants/locales'\nimport JSBI from 'jsbi'\nimport formatLocaleNumber from 'lib/utils/formatLocaleNumber'\n\nexport function formatCurrencyAmount(\n  amount: CurrencyAmount<Currency> | undefined,\n  sigFigs: number,\n  locale: SupportedLocale = DEFAULT_LOCALE,\n  fixedDecimals?: number\n): string {\n  if (!amount) {\n    return '-'\n  }\n\n  if (JSBI.equal(amount.quotient, JSBI.BigInt(0))) {\n    return '0'\n  }\n\n  if (amount.divide(amount.decimalScale).lessThan(new Fraction(1, 100000))) {\n    return `<${formatLocaleNumber({ number: 0.00001, locale })}`\n  }\n\n  return formatLocaleNumber({ number: amount, locale, sigFigs, fixedDecimals })\n}\n","import { Currency, CurrencyAmount, Fraction } from '@synthra-swap/sdk-core'\nimport JSBI from 'jsbi'\n\nconst CURRENCY_AMOUNT_MIN = new Fraction(JSBI.BigInt(1), JSBI.BigInt(1000000))\n\nexport default function FormattedCurrencyAmount({\n  currencyAmount,\n  significantDigits = 4,\n}: {\n  currencyAmount: CurrencyAmount<Currency>\n  significantDigits?: number\n}) {\n  return (\n    <>\n      {currencyAmount.equalTo(JSBI.BigInt(0))\n        ? '0'\n        : currencyAmount.greaterThan(CURRENCY_AMOUNT_MIN)\n        ? currencyAmount.toSignificant(significantDigits)\n        : `<${CURRENCY_AMOUNT_MIN.toSignificant(1)}`}\n    </>\n  )\n}\n","import { Interface } from '@ethersproject/abi'\nimport IUniswapV3PoolStateJSON from '@uniswap/v3-core/artifacts/contracts/interfaces/pool/IUniswapV3PoolState.sol/IUniswapV3PoolState.json'\nimport { computePoolAddress } from '@uniswap/v3-sdk'\nimport { FeeAmount, Pool } from '@uniswap/v3-sdk'\nimport { BigintIsh, Currency, Token, V3_CORE_FACTORY_ADDRESSES } from '@synthra-swap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport { useMultipleContractSingleData } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { IUniswapV3PoolStateInterface } from '../types/v3/IUniswapV3PoolState'\n\nconst POOL_STATE_INTERFACE = new Interface(IUniswapV3PoolStateJSON.abi) as IUniswapV3PoolStateInterface\n\n// Classes are expensive to instantiate, so this caches the recently instantiated pools.\n// This avoids re-instantiating pools as the other pools in the same request are loaded.\nclass PoolCache {\n  // Evict after 128 entries. Empirically, a swap uses 64 entries.\n  private static MAX_ENTRIES = 128\n\n  // These are FIFOs, using unshift/pop. This makes recent entries faster to find.\n  private static pools: Pool[] = []\n  private static addresses: { key: string; address: string }[] = []\n\n  static getPoolAddress(factoryAddress: string, tokenA: Token, tokenB: Token, fee: FeeAmount): string {\n    if (this.addresses.length > this.MAX_ENTRIES) {\n      this.addresses = this.addresses.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const { address: addressA } = tokenA\n    const { address: addressB } = tokenB\n    const key = `${factoryAddress}:${addressA}:${addressB}:${fee.toString()}`\n    const found = this.addresses.find((address) => address.key === key)\n    if (found) return found.address\n\n    const address = {\n      key,\n      address: computePoolAddress({\n        factoryAddress,\n        tokenA,\n        tokenB,\n        fee,\n        initCodeHashManualOverride: \"0x499aba1e2f07d97749c4eabd822eca2efa521b1d6e34a67285e4a3cb773905dd\",\n      }),\n    }\n    this.addresses.unshift(address)\n    return address.address\n  }\n\n  static getPool(\n    tokenA: Token,\n    tokenB: Token,\n    fee: FeeAmount,\n    sqrtPriceX96: BigintIsh,\n    liquidity: BigintIsh,\n    tick: number\n  ): Pool {\n    if (this.pools.length > this.MAX_ENTRIES) {\n      this.pools = this.pools.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const found = this.pools.find(\n      (pool) =>\n        pool.token0 === tokenA &&\n        pool.token1 === tokenB &&\n        pool.fee === fee &&\n        JSBI.EQ(pool.sqrtRatioX96, sqrtPriceX96) &&\n        JSBI.EQ(pool.liquidity, liquidity) &&\n        pool.tickCurrent === tick\n    )\n    if (found) return found\n\n    const pool = new Pool(tokenA, tokenB, fee, sqrtPriceX96, liquidity, tick)\n    this.pools.unshift(pool)\n    return pool\n  }\n}\n\nexport enum PoolState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nfunction usePools(\n  poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][]\n): [PoolState, Pool | null][] {\n  const { chainId } = useWeb3React()\n  console.log(\"CHAIN ID@@@@@@@@@@@@\", chainId)\n\n  const poolTokens: ([Token, Token, FeeAmount] | undefined)[] = useMemo(() => {\n    if (!chainId) return new Array(poolKeys.length)\n\n    return poolKeys.map(([currencyA, currencyB, feeAmount]) => {\n      if (currencyA && currencyB && feeAmount) {\n        const tokenA = currencyA.wrapped\n        const tokenB = currencyB.wrapped\n        if (tokenA.equals(tokenB)) return undefined\n\n        return tokenA.sortsBefore(tokenB) ? [tokenA, tokenB, feeAmount] : [tokenB, tokenA, feeAmount]\n      }\n      return undefined\n    })\n  }, [chainId, poolKeys])\n  console.log(\"poolTokens@@@@@@@@@@@@\", poolTokens)\n\n  const poolAddresses: (string | undefined)[] = useMemo(() => {\n    console.log(\"CIAO CIAO ENTRATO\")\n    const v3CoreFactoryAddress = chainId && V3_CORE_FACTORY_ADDRESSES[chainId]\n    console.log(\"V3_CORE_FACTORY_ADDRESSES@@@@@@@@@@@@\", v3CoreFactoryAddress)\n    if (!v3CoreFactoryAddress) return new Array(poolTokens.length)\n\n    return poolTokens.map((value) => value && PoolCache.getPoolAddress(v3CoreFactoryAddress, ...value))\n  }, [chainId, poolTokens])\n  console.log(\"poolAddresses@@@@@@@@@@@@\", poolAddresses)\n\n  const slot0s = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'slot0')\n  const liquidities = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'liquidity')\n\n  return useMemo(() => {\n    return poolKeys.map((_key, index) => {\n      const tokens = poolTokens[index]\n      if (!tokens) return [PoolState.INVALID, null]\n      const [token0, token1, fee] = tokens\n\n      if (!slot0s[index]) return [PoolState.INVALID, null]\n      const { result: slot0, loading: slot0Loading, valid: slot0Valid } = slot0s[index]\n\n      if (!liquidities[index]) return [PoolState.INVALID, null]\n      const { result: liquidity, loading: liquidityLoading, valid: liquidityValid } = liquidities[index]\n\n      if (!tokens || !slot0Valid || !liquidityValid) return [PoolState.INVALID, null]\n      if (slot0Loading || liquidityLoading) return [PoolState.LOADING, null]\n      if (!slot0 || !liquidity) return [PoolState.NOT_EXISTS, null]\n      if (!slot0.sqrtPriceX96 || slot0.sqrtPriceX96.eq(0)) return [PoolState.NOT_EXISTS, null]\n\n      try {\n        const pool = PoolCache.getPool(token0, token1, fee, slot0.sqrtPriceX96, liquidity[0], slot0.tick)\n        return [PoolState.EXISTS, pool]\n      } catch (error) {\n        console.error('Error when constructing the pool', error)\n        return [PoolState.NOT_EXISTS, null]\n      }\n    })\n  }, [liquidities, poolKeys, slot0s, poolTokens])\n}\n\nexport function usePool(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined\n): [PoolState, Pool | null] {\n  const poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][] = useMemo(\n    () => [[currencyA, currencyB, feeAmount]],\n    [currencyA, currencyB, feeAmount]\n  )\n\n  console.log(\"kiacic@@@@@@@@@@@@\", poolKeys)\n\n \n  return usePools(poolKeys)[0]\n}\n"],"names":["useNetworkSupportsV2","chainId","useWeb3React","SUPPORTED_V2POOL_CHAIN_IDS","includes","TextWrapper","styled","div","_ref","theme","neutral3","V2Unsupported","_jsx","AutoColumn","gap","justify","children","style","width","ThemedText","BodySecondary","color","textAlign","Trans","id","PermitType","PERMIT_VALIDITY_BUFFER","PERMITTABLE_TOKENS","ChainId","MAINNET","USDC_MAINNET","address","type","AMOUNT","name","version","DAI","ALLOWED","UNI","GOERLI","SEPOLIA","UseERC20PermitState","EIP712_DOMAIN_TYPE","EIP712_DOMAIN_TYPE_NO_VERSION","EIP2612_TYPE","PERMIT_ALLOWED_TYPE","REMOVE_V2_LIQUIDITY_PERMIT_INFO","useV2LiquidityTokenPermit","liquidityAmount","spender","currencyAmount","transactionDeadline","overridePermitInfo","_currencyAmount$curre","_PERMITTABLE_TOKENS$c","account","provider","tokenAddress","currency","isToken","undefined","eip2612Contract","useEIP2612Contract","isArgentWallet","useIsArgentWallet","nonceInputs","useMemo","tokenNonceState","useSingleCallResult","permitInfo","signatureData","setSignatureData","useState","_tokenNonceState$resu","_tokenNonceState$resu2","valid","state","NOT_APPLICABLE","gatherPermitSignature","nonceNumber","result","toNumber","loading","LOADING","isSignatureDataValid","owner","deadline","nonce","JSBI","amount","quotient","SIGNED","NOT_SIGNED","async","allowed","signatureDeadline","value","toString","message","holder","expiry","domain","verifyingContract","data","JSON","stringify","types","EIP712Domain","Permit","primaryType","send","then","splitSignature","signature","v","r","s","permitType","useERC20Permit","useTransactionDeadline","useTotalSupply","token","_useSingleCallResult","_useSingleCallResult$","_useSingleCallResult$2","contract","useTokenContract","totalSupplyStr","CurrencyAmount","fromRawAmount","unwrappedToken","_WRAPPED_NATIVE_CURRE","isNative","formattedChainId","asSupportedChain","WRAPPED_NATIVE_CURRENCY","equals","nativeOnChain","FEE_AMOUNT_DETAIL","FeeAmount","LOWEST","label","description","supportedChains","ARBITRUM_ONE","BNB","CELO","CELO_ALFAJORES","OPTIMISM","POLYGON","POLYGON_MUMBAI","AVALANCHE","BASE","LOW","SUPPORTED_CHAINS","MEDIUM","HIGH","ResponsiveText","DeprecatedLabel","deprecated_mediaWidth","deprecated_upToSmall","FeeOption","_ref2","feeAmount","active","onClick","ButtonRadioChecked","_jsxs","values","0","DeprecatedMain","fontWeight","fontSize","FocusedOutlineCard","Card","surface3","pulsing","accent1","keyframes","Select","FeeSelector","_ref3","disabled","handleFeePoolSelect","showOptions","setShowOptions","setPulsing","previousFeeAmount","usePrevious","handleFeePoolSelectWithEvent","useCallback","fee","useEffect","DynamicSection","onAnimationEnd","RowBetween","_Fragment","className","Box","marginTop","ButtonGray","padding","$borderRadius","map","_feeAmount","i","ZERO","DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE","Percent","EmptyState","minHeight","justifyContent","alignItems","DeprecatedBody","LiquidityInfo","token0Amount","token1Amount","currency0","currency1","RowFixed","CurrencyLogo","size","marginRight","Text","symbol","FormattedCurrencyAmount","percentageToMigrate","V2PairMigration","_pairFactory$result","_priceDifferenceFract","_priceDifferenceFract2","_pool$tickCurrent","_pool$sqrtRatioX","_v2SpotPrice$invert","_v2SpotPrice$invert2","_v3SpotPrice$invert","_priceDifferenceFract3","_v3SpotPrice$invert2","_WRAPPED_NATIVE_CURRE2","pair","pairBalance","totalSupply","reserve0","reserve1","token0","token1","useTheme","v2FactoryAddress","V2_FACTORY_ADDRESSES","pairFactory","isNotUniswap","blockTimestamp","useCurrentBlockTimestamp","allowedSlippage","useUserSlippageToleranceWithDefault","token0Value","token1Value","setFeeAmount","poolState","pool","usePool","noLiquidity","PoolState","NOT_EXISTS","v2SpotPrice","Price","v3SpotPrice","EXISTS","token0Price","priceDifferenceFraction","divide","subtract","multiply","lessThan","largePriceDifference","baseToken","setBaseToken","ticks","pricesAtTicks","invertPrice","invalidRange","outOfRange","ticksAtLimit","useV3DerivedMintInfo","Bound","LOWER","tickLower","UPPER","tickUpper","priceLower","priceUpper","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","useRangeHopCallbacks","onLeftRangeInput","onRightRangeInput","useV3MintActionHandlers","tick","tickCurrent","priceToClosestTick","sqrtPrice","sqrtRatioX96","TickMath","getSqrtRatioAtTick","position","Position","fromAmounts","Pool","amount0","amount1","useFullPrecision","v3Amount0Min","v3Amount1Min","mintAmountsWithSlippage","refund0","refund1","confirmingMigration","setConfirmingMigration","pendingMigrationHash","setPendingMigrationHash","migrator","useV2MigratorContract","approval","approveManually","useApproveCallback","approve","error","code","addTransaction","useTransactionAdder","isMigrationPending","useIsTransactionPending","networkSupportsV2","migrate","_signatureData$deadli","deadlineToUse","push","interface","encodeFunctionData","liquidityToMigrate","amount0Min","amount1Min","recipient","refundAsETH","estimateGas","multicall","gasEstimate","gasLimit","calculateGasMargin","response","TransactionType","MIGRATE_LIQUIDITY_V3","baseCurrencyId","currencyId","quoteCurrencyId","isFork","hash","catch","isSuccessfullyMigrated","my","ExternalLink","href","getExplorerLink","ExplorerDataType","ADDRESS","DeprecatedBlue","display","LightCard","marginLeft","DoubleCurrencyLogo","margin","DeprecatedMediumHeader","1","Badge","variant","BadgeVariant","WARNING","ArrowDown","PRIMARY","BlueCard","flexDirection","AlertCircle","neutral1","marginBottom","opacity","invert","toSignificant","YellowCard","DeprecatedBlack","components","RateToggle","currencyA","currencyB","handleRateToggle","base","RangeSelector","AlertTriangle","stroke","deprecated_yellow3","DeprecatedYellow","ml","DarkGrayCard","formatCurrencyAmount","2","3","flex","ButtonConfirmed","confirmed","ApprovalState","APPROVED","NOT_APPROVED","PENDING","Dots","MigrateV2Pair","_token0AddressCallSta","_useSingleCallResult2","useParams","dispatch","useAppDispatch","resetMintState","validatedAddress","isAddress","usePairContract","token0AddressCallState","NEVER_RELOAD","token0Address","token1Address","useToken","liquidityToken","Token","useTokenBalance","reserve0Raw","reserve1Raw","BodyWrapper","AutoRow","BackArrowLink","to","SettingsTab","autoSlippage","DeprecatedLargeHeader","console","Navigate","replace","ToggleWrapper","button","surface2","ToggleElement","span","_ref4","isActive","surface1","_ref5","_ref6","_ref7","neutral2","tokenA","wrapped","tokenB","isSorted","sortsBefore","formatLocaleNumber","localeArg","numberString","number","locale","sigFigs","fixedDecimals","options","SUPPORTED_LOCALES","DEFAULT_LOCALE","minimumFractionDigits","maximumFractionDigits","maximumSignificantDigits","parseFloat","toFixed","baseString","toLocaleString","arguments","length","decimalScale","Fraction","CURRENCY_AMOUNT_MIN","significantDigits","equalTo","greaterThan","POOL_STATE_INTERFACE","Interface","IUniswapV3PoolStateJSON","PoolCache","getPoolAddress","factoryAddress","this","addresses","MAX_ENTRIES","slice","addressA","addressB","key","found","find","computePoolAddress","initCodeHashManualOverride","unshift","getPool","sqrtPriceX96","liquidity","pools","poolKeys","log","poolTokens","Array","poolAddresses","v3CoreFactoryAddress","V3_CORE_FACTORY_ADDRESSES","slot0s","useMultipleContractSingleData","liquidities","_key","index","tokens","INVALID","slot0","slot0Loading","slot0Valid","liquidityLoading","liquidityValid","eq","usePools"],"sourceRoot":""}