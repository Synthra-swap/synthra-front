{"version":3,"file":"static/js/5069.410d8981.chunk.js","mappings":"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","sources":["components/earn/styled.tsx","hooks/useNetworkSupportsV2.ts","components/V2Unsupported/index.tsx","hooks/useTotalSupply.ts","constants/tokenColors.ts","utils/getColor.ts","hooks/useColor.ts","components/PositionCard/index.tsx","hooks/useV2Pairs.ts"],"sourcesContent":["import styled from 'styled-components'\n\nimport uImage from '../../assets/images/big_unicorn.png'\nimport noise from '../../assets/images/noise.png'\nimport { AutoColumn } from '../Column'\n\nexport const DataCard = styled(AutoColumn)<{ disabled?: boolean }>`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #000000 0%, #2172e5 100%);\n  border-radius: 12px;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n`\n\nexport const CardBGImage = styled.span<{ desaturate?: boolean }>`\n  background: url(${uImage});\n  width: 1000px;\n  height: 600px;\n  position: absolute;\n  border-radius: 12px;\n  opacity: 0.4;\n  top: -100px;\n  left: -100px;\n  transform: rotate(-15deg);\n  user-select: none;\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`\n\nexport const CardNoise = styled.span`\n  background: url(${noise});\n  background-size: cover;\n  mix-blend-mode: overlay;\n  border-radius: 12px;\n  width: 100%;\n  height: 100%;\n  opacity: 0.15;\n  position: absolute;\n  top: 0;\n  left: 0;\n  user-select: none;\n`\n\nexport const CardSection = styled(AutoColumn)<{ disabled?: boolean }>`\n  padding: 1rem;\n  z-index: 1;\n  opacity: ${({ disabled }) => disabled && '0.4'};\n`\n\nexport const Break = styled.div`\n  width: 100%;\n  background-color: rgba(255, 255, 255, 0.2);\n  height: 1px;\n`\n","import { useWeb3React } from '@web3-react/core'\nimport { SUPPORTED_V2POOL_CHAIN_IDS } from 'constants/chains'\n\nexport function useNetworkSupportsV2() {\n  const { chainId } = useWeb3React()\n  return chainId && SUPPORTED_V2POOL_CHAIN_IDS.includes(chainId)\n}\n","import { Trans } from '@lingui/macro'\nimport { AutoColumn } from 'components/Column'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nconst TextWrapper = styled.div`\n  border: 1px solid ${({ theme }) => theme.neutral3};\n  padding: 16px 12px;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nexport function V2Unsupported() {\n  return (\n    <AutoColumn gap=\"lg\" justify=\"center\">\n      <AutoColumn gap=\"md\" style={{ width: '100%' }}>\n        <TextWrapper>\n          <ThemedText.BodySecondary color=\"neutral2\" textAlign=\"center\">\n            <Trans>The Synthra V2 is not available on this network.</Trans>\n          </ThemedText.BodySecondary>\n        </TextWrapper>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import { Currency, CurrencyAmount, Token } from '@synthra-swap/sdk-core'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token?: Currency): CurrencyAmount<Token> | undefined {\n  const contract = useTokenContract(token?.isToken ? token.address : undefined, false)\n\n  const totalSupplyStr: string | undefined = useSingleCallResult(contract, 'totalSupply')?.result?.[0]?.toString()\n\n  return useMemo(\n    () => (token?.isToken && totalSupplyStr ? CurrencyAmount.fromRawAmount(token, totalSupplyStr) : undefined),\n    [token, totalSupplyStr]\n  )\n}\n","export const DEFAULT_COLOR = [35, 43, 43]\n\nexport const predefinedTokenColors: { [key: string]: number[] } = {\n  // old WBTC\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png':\n    [240, 146, 65],\n  // new WBTC\n  'https://assets.coingecko.com/coins/images/7598/large/wrapped_bitcoin_wbtc.png?1548822744': [240, 146, 65],\n  // DAI\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png':\n    [250, 176, 27],\n  // UNI\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984/logo.png':\n    [230, 53, 140],\n  // BUSD\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x4Fabb145d64652a948d72533023f6E7A623C7C53/logo.png':\n    [239, 186, 9],\n  // AI-X\n  'https://s2.coinmarketcap.com/static/img/coins/64x64/26984.png': [41, 161, 241],\n  // ETH\n  'https://token-icons.s3.amazonaws.com/eth.png': [73, 112, 213],\n  // HARRYPOTTERSHIBAINUBITCOIN\n  'https://assets.coingecko.com/coins/images/30323/large/hpos10i_logo_casino_night-dexview.png?1684117567': [\n    222, 49, 16,\n  ],\n  // PEPE\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x6982508145454Ce325dDbE47a25d4ec3d2311933/logo.png':\n    [62, 174, 20],\n  // Unibot V2\n  'https://s2.coinmarketcap.com/static/img/coins/64x64/25436.png': [74, 10, 79],\n  // UNIBOT v1\n  'https://assets.coingecko.com/coins/images/30462/small/logonoline_%281%29.png?1687510315': [74, 10, 79],\n  // USDC\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png':\n    [0, 102, 217],\n  // HEX\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39/logo.png':\n    [249, 63, 140],\n  // MONG\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x1ce270557C1f68Cfb577b856766310Bf8B47FD9C/logo.png':\n    [169, 109, 255],\n  // ARB\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0xB50721BCf8d664c30412Cfbc6cf7a15145234ad1/logo.png':\n    [41, 161, 241],\n  // PSYOP\n  'https://s2.coinmarketcap.com/static/img/coins/64x64/25422.png': [232, 143, 0],\n  // MATIC\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0/logo.png':\n    [169, 109, 255],\n  // TURBO\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0xA35923162C49cF95e6BF26623385eb431ad920D3/logo.png':\n    [189, 110, 41],\n  // AIDOGE\n  'https://assets.coingecko.com/coins/images/29852/large/photo_2023-04-18_14-25-28.jpg?1681799160': [41, 161, 241],\n  // SIMPSON\n  'https://assets.coingecko.com/coins/images/30243/large/1111.png?1683692033': [232, 143, 0],\n  // OX\n  'https://assets.coingecko.com/coins/images/30604/large/Logo2.png?1685522119': [41, 89, 217],\n  // ANGLE\n  'https://assets.coingecko.com/coins/images/19060/large/ANGLE_Token-light.png?1666774221': [255, 85, 85],\n  // APE\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x4d224452801ACEd8B2F0aebE155379bb5D594381/logo.png':\n    [5, 74, 169],\n  // GUSD\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd/logo.png':\n    [0, 164, 189],\n  // OGN\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x8207c1FfC5B6804F6024322CcF34F29c3541Ae26/logo.png':\n    [5, 74, 169],\n  // RPL\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0xD33526068D116cE69F19A9ee46F0bd304F21A51f/logo.png':\n    [255, 123, 79],\n}\n","import { Buffer } from 'buffer'\nimport JPEG from 'jpeg-js'\nimport PNG from 'png-ts'\n\nimport { DEFAULT_COLOR, predefinedTokenColors } from '../constants/tokenColors'\n\nexport async function getColor(image: string | undefined, checkDistance = false) {\n  if (!image) {\n    return DEFAULT_COLOR\n  }\n  if (image in predefinedTokenColors) {\n    return predefinedTokenColors[image]\n  }\n  try {\n    const data = await fetch(image)\n    const buffer = await data.arrayBuffer()\n    const arrayBuffer = Buffer.from(buffer)\n\n    const type = data.headers.get('content-type') ?? ''\n    return getAverageColor(arrayBuffer, type, checkDistance)\n  } catch (e) {\n    return DEFAULT_COLOR\n  }\n}\n\nfunction getAverageColor(arrayBuffer: Uint8Array, type: string, checkDistance: boolean) {\n  let pixels\n  switch (type) {\n    case 'image/png': {\n      const image = PNG.load(arrayBuffer)\n      pixels = image.decode()\n      break\n    }\n    case 'image/jpeg' || 'image/jpg': {\n      const jpeg = JPEG.decode(arrayBuffer, { useTArray: true })\n      pixels = jpeg.data\n      break\n    }\n    default: {\n      return DEFAULT_COLOR\n    }\n  }\n\n  const pixelCount = pixels.length / 4\n\n  let transparentPixels = 0\n\n  let r = 0\n  let g = 0\n  let b = 0\n\n  for (let i = 0; i < pixelCount; i++) {\n    if (pixels[i * 4 + 3] === 0) {\n      transparentPixels++\n      continue\n    }\n    r += pixels[i * 4]\n    g += pixels[i * 4 + 1]\n    b += pixels[i * 4 + 2]\n  }\n\n  r = Math.floor(r / (pixelCount - transparentPixels))\n  g = Math.floor(g / (pixelCount - transparentPixels))\n  b = Math.floor(b / (pixelCount - transparentPixels))\n\n  if (checkDistance) {\n    const distance = Math.sqrt(Math.pow(r - 255, 2) + Math.pow(g - 255, 2) + Math.pow(b - 255, 2))\n\n    if (distance < 50) {\n      return DEFAULT_COLOR\n    }\n  }\n\n  return [r, g, b]\n}\n","import { ChainId, Token } from '@synthra-swap/sdk-core'\nimport { DEFAULT_COLOR } from 'constants/tokenColors'\nimport useTokenLogoSource from 'hooks/useAssetLogoSource'\nimport { rgb } from 'polished'\nimport { useEffect, useState } from 'react'\nimport { WrappedTokenInfo } from 'state/lists/wrappedTokenInfo'\nimport { getColor } from 'utils/getColor'\n\nfunction URIForEthToken(address: string) {\n  return `https://raw.githubusercontent.com/uniswap/assets/master/blockchains/ethereum/assets/${address}/logo.png`\n}\n\n/**\n * Retrieves the average color from a token's symbol using various sources.\n *\n * @param {Token} token - The token for which to fetch the color.\n * @param {string} primarySrc - Primary source URL for color retrieval (optional).\n *\n * @returns {Promise< | null>} A promise that resolves to a color string or null if color cannot be determined.\n */\nasync function getColorFromToken(token: Token, primarySrc?: string): Promise<string | null> {\n  if (!(token instanceof WrappedTokenInfo)) {\n    return null\n  }\n\n  const wrappedToken = token as WrappedTokenInfo\n  let color: string | null = null\n\n  try {\n    if (primarySrc) {\n      const colorArray = await getColor(primarySrc)\n      color = colorArray === DEFAULT_COLOR ? null : convertColorArrayToString(colorArray)\n    }\n\n    if (!color && wrappedToken.logoURI) {\n      const colorArray = await getColor(wrappedToken.logoURI)\n      color = colorArray === DEFAULT_COLOR ? null : convertColorArrayToString(colorArray)\n    }\n\n    if (!color && token.chainId === ChainId.MAINNET) {\n      const colorArray = await getColor(URIForEthToken(wrappedToken.address))\n      color = colorArray === DEFAULT_COLOR ? null : convertColorArrayToString(colorArray)\n    }\n\n    return color\n  } catch (error) {\n    console.warn(`Unable to load logoURI (${token.symbol}): ${primarySrc}, ${wrappedToken.logoURI}`)\n    return null\n  }\n}\n\nfunction convertColorArrayToString([red, green, blue]: number[]): string {\n  return rgb({ red, green, blue })\n}\n\nexport function useColor(token?: Token) {\n  const [color, setColor] = useState('#2172E5')\n  const [src] = useTokenLogoSource(token?.address, token?.chainId, token?.isNative)\n\n  useEffect(() => {\n    let stale = false\n\n    if (token) {\n      getColorFromToken(token, src).then((tokenColor) => {\n        if (!stale && tokenColor !== null) {\n          setColor(tokenColor)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor('#2172E5')\n    }\n  }, [src, token])\n\n  return color\n}\n","import { Trans } from '@lingui/macro'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { CurrencyAmount, Percent, Token } from '@synthra-swap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport { transparentize } from 'polished'\nimport { useState } from 'react'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport { Link } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport { ExternalLink, ThemedText } from 'theme/components'\n\nimport { BIG_INT_ZERO } from '../../constants/misc'\nimport { useColor } from '../../hooks/useColor'\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport { useTokenBalance } from '../../state/connection/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/unwrappedToken'\nimport { ButtonEmpty, ButtonPrimary, ButtonSecondary } from '../Button'\nimport { GrayCard, LightCard } from '../Card'\nimport { AutoColumn } from '../Column'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport { CardNoise } from '../earn/styled'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\nimport { Dots } from '../swap/styled'\n\nexport const FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\nconst StyledPositionCard = styled(LightCard)<{ bgColor: any }>`\n  border: none;\n  background: ${({ theme, bgColor }) =>\n    `radial-gradient(91.85% 100% at 1.84% 0%, ${transparentize(0.8, bgColor)} 0%, ${theme.surface2} 100%) `};\n  position: relative;\n  overflow: hidden;\n`\n\ninterface PositionCardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n  border?: string\n  stakedBalance?: CurrencyAmount<Token> // optional balance to indicate that liquidity is deposited in mining pool\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false, border }: PositionCardProps) {\n  const { account } = useWeb3React()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance &&\n    !!totalPoolTokens &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.quotient, JSBI.BigInt(0)) ? (\n        <GrayCard border={border}>\n          <AutoColumn gap=\"md\">\n            <FixedHeightRow>\n              <RowFixed>\n                <Text fontWeight={535} fontSize={16}>\n                  <Trans>Your position</Trans>\n                </Text>\n              </RowFixed>\n            </FixedHeightRow>\n            <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n              <RowFixed>\n                <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin={true} size={20} />\n                <Text fontWeight={535} fontSize={20}>\n                  {currency0.symbol}/{currency1.symbol}\n                </Text>\n              </RowFixed>\n              <RowFixed>\n                <Text fontWeight={535} fontSize={20}>\n                  {userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}\n                </Text>\n              </RowFixed>\n            </FixedHeightRow>\n            <AutoColumn gap=\"4px\">\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={535}>\n                  <Trans>Your pool share:</Trans>\n                </Text>\n                <Text fontSize={16} fontWeight={535}>\n                  {poolTokenPercentage ? poolTokenPercentage.toFixed(6) + '%' : '-'}\n                </Text>\n              </FixedHeightRow>\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={535}>\n                  {currency0.symbol}:\n                </Text>\n                {token0Deposited ? (\n                  <RowFixed>\n                    <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                      {token0Deposited?.toSignificant(6)}\n                    </Text>\n                  </RowFixed>\n                ) : (\n                  '-'\n                )}\n              </FixedHeightRow>\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={535}>\n                  {currency1.symbol}:\n                </Text>\n                {token1Deposited ? (\n                  <RowFixed>\n                    <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                      {token1Deposited?.toSignificant(6)}\n                    </Text>\n                  </RowFixed>\n                ) : (\n                  '-'\n                )}\n              </FixedHeightRow>\n            </AutoColumn>\n          </AutoColumn>\n        </GrayCard>\n      ) : (\n        <LightCard>\n          <ThemedText.DeprecatedSubHeader style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"wizard-icon\">\n              ⭐️\n            </span>{' '}\n            <Trans>\n              By adding liquidity you&apos;ll earn 0.3% of all trades on this pair proportional to your share of the\n              pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\n            </Trans>{' '}\n          </ThemedText.DeprecatedSubHeader>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, border, stakedBalance }: PositionCardProps) {\n  const { account } = useWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userDefaultPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  // if staked balance balance provided, add to standard liquidity amount\n  const userPoolBalance = stakedBalance ? userDefaultPoolBalance?.add(stakedBalance) : userDefaultPoolBalance\n\n  const poolTokenPercentage =\n    !!userPoolBalance &&\n    !!totalPoolTokens &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  const backgroundColor = useColor(pair?.token0)\n\n  return (\n    <StyledPositionCard border={border} bgColor={backgroundColor}>\n      <CardNoise />\n      <AutoColumn gap=\"md\">\n        <FixedHeightRow>\n          <AutoRow gap=\"8px\" style={{ marginLeft: '8px' }}>\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text fontWeight={535} fontSize={20}>\n              {!currency0 || !currency1 ? (\n                <Dots>\n                  <Trans>Loading</Trans>\n                </Dots>\n              ) : (\n                `${currency0.symbol}/${currency1.symbol}`\n              )}\n            </Text>\n          </AutoRow>\n          <RowFixed gap=\"8px\" style={{ marginRight: '4px' }}>\n            <ButtonEmpty padding=\"6px 8px\" $borderRadius=\"12px\" width=\"100%\" onClick={() => setShowMore(!showMore)}>\n              {showMore ? (\n                <>\n                  <Trans>Manage</Trans>\n                  <ChevronUp size=\"20\" style={{ marginLeft: '8px', height: '20px', minWidth: '20px' }} />\n                </>\n              ) : (\n                <>\n                  <Trans>Manage</Trans>\n                  <ChevronDown size=\"20\" style={{ marginLeft: '8px', height: '20px', minWidth: '20px' }} />\n                </>\n              )}\n            </ButtonEmpty>\n          </RowFixed>\n        </FixedHeightRow>\n\n        {showMore && (\n          <AutoColumn gap=\"sm\">\n            <FixedHeightRow>\n              <Text fontSize={16} fontWeight={535}>\n                <Trans>Your total pool tokens:</Trans>\n              </Text>\n              <Text fontSize={16} fontWeight={535}>\n                {userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}\n              </Text>\n            </FixedHeightRow>\n            {stakedBalance && (\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={535}>\n                  <Trans>Pool tokens in rewards pool:</Trans>\n                </Text>\n                <Text fontSize={16} fontWeight={535}>\n                  {stakedBalance.toSignificant(4)}\n                </Text>\n              </FixedHeightRow>\n            )}\n            <FixedHeightRow>\n              <RowFixed>\n                <Text fontSize={16} fontWeight={535}>\n                  <Trans>Pooled {currency0.symbol}:</Trans>\n                </Text>\n              </RowFixed>\n              {token0Deposited ? (\n                <RowFixed>\n                  <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                    {token0Deposited?.toSignificant(6)}\n                  </Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency0} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n\n            <FixedHeightRow>\n              <RowFixed>\n                <Text fontSize={16} fontWeight={535}>\n                  <Trans>Pooled {currency1.symbol}:</Trans>\n                </Text>\n              </RowFixed>\n              {token1Deposited ? (\n                <RowFixed>\n                  <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                    {token1Deposited?.toSignificant(6)}\n                  </Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency1} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n\n            <FixedHeightRow>\n              <Text fontSize={16} fontWeight={535}>\n                <Trans>Your pool share:</Trans>\n              </Text>\n              <Text fontSize={16} fontWeight={535}>\n                {poolTokenPercentage ? (\n                  <Trans>\n                    {poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)} %\n                  </Trans>\n                ) : (\n                  '-'\n                )}\n              </Text>\n            </FixedHeightRow>\n\n            <ButtonSecondary padding=\"8px\" $borderRadius=\"8px\">\n              <ExternalLink\n                style={{ width: '100%', textAlign: 'center' }}\n                href={`https://v2.info.uniswap.org/account/${account}`}\n              >\n                <Trans>\n                  View accrued fees and analytics<span style={{ fontSize: '11px' }}>↗</span>\n                </Trans>\n              </ExternalLink>\n            </ButtonSecondary>\n            {userDefaultPoolBalance && JSBI.greaterThan(userDefaultPoolBalance.quotient, BIG_INT_ZERO) && (\n              <RowBetween marginTop=\"10px\">\n                <ButtonPrimary\n                  padding=\"8px\"\n                  $borderRadius=\"8px\"\n                  as={Link}\n                  to={`/migrate/v2/${pair.liquidityToken.address}`}\n                  width=\"32%\"\n                >\n                  <Trans>Migrate</Trans>\n                </ButtonPrimary>\n                <ButtonPrimary\n                  padding=\"8px\"\n                  $borderRadius=\"8px\"\n                  as={Link}\n                  to={`/add/v2/${currencyId(currency0)}/${currencyId(currency1)}`}\n                  width=\"32%\"\n                >\n                  <Trans>Add</Trans>\n                </ButtonPrimary>\n                <ButtonPrimary\n                  padding=\"8px\"\n                  $borderRadius=\"8px\"\n                  as={Link}\n                  width=\"32%\"\n                  to={`/remove/v2/${currencyId(currency0)}/${currencyId(currency1)}`}\n                >\n                  <Trans>Remove</Trans>\n                </ButtonPrimary>\n              </RowBetween>\n            )}\n            {stakedBalance && JSBI.greaterThan(stakedBalance.quotient, BIG_INT_ZERO) && (\n              <ButtonPrimary\n                padding=\"8px\"\n                $borderRadius=\"8px\"\n                as={Link}\n                to={`/uni/${currencyId(currency0)}/${currencyId(currency1)}`}\n                width=\"100%\"\n              >\n                <Trans>Manage liquidity in rewards pool</Trans>\n              </ButtonPrimary>\n            )}\n          </AutoColumn>\n        )}\n      </AutoColumn>\n    </StyledPositionCard>\n  )\n}\n","import { Interface } from '@ethersproject/abi'\nimport IUniswapV2PairJSON from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { computePairAddress, Pair } from '@uniswap/v2-sdk'\nimport { Currency, CurrencyAmount, V2_FACTORY_ADDRESSES } from '@synthra-swap/sdk-core'\nimport { useMultipleContractSingleData } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairJSON.abi)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function useV2Pairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const tokens = useMemo(\n    () => currencies.map(([currencyA, currencyB]) => [currencyA?.wrapped, currencyB?.wrapped]),\n    [currencies]\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA &&\n          tokenB &&\n          tokenA.chainId === tokenB.chainId &&\n          !tokenA.equals(tokenB) &&\n          V2_FACTORY_ADDRESSES[tokenA.chainId]\n          ? computePairAddress({ factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId], tokenA, tokenB })\n          : undefined\n      }),\n    [tokens]\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(\n          CurrencyAmount.fromRawAmount(token0, reserve0.toString()),\n          CurrencyAmount.fromRawAmount(token1, reserve1.toString())\n        ),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function useV2Pair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  const inputs: [[Currency | undefined, Currency | undefined]] = useMemo(() => [[tokenA, tokenB]], [tokenA, tokenB])\n  return useV2Pairs(inputs)[0]\n}\n"],"names":["DataCard","styled","AutoColumn","CardBGImage","span","uImage","_ref","desaturate","CardNoise","noise","CardSection","_ref2","disabled","Break","div","useNetworkSupportsV2","chainId","useWeb3React","SUPPORTED_V2POOL_CHAIN_IDS","includes","TextWrapper","theme","neutral3","V2Unsupported","_jsx","gap","justify","children","style","width","ThemedText","BodySecondary","color","textAlign","Trans","id","useTotalSupply","token","_useSingleCallResult","_useSingleCallResult$","_useSingleCallResult$2","contract","useTokenContract","isToken","address","undefined","totalSupplyStr","useSingleCallResult","result","toString","useMemo","CurrencyAmount","fromRawAmount","DEFAULT_COLOR","predefinedTokenColors","async","getColor","image","checkDistance","arguments","length","_data$headers$get","data","fetch","buffer","arrayBuffer","Buffer","from","type","pixels","PNG","load","decode","JPEG","useTArray","pixelCount","transparentPixels","r","g","b","i","Math","floor","sqrt","pow","getAverageColor","headers","get","e","convertColorArrayToString","red","green","blue","rgb","useColor","setColor","useState","src","useTokenLogoSource","isNative","useEffect","stale","primarySrc","WrappedTokenInfo","wrappedToken","colorArray","logoURI","ChainId","MAINNET","error","console","warn","symbol","getColorFromToken","then","tokenColor","FixedHeightRow","RowBetween","StyledPositionCard","LightCard","bgColor","transparentize","surface2","MinimalPositionCard","pair","showUnwrapped","border","account","currency0","token0","unwrappedToken","currency1","token1","showMore","setShowMore","userPoolBalance","useTokenBalance","liquidityToken","totalPoolTokens","poolTokenPercentage","JSBI","quotient","Percent","token0Deposited","token1Deposited","getLiquidityValue","_Fragment","GrayCard","_jsxs","RowFixed","Text","fontWeight","fontSize","onClick","DoubleCurrencyLogo","margin","size","toSignificant","toFixed","marginLeft","DeprecatedSubHeader","role","FullPositionCard","_ref3","stakedBalance","userDefaultPoolBalance","add","backgroundColor","AutoRow","Dots","marginRight","ButtonEmpty","padding","$borderRadius","ChevronUp","height","minWidth","ChevronDown","values","0","CurrencyLogo","currency","ButtonSecondary","ExternalLink","href","components","BIG_INT_ZERO","marginTop","ButtonPrimary","as","Link","to","currencyId","PAIR_INTERFACE","Interface","IUniswapV2PairJSON","PairState","useV2Pairs","currencies","tokens","map","currencyA","currencyB","wrapped","pairAddresses","tokenA","tokenB","equals","V2_FACTORY_ADDRESSES","computePairAddress","factoryAddress","results","useMultipleContractSingleData","reserves","loading","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","EXISTS","Pair","useV2Pair"],"sourceRoot":""}