{"version":3,"file":"static/js/4491.2c831457.chunk.js","mappings":"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","sources":["components/UserTradingChart.tsx","pages/Leaderboard/UserProfile.tsx","hooks/useLeaderboard.ts"],"sourcesContent":["import React, { useMemo } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, AreaChart, Area } from 'recharts'\nimport { useUserHistoricalData } from 'hooks/useLeaderboard'\nimport { ThemedText } from 'theme/components'\n\ninterface UserTradingChartProps {\n  userId: string\n  type: 'volume' | 'score' | 'trades'\n  days: number\n  currentVolume?: number // Add currentVolume parameter like in UserPerformanceData\n}\n\nconst ChartContainer = styled.div`\n  height: 300px;\n  width: 100%;\n  margin-top: 16px;\n`\n\nconst LoadingContainer = styled.div`\n  height: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${({ theme }) => theme.neutral2};\n`\n\nconst ErrorContainer = styled.div`\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: ${({ theme }) => theme.neutral2};\n  text-align: center;\n`\n\nconst EmptyContainer = styled.div`\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: ${({ theme }) => theme.neutral2};\n  text-align: center;\n`\n\nconst Spinner = styled.div`\n  width: 32px;\n  height: 32px;\n  border: 2px solid ${({ theme }) => theme.surface3};\n  border-top: 2px solid ${({ theme }) => theme.accent1};\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  \n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`\n\nconst formatValue = (value: number, type: string) => {\n  if (type === 'volume') {\n    // For volume type, show dollar amount\n    if (value >= 1000000) return `$${(value / 1000000).toFixed(1)}M`\n    if (value >= 1000) return `$${(value / 1000).toFixed(1)}K`\n    return `$${value.toFixed(0)}`\n  }\n  \n  if (type === 'score') {\n    if (value >= 1000000) return `${(value / 1000000).toFixed(1)}M`\n    if (value >= 1000) return `${(value / 1000).toFixed(1)}K`\n    return value.toFixed(1)\n  }\n  \n  return value.toString()\n}\n\nconst formatDate = (timestamp: number) => {\n  const date = new Date(timestamp * 1000)\n  return date.toLocaleDateString('en-US', { \n    month: 'short', \n    day: 'numeric' \n  })\n}\n\nfunction CustomTooltip({ active, payload, label, type }: any) {\n  const theme = useTheme()\n  \n  if (!active || !payload || !payload.length) return null\n\n  const value = payload[0].value\n  const formattedValue = formatValue(value, type)\n  const date = new Date(label * 1000).toLocaleDateString('en-US', {\n    weekday: 'short',\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric'\n  })\n\n  return (\n    <div style={{\n      background: `${theme.surface1}f0`,\n      border: `1px solid ${theme.surface3}`,\n      borderRadius: '8px',\n      padding: '12px',\n      backdropFilter: 'blur(12px)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.12)'\n    }}>\n      <div style={{\n        fontSize: '12px',\n        color: theme.neutral2,\n        marginBottom: '4px'\n      }}>\n        {date}\n      </div>\n      <div style={{\n        fontSize: '14px',\n        fontWeight: '600',\n        color: theme.neutral1\n      }}>\n        {type === 'volume' && 'Total Volume: '}\n        {type === 'score' && 'Score: '}\n        {type === 'trades' && 'Trades: '}\n        {formattedValue}\n      </div>\n    </div>\n  )\n}\n\nexport default function UserTradingChart({ userId, type, days, currentVolume }: UserTradingChartProps) {\n  const theme = useTheme()\n  const { data, loading, error } = useUserHistoricalData(userId, days)\n\n  const chartData = useMemo(() => {\n    if (!data.length) return []\n\n    const sortedData = data\n      .filter(day => parseFloat(day.dailyVolumeUSD) > 0 || parseFloat(day.dailyScore) > 0 || parseInt(day.dailyTxCount) > 0)\n      .sort((a, b) => a.date - b.date)\n\n    if (type === 'volume') {\n      // Show cumulative volume over time, not percentages\n      console.log('UserTradingChart - Volume calculation', {\n        userId,\n        currentVolume,\n        dataLength: sortedData.length,\n        sortedData: sortedData.slice(0, 5)\n      })\n\n      const result = []\n      \n      // Calculate cumulative volume over time\n      let cumulativeVolume = 0\n      \n      for (let i = 0; i < sortedData.length; i++) {\n        const day = sortedData[i]\n        cumulativeVolume += parseFloat(day.dailyVolumeUSD)\n        \n        result.push({\n          date: day.date,\n          value: cumulativeVolume, // Show total cumulative volume, not percentage\n          formattedDate: formatDate(day.date)\n        })\n      }\n      \n      return result\n    } else {\n      // For score and trades, keep the original logic\n      return sortedData.map(day => ({\n        date: day.date,\n        value: type === 'score' ? parseFloat(day.dailyScore) : parseInt(day.dailyTxCount),\n        formattedDate: formatDate(day.date)\n      }))\n    }\n  }, [data, type, userId, currentVolume])\n\n  if (loading) {\n    return (\n      <LoadingContainer>\n        <Spinner />\n      </LoadingContainer>\n    )\n  }\n\n  if (error) {\n    return (\n      <ErrorContainer>\n        <ThemedText.BodyPrimary style={{ color: 'inherit', marginBottom: '8px' }}>\n          Failed to load chart data\n        </ThemedText.BodyPrimary>\n        <ThemedText.BodySecondary style={{ color: 'inherit' }}>\n          {error}\n        </ThemedText.BodySecondary>\n      </ErrorContainer>\n    )\n  }\n\n  if (!chartData.length) {\n    return (\n      <EmptyContainer>\n        <ThemedText.BodyPrimary style={{ color: 'inherit', marginBottom: '8px' }}>\n          No activity data\n        </ThemedText.BodyPrimary>\n        <ThemedText.BodySecondary style={{ color: 'inherit' }}>\n          Start trading to see your performance analytics\n        </ThemedText.BodySecondary>\n      </EmptyContainer>\n    )\n  }\n\n  const getColor = () => {\n    if (type === 'volume') return theme.accent1\n    if (type === 'score') return theme.success\n    return theme.accent2\n  }\n\n  const gradientId = `gradient-${type}`\n\n  return (\n    <ChartContainer>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <AreaChart data={chartData} margin={{ top: 5, right: 5, left: 5, bottom: 5 }}>\n          <defs>\n            <linearGradient id={gradientId} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor={getColor()} stopOpacity={0.3}/>\n              <stop offset=\"95%\" stopColor={getColor()} stopOpacity={0.05}/>\n            </linearGradient>\n          </defs>\n          <CartesianGrid \n            strokeDasharray=\"3 3\" \n            stroke={theme.surface3} \n            opacity={0.3}\n          />\n          <XAxis \n            dataKey=\"date\"\n            tickFormatter={formatDate}\n            axisLine={false}\n            tickLine={false}\n            tick={{ \n              fill: theme.neutral2, \n              fontSize: 11 \n            }}\n            interval=\"preserveStartEnd\"\n          />\n          <YAxis \n            tickFormatter={(value) => formatValue(value, type)}\n            axisLine={false}\n            tickLine={false}\n            tick={{ \n              fill: theme.neutral2, \n              fontSize: 11 \n            }}\n            width={60}\n          />\n          <Tooltip \n            content={<CustomTooltip type={type} />}\n            cursor={{ \n              stroke: getColor(), \n              strokeWidth: 1,\n              strokeDasharray: '3 3'\n            }}\n          />\n          <Area\n            type=\"monotone\"\n            dataKey=\"value\"\n            stroke={getColor()}\n            strokeWidth={2}\n            fill={`url(#${gradientId})`}\n            dot={false}\n            activeDot={{ \n              r: 4, \n              fill: getColor(),\n              stroke: theme.surface1,\n              strokeWidth: 2 \n            }}\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    </ChartContainer>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { useWeb3React } from '@web3-react/core'\nimport { ButtonPrimary } from 'components/Button'\nimport { useUserProfile, useUserHistoricalData } from 'hooks/useLeaderboard'\nimport UserTradingChart from 'components/UserTradingChart'\nimport { useState, useMemo } from 'react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport styled, { useTheme, keyframes } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { PageWrapper as SwapPageWrapper } from 'components/swap/styled'\nimport StatusIcon from \"components/Identicon/StatusIcon\"\nimport { getConnection } from \"connection\"\nimport { \n  ArrowLeft, \n  ExternalLink,\n  Copy,\n  Check,\n  BarChart,\n  Zap,\n  TrendingUp,\n  Activity,\n  Users,\n  Calendar,\n  Award\n} from 'react-feather'\n\n// Animations\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`\n\nconst slideIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst pulse = keyframes`\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n`\n\nconst shimmer = keyframes`\n  0% {\n    background-position: -200px 0;\n  }\n  100% {\n    background-position: 200px 0;\n  }\n`\n\nconst float = keyframes`\n  0%, 100% {\n    transform: translateY(0px);\n  }\n  50% {\n    transform: translateY(-6px);\n  }\n`\n\n// Main Layout con tema app moderno e coerente con index.tsx\nconst PageWrapper = styled(SwapPageWrapper)`\n  max-width: 1400px;\n  min-height: 100vh;\n  padding: 68px 24px 24px;\n  background: ${({ theme }) => theme.background};\n  position: relative;\n  \n  &::before {\n    content: '';\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: \n      radial-gradient(circle at 20% 80%, ${({ theme }) => theme.accent1}15 0%, transparent 50%),\n      radial-gradient(circle at 80% 20%, ${({ theme }) => theme.accent2}15 0%, transparent 50%);\n    pointer-events: none;\n    z-index: -1;\n  }\n\n  @media (max-width: 768px) {\n    padding: 68px 16px 16px;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  position: relative;\n  z-index: 1;\n`\n\nconst BackButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 16px;\n  font-weight: 500;\n  padding: 12px 0;\n  margin-bottom: 8px;\n  transition: all 0.2s ease;\n  animation: ${slideIn} 0.4s ease-out;\n\n  &:hover {\n    color: ${({ theme }) => theme.neutral1};\n    transform: translateX(-4px);\n  }\n`\n\n// Profile Header con tema moderno e glassmorphism\nconst ProfileHeader = styled.div`\n  background: ${({ theme }) => `${theme.surface1}80`};\n  backdrop-filter: blur(20px);\n  border-radius: 32px;\n  padding: 40px;\n  border: 1px solid ${({ theme }) => `${theme.surface3}40`};\n  box-shadow: \n    0 8px 32px rgba(0, 0, 0, 0.12),\n    inset 0 1px 0 rgba(255, 255, 255, 0.05);\n  position: relative;\n  overflow: hidden;\n  animation: ${fadeIn} 0.8s ease-out;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(135deg, ${({ theme }) => theme.accent1}08, ${({ theme }) => theme.accent2}08);\n    z-index: -1;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background: linear-gradient(90deg, ${({ theme }) => theme.accent1}, ${({ theme }) => theme.accent2});\n    border-radius: 32px 32px 0 0;\n  }\n`\n\nconst ProfileInfo = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  gap: 32px;\n  align-items: center;\n  margin-bottom: 40px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    gap: 24px;\n    text-align: center;\n  }\n`\n// Add new styled components for better wallet UI\nconst StatusIconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  border-radius: 12px;\n  background: ${({ theme }) => `${theme.surface3}60`};\n  backdrop-filter: blur(10px);\n  border: 1px solid ${({ theme }) => `${theme.accent1}30`};\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: ${({ theme }) => `${theme.surface3}80`};\n    border-color: ${({ theme }) => `${theme.accent1}50`};\n    transform: scale(1.05);\n  }\n`\n\nconst StatusBadge = styled.span`\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  background: ${({ theme }) => `${theme.surface3}40`};\n  backdrop-filter: blur(10px);\n  border: 1px solid ${({ theme }) => `${theme.surface3}50`};\n  border-radius: 12px;\n  padding: 8px 12px;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.neutral1};\n  transition: all 0.3s ease;\n  \n  &:hover {\n    background: ${({ theme }) => `${theme.surface3}60`};\n    border-color: ${({ theme }) => `${theme.accent1}40`};\n  }\n`\n\nconst ProfileSection = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  flex-wrap: wrap;\n  \n  @media (max-width: 768px) {\n    justify-content: center;\n  }\n`\n\n// User Type Tag - classificazione whale/shark/fish/shrimp\nconst UserTypeTag = styled.div<{ $userType: 'whale' | 'shark' | 'fish' | 'shrimp' }>`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 16px;\n  border-radius: 16px;\n  font-size: 14px;\n  font-weight: 600;\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  animation: ${float} 3s ease-in-out infinite;\n  \n  ${({ $userType, theme }) => {\n    switch ($userType) {\n      case 'whale':\n        return `\n          background: linear-gradient(135deg, #1e3a8a, #3b82f6);\n          color: white;\n          box-shadow: 0 4px 20px rgba(59, 130, 246, 0.3);\n        `\n      case 'shark':\n        return `\n          background: linear-gradient(135deg, #7c2d12, #ea580c);\n          color: white;\n          box-shadow: 0 4px 20px rgba(234, 88, 12, 0.3);\n        `\n      case 'fish':\n        return `\n          background: linear-gradient(135deg, #065f46, #10b981);\n          color: white;\n          box-shadow: 0 4px 20px rgba(16, 185, 129, 0.3);\n        `\n      case 'shrimp':\n        return `\n          background: linear-gradient(135deg, #7c2d12, #f59e0b);\n          color: white;\n          box-shadow: 0 4px 20px rgba(245, 158, 11, 0.3);\n        `\n      default:\n        return `\n          background: ${theme.surface2};\n          color: ${theme.neutral1};\n        `\n    }\n  }}\n  \n  &::before {\n    content: '${({ $userType }) => {\n      switch ($userType) {\n        case 'whale': return '🐋'\n        case 'shark': return '🦈'\n        case 'fish': return '🐟'\n        case 'shrimp': return '🦐'\n        default: return '🐠'\n      }\n    }}';\n    font-size: 16px;\n  }\n`\n\nconst RankBadge = styled.div<{ $rank: number }>`\n  width: 100px;\n  height: 100px;\n  border-radius: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 700;\n  font-size: 28px;\n  position: relative;\n  backdrop-filter: blur(10px);\n  animation: ${float} 4s ease-in-out infinite;\n  \n  ${({ $rank, theme }) => {\n    if ($rank === 1) return `\n      background: linear-gradient(135deg, #FFD700, #FFA500); \n      color: #000;\n      box-shadow: \n        0 12px 40px rgba(255, 215, 0, 0.4),\n        inset 0 1px 0 rgba(255, 255, 255, 0.3);\n    `\n    if ($rank === 2) return `\n      background: linear-gradient(135deg, #C0C0C0, #E5E5E5); \n      color: #000;\n      box-shadow: \n        0 12px 40px rgba(192, 192, 192, 0.4),\n        inset 0 1px 0 rgba(255, 255, 255, 0.3);\n    `\n    if ($rank === 3) return `\n      background: linear-gradient(135deg, #CD7F32, #D2691E); \n      color: #fff;\n      box-shadow: \n        0 12px 40px rgba(205, 127, 50, 0.4),\n        inset 0 1px 0 rgba(255, 255, 255, 0.3);\n    `\n    return `\n      background: linear-gradient(135deg, ${theme.accent1}, ${theme.accent2}); \n      color: ${theme.surface1};\n      box-shadow: \n        0 12px 40px rgba(0, 0, 0, 0.2),\n        inset 0 1px 0 rgba(255, 255, 255, 0.1);\n    `\n  }}\n  \n  &::before {\n    content: '${({ $rank }) => {\n      if ($rank === 1) return '👑'\n      if ($rank === 2) return '🥈'\n      if ($rank === 3) return '🥉'\n      return '#'\n    }}';\n    ${({ $rank }) => $rank > 3 ? 'margin-right: 4px;' : ''}\n  }\n  \n  &::after {\n    content: '${({ $rank }) => $rank > 3 ? $rank.toString() : ''}';\n  }\n  \n  &:hover {\n    transform: scale(1.05);\n    transition: transform 0.3s ease;\n  }\n`\n\nconst UserMainInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  min-width: 0;\n`\n\nconst AddressDisplay = styled.div`\n  font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;\n  font-size: 28px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.neutral1};\n  padding: 12px 16px;\n  letter-spacing: 0.5px;\n  transition: all 0.2s ease;\n  position: relative;\n  overflow: hidden;\n  \n  @media (max-width: 768px) {\n    font-size: 22px;\n    text-align: center;\n    padding: 10px 14px;\n  }\n  \n  @media (max-width: 480px) {\n    font-size: 18px;\n    padding: 8px 12px;\n  }\n`\n\nconst UserStatus = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 16px;\n  font-weight: 500;\n  flex-wrap: wrap;\n  background: ${({ theme }) => `${theme.surface2}40`};\n  backdrop-filter: blur(15px);\n  border-radius: 16px;\n  padding: 16px;\n  border: 1px solid ${({ theme }) => `${theme.surface3}30`};\n  position: relative;\n  overflow: hidden;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background: linear-gradient(90deg, ${({ theme }) => theme.accent1}50, ${({ theme }) => theme.accent2}50);\n  }\n  \n  @media (max-width: 768px) {\n    justify-content: center;\n    text-align: center;\n    flex-direction: column;\n    gap: 8px;\n  }\n`\n\nconst AddressActions = styled.div`\n  display: flex;\n  gap: 12px;\n  align-items: center;\n  \n  @media (max-width: 768px) {\n    justify-content: center;\n    width: 100%;\n    margin-top: 16px;\n  }\n  \n  @media (max-width: 480px) {\n    gap: 8px;\n  }\n`\n\nconst IconButton = styled.button`\n  background: ${({ theme }) => `${theme.surface2}80`};\n  backdrop-filter: blur(15px);\n  border: 1px solid ${({ theme }) => `${theme.surface3}50`};\n  border-radius: 16px;\n  padding: 16px;\n  color: ${({ theme }) => theme.neutral1};\n  cursor: pointer;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n  font-weight: 600;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);\n    transition: left 0.5s ease;\n  }\n  \n  &:hover {\n    background: ${({ theme }) => `${theme.surface3}90`};\n    color: ${({ theme }) => theme.neutral1};\n    transform: translateY(-4px) scale(1.05);\n    box-shadow: \n      0 12px 30px rgba(0, 0, 0, 0.2),\n      0 0 0 1px rgba(255, 255, 255, 0.1);\n    border-color: ${({ theme }) => `${theme.accent1}50`};\n    \n    &::before {\n      left: 100%;\n    }\n  }\n  \n  &:active {\n    transform: translateY(-2px) scale(1.02);\n  }\n  \n  /* Success state for copy button */\n  &.success {\n    background: linear-gradient(135deg, rgba(34, 197, 94, 0.2), rgba(22, 163, 74, 0.2));\n    border-color: rgba(34, 197, 94, 0.5);\n    color: #22c55e;\n    \n    &:hover {\n      background: linear-gradient(135deg, rgba(34, 197, 94, 0.3), rgba(22, 163, 74, 0.3));\n    }\n  }\n`\n\n// Stats Grid moderno e glassmorphism\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n  gap: 24px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n    gap: 16px;\n  }\n`\n\nconst StatCard = styled.div`\n  background: ${({ theme }) => `${theme.surface2}40`};\n  backdrop-filter: blur(20px);\n  border-radius: 20px;\n  padding: 28px;\n  border: 1px solid ${({ theme }) => `${theme.surface3}30`};\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(135deg, ${({ theme }) => theme.accent1}05, ${({ theme }) => theme.accent2}05);\n    opacity: 0;\n    transition: opacity 0.3s ease;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background: linear-gradient(90deg, ${({ theme }) => theme.accent1}, ${({ theme }) => theme.accent2});\n    opacity: 0;\n    transition: opacity 0.3s ease;\n  }\n  \n  &:hover {\n    transform: translateY(-8px) scale(1.02);\n    background: ${({ theme }) => `${theme.surface3}50`};\n    box-shadow: \n      0 20px 40px rgba(0, 0, 0, 0.15),\n      0 0 0 1px rgba(255, 255, 255, 0.05);\n    border-color: ${({ theme }) => `${theme.accent1}30`};\n    \n    &::before {\n      opacity: 1;\n    }\n    \n    &::after {\n      opacity: 1;\n    }\n  }\n`\n\nconst StatIcon = styled.div`\n  width: 52px;\n  height: 52px;\n  border-radius: 16px;\n  background: linear-gradient(135deg, ${({ theme }) => theme.accent1}20, ${({ theme }) => theme.accent2}20);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 16px;\n  color: ${({ theme }) => theme.white};\n  backdrop-filter: blur(10px);\n  border: 1px solid ${({ theme }) => `${theme.accent1}20`};\n\n`\n\nconst StatValue = styled.div`\n  font-size: 28px;\n  font-weight: 800;\n  color: ${({ theme }) => theme.neutral1};\n  margin-bottom: 8px;\n  letter-spacing: -0.5px;\n`\n\nconst StatLabel = styled.div`\n  font-size: 15px;\n  color: ${({ theme }) => theme.neutral2};\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`\n\n// Content Layout moderno\nconst ContentGrid = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  gap: 24px;\n  \n  @media (max-width: 1024px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst Card = styled.div`\n  background: ${({ theme }) => `${theme.surface1}70`};\n  backdrop-filter: blur(25px);\n  border: 1px solid ${({ theme }) => `${theme.surface3}30`};\n  border-radius: 28px;\n  overflow: hidden;\n  box-shadow: \n    0 20px 60px rgba(0, 0, 0, 0.12),\n    inset 0 1px 0 rgba(255, 255, 255, 0.05);\n  animation: ${fadeIn} 0.8s ease-out;\n  animation-delay: 0.3s;\n  animation-fill-mode: both;\n  position: relative;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(135deg, ${({ theme }) => theme.accent1}03, ${({ theme }) => theme.accent2}03);\n    pointer-events: none;\n  }\n  \n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: \n      0 25px 80px rgba(0, 0, 0, 0.15),\n      inset 0 1px 0 rgba(255, 255, 255, 0.1);\n    border-color: ${({ theme }) => `${theme.accent1}20`};\n  }\n`\n\nconst CardHeader = styled.div`\n  padding: 32px 32px 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: ${({ theme }) => `${theme.surface2}20`};\n  backdrop-filter: blur(10px);\n  border-bottom: 1px solid ${({ theme }) => `${theme.surface3}20`};\n`\n\nconst CardTitle = styled.h3`\n  font-size: 20px;\n  font-weight: 700;\n  color: ${({ theme }) => theme.neutral1};\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  letter-spacing: -0.3px;\n`\n\nconst CardContent = styled.div`\n  padding: 32px;\n`\n\n// Chart Controls moderni con glassmorphism\nconst ChartContainer = styled.div`\n  height: 420px;\n  position: relative;\n  margin-top: 24px;\n  background: ${({ theme }) => `${theme.surface2}30`};\n  backdrop-filter: blur(15px);\n  border-radius: 20px;\n  padding: 24px;\n  border: 1px solid ${({ theme }) => `${theme.surface3}30`};\n  overflow: hidden;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background: linear-gradient(90deg, ${({ theme }) => theme.accent1}, ${({ theme }) => theme.accent2});\n    opacity: 0.5;\n  }\n  \n  @media (max-width: 768px) {\n    height: 320px;\n  }\n`\n\nconst ChartControls = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-bottom: 28px;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  \n  @media (max-width: 768px) {\n    justify-content: center;\n    gap: 12px;\n  }\n`\n\nconst ControlGroup = styled.div`\n  display: flex;\n  gap: 8px;\n  padding: 6px;\n  background: ${({ theme }) => `${theme.surface2}20`};\n  backdrop-filter: blur(10px);\n  border-radius: 16px;\n  border: 1px solid ${({ theme }) => `${theme.surface3}30`};\n`\n\nconst ChartButton = styled.button<{ $active: boolean }>`\n  background: ${({ $active, theme }) => $active ? \n    `linear-gradient(135deg, ${theme.accent1}, ${theme.accent2})` : \n    'transparent'\n  };\n  color: ${({ $active, theme }) => $active ? theme.surface1 : theme.neutral2};\n  border: none;\n  border-radius: 12px;\n  padding: 12px 20px;\n  font-size: 14px;\n  font-weight: 700;\n  cursor: pointer;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);\n    transition: left 0.5s ease;\n  }\n  \n  &:hover {\n    color: ${({ $active, theme }) => $active ? theme.surface1 : theme.neutral1};\n    transform: translateY(-2px);\n    \n    &::before {\n      left: 100%;\n    }\n  }\n  \n  &:active {\n    transform: scale(0.98);\n  }\n`\n\n// Recent Activity - UI completamente rinnovata e corretta\nconst ActivityContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  max-height: 500px;\n  overflow-y: auto;\n  padding: 4px;\n  \n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: ${({ theme }) => `${theme.surface2}30`};\n    border-radius: 4px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => `${theme.surface3}60`};\n    border-radius: 4px;\n    \n    &:hover {\n      background: ${({ theme }) => `${theme.surface3}80`};\n    }\n  }\n`\n\nconst ActivityItem = styled.div`\n  background: ${({ theme }) => `${theme.surface2}25`};\n  backdrop-filter: blur(12px);\n  border: 1px solid ${({ theme }) => `${theme.surface3}30`};\n  border-radius: 20px;\n  padding: 24px;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: visible;\n  min-height: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(135deg, ${({ theme }) => theme.accent1}05, ${({ theme }) => theme.accent2}05);\n    opacity: 0;\n    transition: opacity 0.3s ease;\n    border-radius: 20px;\n    z-index: -1;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background: linear-gradient(90deg, ${({ theme }) => theme.accent1}, ${({ theme }) => theme.accent2});\n    opacity: 0;\n    transition: opacity 0.3s ease;\n    border-radius: 20px 20px 0 0;\n    z-index: 1;\n  }\n  \n  &:hover {\n    transform: translateY(-3px);\n    background: ${({ theme }) => `${theme.surface2}40`};\n    border-color: ${({ theme }) => `${theme.accent1}50`};\n    box-shadow: \n      0 12px 30px rgba(0, 0, 0, 0.15),\n      0 0 0 1px rgba(255, 255, 255, 0.08);\n    \n    &::before {\n      opacity: 1;\n    }\n    \n    &::after {\n      opacity: 1;\n    }\n  }\n`\n\nconst ActivityHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  width: 100%;\n  gap: 16px;\n`\n\nconst ActivityMainInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  flex: 1;\n  min-width: 0;\n`\n\nconst TradePair = styled.div`\n  font-size: 18px;\n  font-weight: 700;\n  color: ${({ theme }) => theme.neutral1};\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  letter-spacing: -0.2px;\n  line-height: 1.2;\n  \n  &::before {\n    content: '🔄';\n    font-size: 16px;\n    opacity: 0.8;\n    flex-shrink: 0;\n  }\n`\n\nconst TradeType = styled.div`\n  font-size: 11px;\n  font-weight: 700;\n  color: ${({ theme }) => theme.accent1};\n  text-transform: uppercase;\n  letter-spacing: 1.2px;\n  background: ${({ theme }) => `${theme.accent1}20`};\n  padding: 6px 12px;\n  border-radius: 12px;\n  display: inline-block;\n  border: 1px solid ${({ theme }) => `${theme.accent1}30`};\n  width: fit-content;\n`\n\nconst TradeValue = styled.div`\n  text-align: right;\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  align-items: flex-end;\n  flex-shrink: 0;\n`\n\nconst TradeAmount = styled.div`\n  font-size: 20px;\n  font-weight: 800;\n  color: ${({ theme }) => theme.success};\n  letter-spacing: -0.3px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  line-height: 1.1;\n  \n  &::before {\n    content: '💰';\n    font-size: 16px;\n    flex-shrink: 0;\n  }\n`\n\nconst TradeFee = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.neutral3};\n  font-weight: 500;\n  line-height: 1;\n`\n\nconst ActivityFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 16px;\n  border-top: 1px solid ${({ theme }) => `${theme.surface3}25`};\n  width: 100%;\n  gap: 12px;\n`\n\nconst TradeTime = styled.div`\n  font-size: 13px;\n  color: ${({ theme }) => theme.neutral2};\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 500;\n  line-height: 1;\n  flex: 1;\n`\n\nconst TradeHash = styled.div`\n  font-size: 11px;\n  color: ${({ theme }) => theme.neutral3};\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  background: ${({ theme }) => `${theme.surface3}25`};\n  padding: 8px 12px;\n  border-radius: 10px;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border: 1px solid ${({ theme }) => `${theme.surface3}20`};\n  line-height: 1;\n  flex-shrink: 0;\n  \n  &:hover {\n    background: ${({ theme }) => `${theme.surface3}50`};\n    color: ${({ theme }) => theme.neutral2};\n    border-color: ${({ theme }) => `${theme.surface3}40`};\n    transform: scale(1.02);\n  }\n  \n  &::after {\n    content: '📋';\n    font-size: 10px;\n    opacity: 0.7;\n    flex-shrink: 0;\n  }\n`\n\nconst EmptyActivityState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 80px 40px;\n  text-align: center;\n  color: ${({ theme }) => theme.neutral2};\n  gap: 20px;\n  min-height: 200px;\n  \n  .icon {\n    font-size: 64px;\n    opacity: 0.7;\n    margin-bottom: 12px;\n    animation: ${pulse} 2s ease-in-out infinite;\n    line-height: 1;\n  }\n  \n  .title {\n    font-size: 20px;\n    font-weight: 700;\n    color: ${({ theme }) => theme.neutral1};\n    margin-bottom: 8px;\n    line-height: 1.2;\n  }\n  \n  .subtitle {\n    font-size: 15px;\n    font-weight: 500;\n    opacity: 0.8;\n    max-width: 300px;\n    line-height: 1.4;\n  }\n`\n\n// States moderni\nconst LoadingState = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 80px 40px;\n  color: ${({ theme }) => theme.neutral2};\n  gap: 16px;\n  \n  div {\n    margin-top: 16px;\n    font-size: 16px;\n    font-weight: 500;\n  }\n`\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 80px 40px;\n  color: ${({ theme }) => theme.neutral2};\n  \n  div {\n    margin-top: 16px;\n    font-size: 16px;\n    font-weight: 500;\n  }\n`\n\nconst ErrorState = styled.div`\n  text-align: center;\n  padding: 80px 40px;\n  color: ${({ theme }) => theme.critical};\n  \n  div {\n    margin-top: 16px;\n    font-size: 16px;\n    font-weight: 500;\n  }\n`\n\n// Performance indicators con glassmorphism\nconst PerformanceCard = styled.div`\n  background: ${({ theme }) => `${theme.surface2}30`};\n  backdrop-filter: blur(15px);\n  border-radius: 20px;\n  padding: 24px;\n  border: 1px solid ${({ theme }) => `${theme.surface3}40`};\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s ease;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(135deg, ${({ theme }) => theme.accent1}05, ${({ theme }) => theme.accent2}05);\n    opacity: 0;\n    transition: opacity 0.3s ease;\n  }\n  \n  &:hover {\n    transform: translateY(-2px);\n    border-color: ${({ theme }) => `${theme.accent1}30`};\n    \n    &::before {\n      opacity: 1;\n    }\n  }\n`\n\nconst PerformanceHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`\n\nconst PerformanceTitle = styled.div`\n  font-size: 14px;\n  font-weight: 700;\n  color: ${({ theme }) => theme.neutral2};\n  text-transform: uppercase;\n  letter-spacing: 1px;\n`\n\nconst PerformanceValue = styled.div<{ $positive?: boolean; $neutral?: boolean }>`\n  font-size: 28px;\n  font-weight: 800;\n  color: ${({ $positive, $neutral, theme }) => {\n    if ($neutral) return theme.neutral1\n    return $positive ? theme.success : theme.critical\n  }};\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  letter-spacing: -0.5px;\n  \n  &::before {\n    content: '${({ $positive, $neutral }) => {\n      if ($neutral) return ''\n      return $positive ? '📈' : '📉'\n    }}';\n    font-size: 20px;\n    animation: ${$positive => $positive ? pulse : 'none'} 1.5s ease-in-out infinite;\n  }\n`\n\n// Component per calcolare performance reali di un utente usando la stessa logica di index.tsx\nconst UserPerformanceData = ({\n  userId,\n  currentVolume,\n  children,\n}: {\n  userId: string;\n  currentVolume?: number;\n  children: (data: { change24h: number; change7d: number; loading: boolean }) => React.ReactNode;\n}) => {\n  const { data: historicalData, loading } = useUserHistoricalData(userId, 7);\n\n  const performanceData = useMemo(() => {\n    console.log(\n      \"UserPerformanceData - userId:\",\n      userId,\n      \"historicalData:\",\n      historicalData,\n      \"currentVolume:\",\n      currentVolume\n    );\n\n    if (loading) {\n      return { change24h: 0, change7d: 0, loading: true };\n    }\n\n    // Se non abbiamo dati storici sufficienti\n    if (!historicalData || historicalData.length === 0) {\n      console.log(\"No historical data available\");\n      if (currentVolume && currentVolume > 0) {\n        // Se c'è volume attuale ma nessun dato storico, significa che è il primo giorno\n        // Non possiamo calcolare una crescita percentuale senza punto di confronto\n        // Ma se è il primo giorno di attività, potremmo considerarlo come 100% o N/A\n        return { change24h: 0, change7d: 0, loading: false }; // o return { change24h: null, change7d: null }\n      }\n      return { change24h: 0, change7d: 0, loading: false };\n    }\n\n    // Converti i dati e ordina per data (più vecchio prima per calcolare cumulative)\n    const sortedDataByDate = [...historicalData]\n      .map((d) => ({\n        ...d,\n        dailyVolume: parseFloat(d.dailyVolumeUSD || \"0\"),\n        timestamp: d.date || 0,\n      }))\n      .sort((a, b) => a.timestamp - b.timestamp); // Ordina dal più vecchio al più recente\n\n    // Calcola il volume cumulativo per ogni giorno\n    let cumulativeVolume = 0;\n    const dataWithCumulative = sortedDataByDate.map((d) => {\n      cumulativeVolume += d.dailyVolume;\n      return {\n        ...d,\n        totalVolume: cumulativeVolume,\n      };\n    });\n\n    // Ora ordina per data (più recente prima) per i calcoli\n    const sortedData = dataWithCumulative.sort(\n      (a, b) => b.timestamp - a.timestamp\n    );\n\n    console.log(\n      \"Sorted data:\",\n      sortedData.slice(0, 7).map((d) => ({\n        date: d.timestamp,\n        formattedDate: new Date(d.timestamp * 1000).toISOString(),\n        totalVolume: d.totalVolume,\n        dailyVolume: d.dailyVolume,\n      }))\n    );\n\n    // Per il calcolo delle percentuali, usa il volume totale\n    // Se currentVolume è fornito, usalo, altrimenti usa l'ultimo calcolato\n    const currentTotalVolume = currentVolume ?? sortedData[0]?.totalVolume ?? 0;\n\n    let change24h = 0;\n    let change7d = 0;\n\n    // Calcolo 24h - confronta volume totale attuale con quello di ieri\n    if (sortedData.length >= 2) {\n      const yesterdayTotalVolume = sortedData[1].totalVolume;\n\n      if (yesterdayTotalVolume === 0 && currentTotalVolume > 0) {\n        // Da zero a qualcosa = crescita infinita, ma mostriamo 100%\n        change24h = 100;\n      } else if (yesterdayTotalVolume > 0) {\n        // Calcolo percentuale normale: (nuovo - vecchio) / vecchio * 100\n        change24h =\n          ((currentTotalVolume - yesterdayTotalVolume) / yesterdayTotalVolume) *\n          100;\n      } else {\n        // Entrambi zero = nessun cambiamento\n        change24h = 0;\n      }\n    } else if (sortedData.length === 1 && currentTotalVolume > 0) {\n      // Se abbiamo solo un dato e c'è volume, significa crescita da 0\n      change24h = 100;\n    }\n\n    // Calcolo 7d - confronta volume totale attuale con quello di una settimana fa\n    if (sortedData.length >= 7) {\n      const weekAgoTotalVolume = sortedData[6].totalVolume;\n\n      if (weekAgoTotalVolume === 0 && currentTotalVolume > 0) {\n        // Da zero a qualcosa = crescita infinita, ma mostriamo 100%\n        change7d = 100;\n      } else if (weekAgoTotalVolume > 0) {\n        // Calcolo percentuale normale\n        change7d =\n          ((currentTotalVolume - weekAgoTotalVolume) / weekAgoTotalVolume) *\n          100;\n      } else {\n        // Entrambi zero = nessun cambiamento\n        change7d = 0;\n      }\n    } else if (sortedData.length >= 2) {\n      // Se non abbiamo 7 giorni di dati, estrapola dal trend disponibile\n      const dailyGrowthRate = change24h / 100; // converti in decimale\n\n      // Estrapola per 7 giorni (formula composta)\n      if (dailyGrowthRate !== 0) {\n        change7d = (Math.pow(1 + dailyGrowthRate, 7) - 1) * 100;\n      }\n    } else if (sortedData.length === 1 && currentTotalVolume > 0) {\n      // Se abbiamo solo un dato e c'è volume, significa crescita da 0\n      change7d = 100;\n    }\n\n    // Limita i valori a un range ragionevole\n    change24h = Math.max(-99, Math.min(change24h, 1000)); // Non può scendere sotto -99%\n    change7d = Math.max(-99, Math.min(change7d, 2000)); // Non può scendere sotto -99%\n\n    const result = {\n      change24h: Math.round(change24h * 100) / 100,\n      change7d: Math.round(change7d * 100) / 100,\n      loading: false,\n    };\n\n    console.log(\"Performance result:\", {\n      ...result,\n      dataPoints: sortedData.length,\n      currentTotal: currentTotalVolume,\n      yesterdayTotal: sortedData[1]?.totalVolume,\n      weekAgoTotal: sortedData[6]?.totalVolume,\n      currentVolumeParam: currentVolume,\n    });\n\n    return result;\n  }, [historicalData, userId, currentVolume, loading]);\n\n  return children(performanceData);\n};\n\n// Helper functions aggiornate\nconst formatAddress = (address: string) => {\n  if (!address) return '0x...'\n  \n  // For mobile, show fewer characters\n  if (typeof window !== 'undefined' && window.innerWidth < 480) {\n    return `${address.slice(0, 4)}...${address.slice(-4)}`\n  }\n  \n  // For tablet, show more characters\n  if (typeof window !== 'undefined' && window.innerWidth < 768) {\n    return `${address.slice(0, 6)}...${address.slice(-6)}`\n  }\n  \n  // For desktop, show full formatting\n  return `${address.slice(0, 6)}...${address.slice(-4)}`\n}\n\nconst formatVolume = (volume: string | number) => {\n  const num = typeof volume === 'string' ? parseFloat(volume) : volume\n  if (isNaN(num)) return '$0'\n  if (num >= 1000000) return `$${(num / 1000000).toFixed(1)}M`\n  if (num >= 1000) return `$${(num / 1000).toFixed(1)}K`\n  return `$${num.toFixed(0)}`\n}\n\nconst formatScore = (score: string | number) => {\n  const num = typeof score === 'string' ? parseFloat(score) : score\n  if (isNaN(num)) return '0'\n  if (num >= 1000000) return `${(num / 1000000).toFixed(1)}M`\n  if (num >= 1000) return `${(num / 1000).toFixed(1)}K`\n  return num.toFixed(0)\n}\n\nconst formatTimeAgo = (timestamp: string | number) => {\n  const now = Date.now()\n  const time = typeof timestamp === 'string' ? parseInt(timestamp) * 1000 : timestamp * 1000\n  const diff = now - time\n  \n  const minutes = Math.floor(diff / 60000)\n  const hours = Math.floor(diff / 3600000)\n  const days = Math.floor(diff / 86400000)\n  \n  if (days > 0) return `${days}d ago`\n  if (hours > 0) return `${hours}h ago`\n  if (minutes > 0) return `${minutes}m ago`\n  return 'Just now'\n}\n\nconst getDaysActive = (firstTimestamp: string | number) => {\n  const now = Date.now()\n  const first = typeof firstTimestamp === 'string' ? parseInt(firstTimestamp) * 1000 : firstTimestamp * 1000\n  return Math.floor((now - first) / (1000 * 60 * 60 * 24))\n}\n\n// Function to determine user type based on volume\nconst getUserType = (volume: string | number): 'whale' | 'shark' | 'fish' | 'shrimp' => {\n  const volumeNum = typeof volume === 'string' ? parseFloat(volume) : volume\n  \n  if (volumeNum >= 1000000) return 'whale'      // $1M+\n  if (volumeNum >= 100000) return 'shark'       // $100K+\n  if (volumeNum >= 5000) return 'fish'         // $10K+\n  return 'shrimp'                               // < $10K\n}\n\nconst getUserTypeLabel = (userType: 'whale' | 'shark' | 'fish' | 'shrimp'): string => {\n  switch (userType) {\n    case 'whale': return 'Whale Trader'\n    case 'shark': return 'Shark Trader'\n    case 'fish': return 'Fish Trader'\n    case 'shrimp': return 'Shrimp Trader'\n    default: return 'Trader'\n  }\n}\n\nexport default function UserProfile() {\n  const { userId } = useParams<{ userId: string }>()\n  const navigate = useNavigate()\n  const { account, connector } = useWeb3React()\n  const theme = useTheme()\n  const [copiedAddress, setCopiedAddress] = useState(false)\n  const [chartType, setChartType] = useState<'volume' | 'score' | 'trades'>('volume')\n  const [chartDays, setChartDays] = useState(30)\n  \n  const { user, loading, error, isOwnProfile } = useUserProfile(userId)\n\n  // Get connection for StatusIcon (same logic as index.tsx)\n  const connection = getConnection(connector)\n\n  // Determine user type based on volume\n  const userType = user ? getUserType(user.totalVolumeUSD) : 'shrimp'\n\n  const copyAddress = async () => {\n    if (!user) return\n    \n    try {\n      await navigator.clipboard.writeText(user.id)\n      setCopiedAddress(true)\n      setTimeout(() => setCopiedAddress(false), 2000)\n    } catch (err) {\n      console.error('Failed to copy address:', err)\n    }\n  }\n\n  const openInExplorer = () => {\n    if (!user) return\n    window.open(`https://explorer.uomi.ai/address/${user.id}`, '_blank')\n  }\n\n  if (loading) {\n    return (\n      <PageWrapper>\n        <Container>\n          <BackButton onClick={() => navigate('/leaderboard')}>\n            <ArrowLeft size={16} />\n            Back to Leaderboard\n          </BackButton>\n          \n          <LoadingState>\n            <div style={{\n              width: '40px',\n              height: '40px',\n              border: '3px solid rgba(255, 255, 255, 0.3)',\n              borderTop: '3px solid currentColor',\n              borderRadius: '50%',\n              animation: `spin 1s linear infinite`\n            }} />\n            <div>Loading profile...</div>\n          </LoadingState>\n        </Container>\n      </PageWrapper>\n    )\n  }\n\n  if (error || !user) {\n    return (\n      <PageWrapper>\n        <Container>\n          <BackButton onClick={() => navigate('/leaderboard')}>\n            <ArrowLeft size={16} />\n            Back to Leaderboard\n          </BackButton>\n          \n          <ErrorState>\n            <Zap size={48} />\n            <div>\n              {error ? 'Failed to load profile' : 'User not found'}\n            </div>\n          </ErrorState>\n        </Container>\n      </PageWrapper>\n    )\n  }\n\n  return (\n    <PageWrapper>\n      <Container>\n        <BackButton onClick={() => navigate('/leaderboard')}>\n          <ArrowLeft size={16} />\n          Back to Leaderboard\n        </BackButton>\n\n        <ProfileHeader>\n          <ProfileInfo>\n            <RankBadge $rank={user.rank} />\n            <UserMainInfo>\n              <AddressDisplay>{formatAddress(user.id)}</AddressDisplay>\n              <UserStatus>\n                <ProfileSection>\n                  <StatusIconWrapper>\n                    <StatusIcon \n                      account={user.id} \n                      connection={connection} \n                      size={24} \n                      showMiniIcons={false} \n                    />\n                  </StatusIconWrapper>\n                  \n                  <StatusBadge>\n                    <Users size={16} />\n                    Rank #{user.rank}\n                  </StatusBadge>\n                  \n                  <UserTypeTag $userType={userType}>\n                    {getUserTypeLabel(userType)}\n                  </UserTypeTag>\n                  \n                  <StatusBadge>\n                    <Calendar size={16} />\n                    {getDaysActive(user.firstTransactionTimestamp)} days active\n                  </StatusBadge>\n                  \n                  {isOwnProfile && (\n                    <StatusBadge style={{ \n                      background: 'linear-gradient(135deg, rgba(255, 215, 0, 0.2), rgba(255, 165, 0, 0.2))',\n                      borderColor: 'rgba(255, 215, 0, 0.3)',\n                      color: '#FFD700'\n                    }}>\n                      <Award size={16} />\n                      Your Profile\n                    </StatusBadge>\n                  )}\n                </ProfileSection>\n              </UserStatus>\n            </UserMainInfo>\n            <AddressActions>\n              <IconButton \n                className={copiedAddress ? 'success' : ''}\n                onClick={copyAddress} \n                title={copiedAddress ? 'Address copied!' : 'Copy address'}\n              >\n                {copiedAddress ? <Check size={16} /> : <Copy size={16} />}\n              </IconButton>\n              <IconButton onClick={openInExplorer} title=\"View on explorer\">\n                <ExternalLink size={16} />\n              </IconButton>\n            </AddressActions>\n          </ProfileInfo>\n\n          <StatsGrid>\n            <StatCard>\n              <StatIcon>\n                <BarChart size={20} />\n              </StatIcon>\n              <StatValue>{formatVolume(user.totalVolumeUSD)}</StatValue>\n              <StatLabel>\n                <TrendingUp size={12} />\n                Total Volume\n              </StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatIcon>\n                <Activity size={20} />\n              </StatIcon>\n              <StatValue>{user.txCount}</StatValue>\n              <StatLabel>\n                <Zap size={12} />\n                Total Trades\n              </StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatIcon>\n                <Award size={20} />\n              </StatIcon>\n              <StatValue>{formatScore(user.score)}</StatValue>\n              <StatLabel>\n                <Users size={12} />\n                Trading Score\n              </StatLabel>\n            </StatCard>\n            <StatCard>\n              <StatIcon>\n                <Calendar size={20} />\n              </StatIcon>\n              <StatValue>{getDaysActive(user.firstTransactionTimestamp)}</StatValue>\n              <StatLabel>\n                <Activity size={12} />\n                Days Active\n              </StatLabel>\n            </StatCard>\n          </StatsGrid>\n        </ProfileHeader>\n\n        <ContentGrid>\n          <Card>\n            <CardHeader>\n              <CardTitle>\n                <BarChart size={18} />\n                Performance Analytics\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <UserPerformanceData userId={user.id} currentVolume={parseFloat(user.totalVolumeUSD || '0')}>\n                {(performanceData) => (\n                  <>\n                    <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))', gap: '16px', marginBottom: '24px' }}>\n                      <PerformanceCard>\n                        <PerformanceHeader>\n                          <PerformanceTitle>Total Volume Change (24h)</PerformanceTitle>\n                        </PerformanceHeader>\n                        <PerformanceValue \n                          $positive={performanceData.change24h > 0}\n                          $neutral={performanceData.change24h === 0}\n                        >\n                          {performanceData.loading ? 'Loading...' : (\n                            `${performanceData.change24h > 0 ? '+' : ''}${performanceData.change24h.toFixed(1)}%`\n                          )}\n                        </PerformanceValue>\n                      </PerformanceCard>\n                      \n                      <PerformanceCard>\n                        <PerformanceHeader>\n                          <PerformanceTitle>Total Volume Change (7d)</PerformanceTitle>\n                        </PerformanceHeader>\n                        <PerformanceValue \n                          $positive={performanceData.change7d > 0}\n                          $neutral={performanceData.change7d === 0}\n                        >\n                          {performanceData.loading ? 'Loading...' : (\n                            `${performanceData.change7d > 0 ? '+' : ''}${performanceData.change7d.toFixed(1)}%`\n                          )}\n                        </PerformanceValue>\n                      </PerformanceCard>\n                    </div>\n                  </>\n                )}\n              </UserPerformanceData>\n              \n              <ChartControls>\n                <ControlGroup>\n                  <ChartButton \n                    $active={chartType === 'volume'} \n                    onClick={() => setChartType('volume')}\n                  >\n                    Volume\n                  </ChartButton>\n                  <ChartButton \n                    $active={chartType === 'score'} \n                    onClick={() => setChartType('score')}\n                  >\n                    Score\n                  </ChartButton>\n                  <ChartButton \n                    $active={chartType === 'trades'} \n                    onClick={() => setChartType('trades')}\n                  >\n                    Trades\n                  </ChartButton>\n                </ControlGroup>\n                <ControlGroup>\n                  <ChartButton \n                    $active={chartDays === 7} \n                    onClick={() => setChartDays(7)}\n                  >\n                    7D\n                  </ChartButton>\n                  <ChartButton \n                    $active={chartDays === 30} \n                    onClick={() => setChartDays(30)}\n                  >\n                    30D\n                  </ChartButton>\n                </ControlGroup>\n              </ChartControls>\n              <ChartContainer>\n                <UserTradingChart \n                  userId={user.id} \n                  type={chartType} \n                  days={chartDays}\n                  currentVolume={parseFloat(user.totalVolumeUSD || '0')}\n                />\n              </ChartContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>\n                <Activity size={18} />\n                Recent Activity\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {!user.swaps || user.swaps.length === 0 ? (\n                <EmptyActivityState>\n                  <div className=\"icon\">📈</div>\n                  <div className=\"title\">No Recent Activity</div>\n                  <div className=\"subtitle\">\n                    Start trading to see your transaction history here\n                  </div>\n                </EmptyActivityState>\n              ) : (\n                <ActivityContainer>\n                  {user.swaps.slice(0, 10).map((swap, index) => (\n                    <ActivityItem key={swap.id}>\n                      <ActivityHeader>\n                        <ActivityMainInfo>\n                          <TradePair>\n                            {swap.pool.token0.symbol}/{swap.pool.token1.symbol}\n                          </TradePair>\n                          <TradeType>Swap</TradeType>\n                        </ActivityMainInfo>\n                        <TradeValue>\n                          <TradeAmount>\n                            {formatVolume(swap.amountUSD)}\n                          </TradeAmount>\n                       \n                        </TradeValue>\n                      </ActivityHeader>\n                      \n                      <ActivityFooter>\n                        <TradeTime>\n                          <Calendar size={12} />\n                          {formatTimeAgo(swap.timestamp)}\n                        </TradeTime>\n                        <TradeHash \n                          onClick={() => navigator.clipboard.writeText(swap.id)}\n                          title=\"Click to copy transaction hash\"\n                        >\n                          {swap.id.slice(0, 8)}...{swap.id.slice(-4)}\n                        </TradeHash>\n                      </ActivityFooter>\n                    </ActivityItem>\n                  ))}\n                </ActivityContainer>\n              )}\n            </CardContent>\n          </Card>\n        </ContentGrid>\n      </Container>\n    </PageWrapper>\n  )\n}","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nconst SUBGRAPH_URL = 'https://subgraph.synthra.org/subgraphs/name/ianlapham/uniswap-v3-sub'\n\nexport interface LeaderboardUser {\n  id: string\n  totalVolumeUSD: string\n  totalVolumeETH: string\n  score: string\n  txCount: string\n  firstTransactionTimestamp: string\n  lastTransactionTimestamp: string\n  rank: number\n}\n\nexport interface UserDayData {\n  id: string\n  date: number\n  user: {\n    id: string\n  }\n  dailyVolumeUSD: string\n  dailyVolumeETH: string\n  dailyScore: string\n  dailyTxCount: string\n}\n\nexport interface UserSwap {\n  id: string\n  amountUSD: string\n  timestamp: string\n  pool: {\n    id: string\n    token0: {\n      symbol: string\n    }\n    token1: {\n      symbol: string\n    }\n  }\n}\n\ninterface UserDetails extends LeaderboardUser {\n  swaps: UserSwap[]\n  userDayData: UserDayData[]\n}\n\n// Top users query for leaderboard\nconst TOP_USERS_QUERY = `\n  query GetTopUsers($first: Int!, $skip: Int!) {\n    users(\n      first: $first\n      skip: $skip\n      orderBy: score\n      orderDirection: desc\n      where: { score_gt: \"0\" }\n    ) {\n      id\n      totalVolumeUSD\n      totalVolumeETH\n      score\n      txCount\n      firstTransactionTimestamp\n      lastTransactionTimestamp\n    }\n  }\n`\n\n// User details query for profile\nconst USER_DETAILS_QUERY = `\n  query GetUserDetails($userId: String!) {\n    user(id: $userId) {\n      id\n      totalVolumeUSD\n      totalVolumeETH\n      score\n      txCount\n      firstTransactionTimestamp\n      lastTransactionTimestamp\n      swaps(first: 10, orderBy: timestamp, orderDirection: desc) {\n        id\n        amountUSD\n        timestamp\n        pool {\n          id\n          token0 {\n            symbol\n          }\n          token1 {\n            symbol\n          }\n        }\n      }\n      userDayData(first: 30, orderBy: date, orderDirection: desc) {\n        id\n        date\n        dailyVolumeUSD\n        dailyVolumeETH\n        dailyScore\n        dailyTxCount\n        user {\n          id\n        }\n      }\n    }\n  }\n`\n\n// Daily leaderboard query\nconst DAILY_LEADERS_QUERY = `\n  query GetDailyLeaders($date: Int!) {\n    userDayDatas(\n      first: 10\n      orderBy: dailyVolumeUSD\n      orderDirection: desc\n      where: { \n        date: $date\n        dailyVolumeUSD_gt: \"0\"\n      }\n    ) {\n      id\n      user {\n        id\n      }\n      dailyVolumeUSD\n      dailyScore\n      dailyTxCount\n    }\n  }\n`\n\n// User historical data query for charts\nconst USER_HISTORICAL_DATA_QUERY = `\n  query GetUserHistoricalData($userId: String!, $first: Int!, $orderDirection: String!) {\n    userDayDatas(\n      first: $first\n      orderBy: date\n      orderDirection: $orderDirection\n      where: { \n        user: $userId\n        dailyVolumeUSD_gt: \"0\"\n      }\n    ) {\n      id\n      date\n      dailyVolumeUSD\n      dailyScore\n      dailyTxCount\n      user {\n        id\n      }\n    }\n  }\n`\n\nasync function fetchLeaderboard(first: number = 100, skip: number = 0): Promise<LeaderboardUser[]> {\n  try {\n    const response = await fetch(SUBGRAPH_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: TOP_USERS_QUERY,\n        variables: { first, skip },\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`)\n    }\n\n    const data = await response.json()\n    \n    if (data.errors) {\n      throw new Error(`GraphQL errors: ${JSON.stringify(data.errors)}`)\n    }\n\n    const users = data.data?.users || []\n    \n    // Add rank based on order\n    return users.map((user: any, index: number) => ({\n      ...user,\n      rank: skip + index + 1,\n    }))\n  } catch (error) {\n    console.error('Error fetching leaderboard data:', error)\n    throw error\n  }\n}\n\nasync function fetchUserDetails(userId: string): Promise<UserDetails | null> {\n  try {\n    const response = await fetch(SUBGRAPH_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: USER_DETAILS_QUERY,\n        variables: { userId: userId.toLowerCase() },\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`)\n    }\n\n    const data = await response.json()\n    \n    if (data.errors) {\n      throw new Error(`GraphQL errors: ${JSON.stringify(data.errors)}`)\n    }\n\n    const user = data.data?.user\n    if (!user) return null\n\n    // Calculate rank by counting users with higher score\n    const rankResponse = await fetch(SUBGRAPH_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: `\n          query GetUserRank($score: String!) {\n            users(where: { score_gt: $score }) {\n              id\n            }\n          }\n        `,\n        variables: { score: user.score },\n      }),\n    })\n\n    const rankData = await rankResponse.json()\n    const rank = (rankData.data?.users?.length || 0) + 1\n\n    return {\n      ...user,\n      rank,\n    }\n  } catch (error) {\n    console.error('Error fetching user details:', error)\n    throw error\n  }\n}\n\nasync function fetchDailyLeaders(date?: Date): Promise<UserDayData[]> {\n  const targetDate = date || new Date()\n  const dayTimestamp = Math.floor(targetDate.setUTCHours(0, 0, 0, 0) / 1000)\n\n  try {\n    const response = await fetch(SUBGRAPH_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: DAILY_LEADERS_QUERY,\n        variables: { date: dayTimestamp },\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`)\n    }\n\n    const data = await response.json()\n    \n    if (data.errors) {\n      throw new Error(`GraphQL errors: ${JSON.stringify(data.errors)}`)\n    }\n\n    return data.data?.userDayDatas || []\n  } catch (error) {\n    console.error('Error fetching daily leaders:', error)\n    throw error\n  }\n}\n\nasync function fetchUserHistoricalData(userId: string, first: number = 100, orderDirection: 'asc' | 'desc' = 'desc'): Promise<UserDayData[]> {\n  try {\n    const response = await fetch(SUBGRAPH_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: USER_HISTORICAL_DATA_QUERY,\n        variables: { userId: userId.toLowerCase(), first, orderDirection },\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`)\n    }\n\n    const data = await response.json()\n    \n    if (data.errors) {\n      throw new Error(`GraphQL errors: ${JSON.stringify(data.errors)}`)\n    }\n\n    return data.data?.userDayDatas || []\n  } catch (error) {\n    console.error('Error fetching user historical data:', error)\n    throw error\n  }\n}\n\n// Hook for user historical data\nexport function useUserHistoricalData(userId?: string, days: number = 30) {\n  const [data, setData] = useState<UserDayData[]>([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    if (!userId) return\n\n    const loadData = async () => {\n      setLoading(true)\n      setError(null)\n      \n      try {\n        const historicalData = await fetchUserHistoricalData(userId, days, 'asc')\n        setData(historicalData)\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load historical data')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadData()\n  }, [userId, days])\n\n  return { data, loading, error }\n}\n\nexport function useLeaderboard(pageSize: number = 50) {\n  const [users, setUsers] = useState<LeaderboardUser[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [hasMore, setHasMore] = useState(true)\n  const [page, setPage] = useState(0)\n\n  const loadMore = async () => {\n    try {\n      setLoading(true)\n      const skip = page * pageSize\n      const newUsers = await fetchLeaderboard(pageSize, skip)\n      \n      if (page === 0) {\n        setUsers(newUsers)\n      } else {\n        setUsers(prev => [...prev, ...newUsers])\n      }\n      \n      setHasMore(newUsers.length === pageSize)\n      setPage(prev => prev + 1)\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const refresh = () => {\n    setPage(0)\n    setUsers([])\n    setHasMore(true)\n    setError(null)\n    loadMore()\n  }\n\n  useEffect(() => {\n    loadMore()\n  }, [])\n\n  return {\n    users,\n    loading,\n    error,\n    hasMore,\n    loadMore,\n    refresh,\n  }\n}\n\nexport function useUserProfile(userAddress?: string) {\n  const { account } = useWeb3React()\n  const [user, setUser] = useState<UserDetails | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  const targetAddress = userAddress || account\n\n  useEffect(() => {\n    async function loadUser() {\n      if (!targetAddress) {\n        setLoading(false)\n        return\n      }\n\n      try {\n        setLoading(true)\n        setError(null)\n        const userDetails = await fetchUserDetails(targetAddress)\n        setUser(userDetails)\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Unknown error')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadUser()\n  }, [targetAddress])\n\n  return {\n    user,\n    loading,\n    error,\n    isOwnProfile: targetAddress === account,\n  }\n}\n\nexport function useDailyLeaderboard(date?: Date) {\n  const [leaders, setLeaders] = useState<UserDayData[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    async function loadDailyLeaders() {\n      try {\n        setLoading(true)\n        setError(null)\n        const dailyLeaders = await fetchDailyLeaders(date)\n        setLeaders(dailyLeaders)\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Unknown error')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadDailyLeaders()\n  }, [date])\n\n  return {\n    leaders,\n    loading,\n    error,\n  }\n}\n"],"names":["ChartContainer","styled","div","LoadingContainer","_ref","theme","neutral2","ErrorContainer","_ref2","EmptyContainer","_ref3","Spinner","_ref4","surface3","_ref5","accent1","formatValue","value","type","toFixed","toString","formatDate","timestamp","Date","toLocaleDateString","month","day","CustomTooltip","_ref6","active","payload","label","useTheme","length","formattedValue","date","weekday","year","_jsxs","style","background","surface1","border","borderRadius","padding","backdropFilter","boxShadow","children","_jsx","fontSize","color","marginBottom","fontWeight","neutral1","UserTradingChart","_ref7","userId","days","currentVolume","data","loading","error","useUserHistoricalData","chartData","useMemo","sortedData","filter","parseFloat","dailyVolumeUSD","dailyScore","parseInt","dailyTxCount","sort","a","b","console","log","dataLength","slice","result","cumulativeVolume","i","push","formattedDate","map","ThemedText","BodyPrimary","BodySecondary","getColor","success","accent2","gradientId","ResponsiveContainer","width","height","AreaChart","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","stroke","opacity","XAxis","dataKey","tickFormatter","axisLine","tickLine","tick","fill","interval","YAxis","Tooltip","content","cursor","strokeWidth","Area","dot","activeDot","r","fadeIn","keyframes","slideIn","pulse","float","PageWrapper","SwapPageWrapper","Container","BackButton","button","ProfileHeader","_ref8","_ref9","_ref10","_ref11","ProfileInfo","StatusIconWrapper","_ref12","_ref13","_ref14","_ref15","StatusBadge","span","_ref16","_ref17","_ref18","_ref19","_ref20","ProfileSection","UserTypeTag","_ref21","$userType","surface2","_ref22","RankBadge","_ref23","$rank","_ref24","_ref25","_ref26","UserMainInfo","AddressDisplay","_ref27","UserStatus","_ref28","_ref29","_ref30","_ref31","_ref32","AddressActions","IconButton","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","StatsGrid","StatCard","_ref39","_ref40","_ref41","_ref42","_ref43","_ref44","_ref45","_ref46","StatIcon","_ref47","_ref48","_ref49","white","_ref50","StatValue","_ref51","StatLabel","_ref52","ContentGrid","Card","_ref53","_ref54","_ref55","_ref56","_ref57","CardHeader","_ref58","_ref59","CardTitle","h3","_ref60","CardContent","_ref61","_ref62","_ref63","_ref64","ChartControls","ControlGroup","_ref65","_ref66","ChartButton","_ref67","$active","_ref68","_ref69","ActivityContainer","_ref70","_ref71","_ref72","ActivityItem","_ref73","_ref74","_ref75","_ref76","_ref77","_ref78","_ref79","_ref80","ActivityHeader","ActivityMainInfo","TradePair","_ref81","TradeType","_ref82","_ref83","_ref84","TradeValue","TradeAmount","_ref85","ActivityFooter","_ref86","neutral3","_ref87","TradeTime","_ref88","TradeHash","_ref89","_ref90","_ref91","_ref92","_ref93","_ref94","EmptyActivityState","_ref95","_ref96","LoadingState","_ref97","ErrorState","_ref98","_ref99","critical","PerformanceCard","_ref100","_ref101","_ref102","_ref103","_ref104","PerformanceHeader","PerformanceTitle","_ref105","PerformanceValue","_ref106","$positive","$neutral","_ref107","UserPerformanceData","_ref108","historicalData","_ref109","_sortedData$","_sortedData$2","_sortedData$3","change24h","change7d","sortedDataByDate","d","dailyVolume","totalVolume","toISOString","currentTotalVolume","yesterdayTotalVolume","weekAgoTotalVolume","dailyGrowthRate","Math","pow","max","min","round","dataPoints","currentTotal","yesterdayTotal","weekAgoTotal","currentVolumeParam","formatAddress","address","window","innerWidth","formatVolume","volume","num","isNaN","formatScore","score","formatTimeAgo","diff","now","minutes","floor","hours","getDaysActive","firstTimestamp","first","getUserType","volumeNum","getUserTypeLabel","userType","UserProfile","useParams","navigate","useNavigate","account","connector","useWeb3React","copiedAddress","setCopiedAddress","useState","chartType","setChartType","chartDays","setChartDays","user","isOwnProfile","useUserProfile","connection","getConnection","totalVolumeUSD","onClick","ArrowLeft","size","borderTop","animation","Zap","rank","StatusIcon","showMiniIcons","Users","Calendar","firstTransactionTimestamp","borderColor","Award","className","async","navigator","clipboard","writeText","setTimeout","err","title","Check","Copy","openInExplorer","open","ExternalLink","BarChart","TrendingUp","Activity","txCount","performanceData","_Fragment","display","gridTemplateColumns","gap","swaps","swap","index","pool","token0","symbol","token1","amountUSD","SUBGRAPH_URL","TOP_USERS_QUERY","USER_DETAILS_QUERY","USER_HISTORICAL_DATA_QUERY","arguments","undefined","setData","setLoading","setError","useEffect","orderDirection","_data$data4","response","fetch","method","headers","body","JSON","stringify","query","variables","toLowerCase","ok","Error","status","json","errors","userDayDatas","fetchUserHistoricalData","message","loadData","useLeaderboard","pageSize","users","setUsers","hasMore","setHasMore","page","setPage","loadMore","skip","newUsers","_data$data","fetchLeaderboard","prev","refresh","userAddress","setUser","targetAddress","userDetails","_data$data2","_rankData$data","_rankData$data$users","rankResponse","fetchUserDetails","loadUser"],"sourceRoot":""}