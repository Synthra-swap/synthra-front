{"version":3,"file":"static/js/7034.86510b09.chunk.js","mappings":"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","sources":["pages/Pool/styled.tsx","../node_modules/react-feather/dist/icons/plus.js","pages/AppBody.tsx","lib/hooks/useApproval.ts","hooks/useApproveCallback.ts","components/swap/UnsupportedCurrencyFooter.tsx","utils/unwrappedToken.ts","components/NavigationTabs/index.tsx","components/CurrencyInputPanel/index.tsx","lib/utils/formatLocaleNumber.ts","utils/formatCurrencyAmount.ts","utils/calculateSlippageAmount.ts","state/mint/hooks.tsx","pages/AddLiquidityV2/ConfirmAddModalBottom.tsx","pages/AddLiquidityV2/PoolPriceBar.tsx","pages/AddLiquidityV2/index.tsx","pages/AddLiquidityV2/redirects.tsx"],"sourcesContent":["import { LoadingRows as BaseLoadingRows } from 'components/Loader/styled'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 20px;\n`\n\nexport const ClickableText = styled(Text)`\n  :hover {\n    cursor: pointer;\n  }\n  color: ${({ theme }) => theme.accent1};\n`\nexport const MaxButton = styled.button<{ width: string }>`\n  padding: 0.5rem 1rem;\n  background-color: ${({ theme }) => theme.accent2};\n  border: 1px solid ${({ theme }) => theme.accent2};\n  border-radius: 0.5rem;\n  font-size: 1rem;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    padding: 0.25rem 0.5rem;\n  `};\n  font-weight: 535;\n  cursor: pointer;\n  margin: 0.25rem;\n  overflow: hidden;\n  color: ${({ theme }) => theme.accent1};\n  :hover {\n    border: 1px solid ${({ theme }) => theme.accent1};\n  }\n  :focus {\n    border: 1px solid ${({ theme }) => theme.accent1};\n    outline: none;\n  }\n`\n\nexport const Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport const LoadingRows = styled(BaseLoadingRows)`\n  padding-top: 36px;\n  min-width: 75%;\n  max-width: 960px;\n  grid-column-gap: 0.5em;\n  grid-row-gap: 0.8em;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 8px;\n\n  & > div:nth-child(4n + 1) {\n    grid-column: 1 / 3;\n  }\n  & > div:nth-child(4n) {\n    grid-column: 3 / 4;\n    margin-bottom: 2em;\n  }\n`\n","function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var Plus=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"line\",{x1:\"12\",y1:\"5\",x2:\"12\",y2:\"19\"}),React.createElement(\"line\",{x1:\"5\",y1:\"12\",x2:\"19\",y2:\"12\"}))}));Plus.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},Plus.displayName=\"Plus\";export default Plus;","import { PropsWithChildren } from 'react'\nimport styled from 'styled-components'\nimport { Z_INDEX } from 'theme/zIndex'\n\ninterface BodyWrapperProps {\n  $margin?: string\n  $maxWidth?: string\n}\n\nexport const BodyWrapper = styled.main<BodyWrapperProps>`\n  position: relative;\n  margin-top: ${({ $margin }) => $margin ?? '0px'};\n  max-width: ${({ $maxWidth }) => $maxWidth ?? '420px'};\n  width: 100%;\n  background: ${({ theme }) => theme.surface1};\n  border-radius: 16px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  margin-top: 1rem;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: ${Z_INDEX.default};\n  font-feature-settings: 'ss01' on, 'ss02' on, 'cv01' on, 'cv03' on;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody(props: PropsWithChildren<BodyWrapperProps>) {\n  return <BodyWrapper {...props} />\n}\n","import { MaxUint256 } from '@ethersproject/constants'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, CurrencyAmount, Token } from '@synthra-swap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTokenContract } from 'hooks/useContract'\nimport { useTokenAllowance } from 'hooks/useTokenAllowance'\nimport { useCallback, useMemo } from 'react'\nimport { calculateGasMargin } from 'utils/calculateGasMargin'\n\nexport enum ApprovalState {\n  UNKNOWN = 'UNKNOWN',\n  NOT_APPROVED = 'NOT_APPROVED',\n  PENDING = 'PENDING',\n  APPROVED = 'APPROVED',\n}\n\nfunction useApprovalStateForSpender(\n  amountToApprove: CurrencyAmount<Currency> | undefined,\n  spender: string | undefined,\n  useIsPendingApproval: (token?: Token, spender?: string) => boolean\n): ApprovalState {\n  const { account } = useWeb3React()\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\n\n  const { tokenAllowance } = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useIsPendingApproval(token, spender)\n\n  return useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency.isNative) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!tokenAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if tokenAllowance is\n    return tokenAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, pendingApproval, spender, tokenAllowance])\n}\n\nexport function useApproval(\n  amountToApprove: CurrencyAmount<Currency> | undefined,\n  spender: string | undefined,\n  useIsPendingApproval: (token?: Token, spender?: string) => boolean\n): [\n  ApprovalState,\n  () => Promise<\n    | { response: TransactionResponse; tokenAddress: string; spenderAddress: string; amount: CurrencyAmount<Currency> }\n    | undefined\n  >\n] {\n  const { chainId } = useWeb3React()\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\n\n  // check the current approval status\n  const approvalState = useApprovalStateForSpender(amountToApprove, spender, useIsPendingApproval)\n\n  const tokenContract = useTokenContract(token?.address)\n\n  const approve = useCallback(async () => {\n    function logFailure(error: Error | string): undefined {\n      console.warn(`${token?.symbol || 'Token'} approval failed:`, error)\n      return\n    }\n\n    // Bail early if there is an issue.\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      return logFailure('approve was called unnecessarily')\n    } else if (!chainId) {\n      return logFailure('no chainId')\n    } else if (!token) {\n      return logFailure('no token')\n    } else if (!tokenContract) {\n      return logFailure('tokenContract is null')\n    } else if (!amountToApprove) {\n      return logFailure('missing amount to approve')\n    } else if (!spender) {\n      return logFailure('no spender')\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens which restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.quotient.toString())\n    })\n\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.quotient.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response) => {\n        return {\n          response,\n          tokenAddress: token.address,\n          spenderAddress: spender,\n          amount: amountToApprove,\n        }\n      })\n      .catch((error: Error) => {\n        logFailure(error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, chainId])\n\n  return [approvalState, approve]\n}\n","import { Currency, CurrencyAmount } from '@synthra-swap/sdk-core'\nimport { ApprovalState, useApproval } from 'lib/hooks/useApproval'\nimport { useCallback } from 'react'\n\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks'\nimport { TransactionType } from '../state/transactions/types'\nexport { ApprovalState } from 'lib/hooks/useApproval'\n\nfunction useGetAndTrackApproval(getApproval: ReturnType<typeof useApproval>[1]) {\n  const addTransaction = useTransactionAdder()\n  return useCallback(() => {\n    return getApproval().then((pending) => {\n      if (pending) {\n        const { response, tokenAddress, spenderAddress: spender, amount } = pending\n        addTransaction(response, {\n          type: TransactionType.APPROVAL,\n          tokenAddress,\n          spender,\n          amount: amount.quotient.toString(),\n        })\n      }\n    })\n  }, [addTransaction, getApproval])\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount<Currency>,\n  spender?: string\n): [ApprovalState, () => Promise<void>] {\n  const [approval, getApproval] = useApproval(amountToApprove, spender, useHasPendingApproval)\n  return [approval, useGetAndTrackApproval(getApproval)]\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@synthra-swap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { ButtonEmpty } from 'components/Button'\nimport Card, { OutlineCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport Modal from 'components/Modal'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport { useState } from 'react'\nimport styled from 'styled-components'\nimport { CloseIcon, ExternalLink, ThemedText } from 'theme/components'\nimport { Z_INDEX } from 'theme/zIndex'\n\nimport { useUnsupportedTokens } from '../../hooks/Tokens'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\n\nconst DetailsFooter = styled.div<{ show: boolean }>`\n  padding-top: calc(16px + 2rem);\n  padding-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: -2rem;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.neutral2};\n  background-color: ${({ theme }) => theme.surface2};\n  z-index: ${Z_INDEX.deprecated_zero};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n  text-align: center;\n`\n\nconst StyledButtonEmpty = styled(ButtonEmpty)`\n  text-decoration: none;\n`\n\nconst AddressText = styled(ThemedText.DeprecatedBlue)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    font-size: 10px;\n`}\n`\n\nexport default function UnsupportedCurrencyFooter({\n  show,\n  currencies,\n}: {\n  show: boolean\n  currencies: (Currency | undefined | null)[]\n}) {\n  const { chainId } = useWeb3React()\n  const [showDetails, setShowDetails] = useState(false)\n\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return currency?.wrapped\n        })\n      : []\n\n  const unsupportedTokens = useUnsupportedTokens()\n\n  return (\n    <DetailsFooter show={show}>\n      <Modal isOpen={showDetails} onDismiss={() => setShowDetails(false)}>\n        <Card padding=\"2rem\">\n          <AutoColumn gap=\"lg\">\n            <RowBetween>\n              <ThemedText.DeprecatedMediumHeader>\n                <Trans>Unsupported assets</Trans>\n              </ThemedText.DeprecatedMediumHeader>\n              <CloseIcon onClick={() => setShowDetails(false)} data-testid=\"close-icon\" />\n            </RowBetween>\n            {tokens.map((token) => {\n              return (\n                token &&\n                unsupportedTokens &&\n                Object.keys(unsupportedTokens).includes(token.address) && (\n                  <OutlineCard key={token.address?.concat('not-supported')} data-testid=\"unsupported-token-card\">\n                    <AutoColumn gap=\"10px\">\n                      <AutoRow gap=\"5px\" align=\"center\">\n                        <CurrencyLogo currency={token} size=\"24px\" />\n                        <ThemedText.DeprecatedBody fontWeight={535}>{token.symbol}</ThemedText.DeprecatedBody>\n                      </AutoRow>\n                      {chainId && (\n                        <ExternalLink href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)}>\n                          <AddressText>{token.address}</AddressText>\n                        </ExternalLink>\n                      )}\n                    </AutoColumn>\n                  </OutlineCard>\n                )\n              )\n            })}\n            <AutoColumn gap=\"lg\">\n              <ThemedText.DeprecatedBody fontWeight={535}>\n                <Trans>\n                  Some assets are not available through this interface because they may not work well with the smart\n                  contracts or we are unable to allow trading for legal reasons.\n                </Trans>\n              </ThemedText.DeprecatedBody>\n            </AutoColumn>\n          </AutoColumn>\n        </Card>\n      </Modal>\n      <StyledButtonEmpty padding=\"0\" onClick={() => setShowDetails(true)} data-testid=\"read-more-button\">\n        <ThemedText.DeprecatedBlue>\n          <Trans>Read more about unsupported assets</Trans>\n        </ThemedText.DeprecatedBlue>\n      </StyledButtonEmpty>\n    </DetailsFooter>\n  )\n}\n","import { Currency } from '@synthra-swap/sdk-core'\nimport { asSupportedChain } from 'constants/chains'\n\nimport { nativeOnChain, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens'\n\nexport function unwrappedToken(currency: Currency): Currency {\n  if (currency.isNative) return currency\n  const formattedChainId = asSupportedChain(currency.chainId)\n  if (formattedChainId && WRAPPED_NATIVE_CURRENCY[formattedChainId]?.equals(currency))\n    return nativeOnChain(currency.chainId)\n  return currency\n}\n","import { Trans } from '@lingui/macro'\nimport { Percent } from '@synthra-swap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport SettingsTab from 'components/Settings'\nimport { ReactNode } from 'react'\nimport { ArrowLeft } from 'react-feather'\nimport { Link, useLocation } from 'react-router-dom'\nimport { Box } from 'rebass'\nimport { useAppDispatch } from 'state/hooks'\nimport { resetMintState } from 'state/mint/actions'\nimport { resetMintState as resetMintV3State } from 'state/mint/v3/actions'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { flexRowNoWrap } from 'theme/styles'\n\nimport { RowBetween } from '../Row'\n\nconst Tabs = styled.div`\n  ${flexRowNoWrap};\n  align-items: center;\n  border-radius: 3rem;\n  justify-content: space-evenly;\n`\n\nconst StyledLink = styled(Link)<{ flex?: string }>`\n  flex: ${({ flex }) => flex ?? 'none'};\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    flex: none;\n    margin-right: 10px;\n  `};\n`\n\nconst FindPoolTabsText = styled(ThemedText.SubHeaderLarge)`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n`\n\nconst StyledArrowLeft = styled(ArrowLeft)`\n  color: ${({ theme }) => theme.neutral1};\n`\n\nexport function FindPoolTabs({ origin }: { origin: string }) {\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem', position: 'relative' }}>\n        <Link to={origin}>\n          <StyledArrowLeft />\n        </Link>\n        <FindPoolTabsText>\n          <Trans>Import V2 pool</Trans>\n        </FindPoolTabsText>\n      </RowBetween>\n    </Tabs>\n  )\n}\n\nconst AddRemoveTitleText = styled(ThemedText.SubHeaderLarge)`\n  flex: 1;\n  margin: auto;\n`\n\nexport function AddRemoveTabs({\n  adding,\n  creating,\n  autoSlippage,\n  positionID,\n  children,\n}: {\n  adding: boolean\n  creating: boolean\n  autoSlippage: Percent\n  positionID?: string\n  showBackLink?: boolean\n  children?: ReactNode\n}) {\n  const { chainId } = useWeb3React()\n  const theme = useTheme()\n  // reset states on back\n  const dispatch = useAppDispatch()\n  const location = useLocation()\n\n  // detect if back should redirect to v3 or v2 pool page\n  const poolLink = location.pathname.includes('add/v2')\n    ? '/pools/v2'\n    : '/pools' + (positionID ? `/${positionID.toString()}` : '')\n\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem' }} align=\"center\">\n        <StyledLink\n          to={poolLink}\n          onClick={() => {\n            if (adding) {\n              // not 100% sure both of these are needed\n              dispatch(resetMintState())\n              dispatch(resetMintV3State())\n            }\n          }}\n          flex={children ? '1' : undefined}\n        >\n          <StyledArrowLeft stroke={theme.neutral2} />\n        </StyledLink>\n        <AddRemoveTitleText textAlign={children ? 'start' : 'center'}>\n          {creating ? (\n            <Trans>Create a pair</Trans>\n          ) : adding ? (\n            <Trans>Add liquidity</Trans>\n          ) : (\n            <Trans>Remove liquidity</Trans>\n          )}\n        </AddRemoveTitleText>\n        {children && <Box style={{ marginRight: '.5rem' }}>{children}</Box>}\n        <SettingsTab autoSlippage={autoSlippage} chainId={chainId} />\n      </RowBetween>\n    </Tabs>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { Currency, CurrencyAmount } from '@synthra-swap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { LoadingOpacityContainer, loadingOpacityMixin } from 'components/Loader/styled'\nimport { isSupportedChain } from 'constants/chains'\nimport { darken } from 'polished'\nimport { ReactNode, useCallback, useState } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { flexColumnNoWrap, flexRowNoWrap } from 'theme/styles'\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\n\nimport { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\nimport { useCurrencyBalance } from '../../state/connection/hooks'\nimport { ButtonGray } from '../Button'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { Input as NumericalInput } from '../NumericalInput'\nimport { RowBetween, RowFixed } from '../Row'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { FiatValue } from './FiatValue'\n\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  ${flexColumnNoWrap};\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\n  background-color: ${({ theme, hideInput }) => (hideInput ? 'transparent' : theme.surface2)};\n\n  z-index: 1;\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\n  transition: height 1s ease;\n  will-change: height;\n`\n\nconst Container = styled.div<{ hideInput: boolean; disabled: boolean }>`\n  border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\n  border: 1px solid ${({ theme }) => theme.surface3};\n  background-color: ${({ theme }) => theme.surface2};\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\n  ${({ theme, hideInput, disabled }) =>\n    !disabled &&\n    `\n    :focus,\n    :hover {\n      border: 1px solid ${hideInput ? ' transparent' : theme.surface2};\n    }\n  `}\n`\n\nconst CurrencySelect = styled(ButtonGray)<{\n  visible: boolean\n  selected: boolean\n  hideInput?: boolean\n  disabled?: boolean\n  pointerEvents?: string\n}>`\n  align-items: center;\n  background-color: ${({ selected, theme }) => (selected ? theme.surface1 : theme.accent1)};\n  opacity: ${({ disabled }) => (!disabled ? 1 : 0.4)};\n  box-shadow: ${({ theme }) => theme.deprecated_shallowShadow};\n  color: ${({ selected, theme }) => (selected ? theme.neutral1 : theme.white)};\n  cursor: pointer;\n  border-radius: 16px;\n  outline: none;\n  user-select: none;\n  border: none;\n  font-size: 24px;\n  font-weight: 535;\n  height: ${({ hideInput }) => (hideInput ? '2.8rem' : '2.4rem')};\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\n  padding: 0 8px;\n  justify-content: space-between;\n  margin-left: ${({ hideInput }) => (hideInput ? '0' : '12px')};\n  :focus,\n  :hover {\n    background-color: ${({ selected, theme }) => (selected ? theme.surface2 : darken(0.05, theme.accent1))};\n  }\n  visibility: ${({ visible }) => (visible ? 'visible' : 'hidden')};\n  ${({ pointerEvents }) => pointerEvents && `pointer-events: none`}\n`\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  ${flexRowNoWrap};\n  align-items: center;\n  justify-content: space-between;\n  padding: ${({ selected }) => (selected ? ' 1rem 1rem 0.75rem 1rem' : '1rem 1rem 1rem 1rem')};\n`\n\nconst LabelRow = styled.div`\n  ${flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0 1rem 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.neutral2)};\n  }\n`\n\nconst FiatRow = styled(LabelRow)`\n  justify-content: flex-end;\n  padding: 0px 1rem 0.75rem;\n  height: 32px;\n`\n\n// note the line height 0 ensures even if we change font/font-size it doesn't break centering\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  line-height: 0px;\n`\n\nconst StyledDropDown = styled(DropDown)<{ selected: boolean }>`\n  margin: 0 0.25rem 0 0.35rem;\n  height: 35%;\n\n  path {\n    stroke: ${({ selected, theme }) => (selected ? theme.neutral1 : theme.white)};\n    stroke-width: 1.5px;\n  }\n`\n\nconst StyledTokenName = styled.span<{ active?: boolean }>`\n  ${({ active }) => (active ? '  margin: 0 0.25rem 0 0.25rem;' : '  margin: 0 0.25rem 0 0.25rem;')}\n  font-size: 20px;\n`\n\nconst StyledBalanceMax = styled.button<{ disabled?: boolean }>`\n  background-color: transparent;\n  background-color: ${({ theme }) => theme.accent2};\n  border: none;\n  border-radius: 12px;\n  color: ${({ theme }) => theme.accent1};\n  cursor: pointer;\n  font-size: 11px;\n  font-weight: 535;\n  margin-left: 0.25rem;\n  opacity: ${({ disabled }) => (!disabled ? 1 : 0.4)};\n  padding: 4px 6px;\n  pointer-events: ${({ disabled }) => (!disabled ? 'initial' : 'none')};\n\n  :hover {\n    opacity: ${({ disabled }) => (!disabled ? 0.8 : 0.4)};\n  }\n\n  :focus {\n    outline: none;\n  }\n`\n\nconst StyledNumericalInput = styled(NumericalInput)<{ $loading: boolean }>`\n  ${loadingOpacityMixin};\n  text-align: left;\n`\n\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: ReactNode\n  onCurrencySelect?: (currency: Currency) => void\n  currency?: Currency | null\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  fiatValue?: { data?: number; isLoading: boolean }\n  id: string\n  showCommonBases?: boolean\n  showCurrencyAmount?: boolean\n  disableNonToken?: boolean\n  renderBalance?: (amount: CurrencyAmount<Currency>) => ReactNode\n  locked?: boolean\n  loading?: boolean\n}\n\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  onCurrencySelect,\n  currency,\n  otherCurrency,\n  id,\n  showCommonBases,\n  showCurrencyAmount,\n  disableNonToken,\n  renderBalance,\n  fiatValue,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  locked = false,\n  loading = false,\n  ...rest\n}: CurrencyInputPanelProps) {\n  const [modalOpen, setModalOpen] = useState(false)\n  const { account, chainId } = useWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const theme = useTheme()\n\n  const handleDismissSearch = useCallback(() => {\n    setModalOpen(false)\n  }, [setModalOpen])\n\n  const chainAllowed = isSupportedChain(chainId)\n\n  return (\n    <InputPanel id={id} hideInput={hideInput} {...rest}>\n      {!locked && (\n        <>\n          <Container hideInput={hideInput} disabled={!chainAllowed}>\n            <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={!onCurrencySelect}>\n              {!hideInput && (\n                <StyledNumericalInput\n                  className=\"token-amount-input\"\n                  value={value}\n                  onUserInput={onUserInput}\n                  disabled={!chainAllowed}\n                  $loading={loading}\n                />\n              )}\n\n              <>\n                <CurrencySelect\n                  disabled={!chainAllowed}\n                  visible={currency !== undefined}\n                  selected={!!currency}\n                  hideInput={hideInput}\n                  className=\"open-currency-select-button\"\n                  onClick={() => {\n                    if (onCurrencySelect) {\n                      setModalOpen(true)\n                    }\n                  }}\n                  pointerEvents={!onCurrencySelect ? 'none' : undefined}\n                >\n                  <Aligner>\n                    <RowFixed>\n                      {pair ? (\n                        <span style={{ marginRight: '0.5rem' }}>\n                          <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={24} margin={true} />\n                        </span>\n                      ) : (\n                        currency && <CurrencyLogo style={{ marginRight: '0.5rem' }} currency={currency} size=\"24px\" />\n                      )}\n                      {pair ? (\n                        <StyledTokenName className=\"pair-name-container\">\n                          {pair?.token0.symbol}:{pair?.token1.symbol}\n                        </StyledTokenName>\n                      ) : (\n                        <StyledTokenName\n                          className=\"token-symbol-container\"\n                          active={Boolean(currency && currency.symbol)}\n                        >\n                          {(currency && currency.symbol && currency.symbol.length > 20\n                            ? currency.symbol.slice(0, 4) +\n                              '...' +\n                              currency.symbol.slice(currency.symbol.length - 5, currency.symbol.length)\n                            : currency?.symbol) || <Trans>Select a token</Trans>}\n                        </StyledTokenName>\n                      )}\n                    </RowFixed>\n                    {onCurrencySelect && <StyledDropDown selected={!!currency} />}\n                  </Aligner>\n                </CurrencySelect>\n              </>\n            </InputRow>\n            {Boolean(!hideInput && !hideBalance && currency) && (\n              <FiatRow>\n                <RowBetween>\n                  <LoadingOpacityContainer $loading={loading}>\n                    {fiatValue && <FiatValue fiatValue={fiatValue} />}\n                  </LoadingOpacityContainer>\n                  {account && (\n                    <RowFixed style={{ height: '17px' }}>\n                      <ThemedText.DeprecatedBody\n                        onClick={onMax}\n                        color={theme.neutral3}\n                        fontWeight={535}\n                        fontSize={14}\n                        style={{ display: 'inline', cursor: 'pointer' }}\n                      >\n                        {Boolean(!hideBalance && currency && selectedCurrencyBalance) &&\n                          (renderBalance?.(selectedCurrencyBalance as CurrencyAmount<Currency>) || (\n                            <Trans>Balance: {formatCurrencyAmount(selectedCurrencyBalance, 4)}</Trans>\n                          ))}\n                      </ThemedText.DeprecatedBody>\n                      {Boolean(showMaxButton && selectedCurrencyBalance) && (\n                        <StyledBalanceMax onClick={onMax}>\n                          <Trans>MAX</Trans>\n                        </StyledBalanceMax>\n                      )}\n                    </RowFixed>\n                  )}\n                </RowBetween>\n              </FiatRow>\n            )}\n          </Container>\n        </>\n      )}\n      {onCurrencySelect && (\n        <CurrencySearchModal\n          isOpen={modalOpen}\n          onDismiss={handleDismissSearch}\n          onCurrencySelect={onCurrencySelect}\n          selectedCurrency={currency}\n          otherSelectedCurrency={otherCurrency}\n          showCommonBases={showCommonBases}\n          showCurrencyAmount={showCurrencyAmount}\n          disableNonToken={disableNonToken}\n        />\n      )}\n    </InputPanel>\n  )\n}\n","import { Currency, CurrencyAmount, Price } from '@synthra-swap/sdk-core'\nimport { DEFAULT_LOCALE, SUPPORTED_LOCALES } from 'constants/locales'\n\ninterface FormatLocaleNumberArgs {\n  number: CurrencyAmount<Currency> | Price<Currency, Currency> | number\n  locale?: string | null\n  options?: Intl.NumberFormatOptions\n  sigFigs?: number\n  fixedDecimals?: number\n}\n\nexport default function formatLocaleNumber({\n  number,\n  locale,\n  sigFigs,\n  fixedDecimals,\n  options = {},\n}: FormatLocaleNumberArgs): string {\n  let localeArg: string | string[]\n  if (!locale || (locale && !SUPPORTED_LOCALES.includes(locale))) {\n    localeArg = DEFAULT_LOCALE\n  } else {\n    localeArg = [locale, DEFAULT_LOCALE]\n  }\n  options.minimumFractionDigits = options.minimumFractionDigits || fixedDecimals\n  options.maximumFractionDigits = options.maximumFractionDigits || fixedDecimals\n\n  // Fixed decimals should override significant figures.\n  options.maximumSignificantDigits = options.maximumSignificantDigits || fixedDecimals ? undefined : sigFigs\n\n  let numberString: number\n  if (typeof number === 'number') {\n    numberString = fixedDecimals ? parseFloat(number.toFixed(fixedDecimals)) : number\n  } else {\n    const baseString = parseFloat(number.toSignificant(sigFigs))\n    numberString = fixedDecimals ? parseFloat(baseString.toFixed(fixedDecimals)) : baseString\n  }\n\n  return numberString.toLocaleString(localeArg, options)\n}\n","import { Currency, CurrencyAmount, Fraction } from '@synthra-swap/sdk-core'\nimport { DEFAULT_LOCALE, SupportedLocale } from 'constants/locales'\nimport JSBI from 'jsbi'\nimport formatLocaleNumber from 'lib/utils/formatLocaleNumber'\n\nexport function formatCurrencyAmount(\n  amount: CurrencyAmount<Currency> | undefined,\n  sigFigs: number,\n  locale: SupportedLocale = DEFAULT_LOCALE,\n  fixedDecimals?: number\n): string {\n  if (!amount) {\n    return '-'\n  }\n\n  if (JSBI.equal(amount.quotient, JSBI.BigInt(0))) {\n    return '0'\n  }\n\n  if (amount.divide(amount.decimalScale).lessThan(new Fraction(1, 100000))) {\n    return `<${formatLocaleNumber({ number: 0.00001, locale })}`\n  }\n\n  return formatLocaleNumber({ number: amount, locale, sigFigs, fixedDecimals })\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@synthra-swap/sdk-core'\nimport JSBI from 'jsbi'\n\nconst ONE = new Fraction(1, 1)\n\nexport function calculateSlippageAmount(value: CurrencyAmount<Currency>, slippage: Percent): [JSBI, JSBI] {\n  if (slippage.lessThan(0) || slippage.greaterThan(ONE)) throw new Error('Unexpected slippage')\n  return [value.multiply(ONE.subtract(slippage)).quotient, value.multiply(ONE.add(slippage)).quotient]\n}\n","import { Trans } from '@lingui/macro'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { Currency, CurrencyAmount, Percent, Price, Token } from '@synthra-swap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { ReactNode, useCallback, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport { PairState, useV2Pair } from '../../hooks/useV2Pairs'\nimport { useCurrencyBalances } from '../connection/hooks'\nimport { AppState } from '../reducer'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useAppSelector((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  price?: Price<Currency, Currency>\n  noLiquidity?: boolean\n  liquidityMinted?: CurrencyAmount<Token>\n  poolTokenPercentage?: Percent\n  error?: ReactNode\n} {\n  const { account } = useWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB]\n  )\n\n  // pair\n  const [pairState, pair] = useV2Pair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS ||\n    Boolean(totalSupply && JSBI.equal(totalSupply.quotient, ZERO)) ||\n    Boolean(\n      pairState === PairState.EXISTS &&\n        pair &&\n        JSBI.equal(pair.reserve0.quotient, ZERO) &&\n        JSBI.equal(pair.reserve1.quotient, ZERO)\n    )\n\n  // balances\n  const balances = useCurrencyBalances(\n    account ?? undefined,\n    useMemo(() => [currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]], [currencies])\n  )\n  const currencyBalances: { [field in Field]?: CurrencyAmount<Currency> } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount<Currency> | undefined = tryParseCurrencyAmount(\n    typedValue,\n    currencies[independentField]\n  )\n  const dependentAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseCurrencyAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    } else if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = independentAmount?.wrapped\n      const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency?.isNative\n          ? CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient)\n          : dependentTokenAmount\n      }\n      return undefined\n    } else {\n      return undefined\n    }\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount<Currency> | undefined } = useMemo(() => {\n    return {\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }\n  }, [dependentAmount, independentAmount, independentField])\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount?.greaterThan(0) && currencyBAmount?.greaterThan(0)) {\n        const value = currencyBAmount.divide(currencyAAmount)\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, value.denominator, value.numerator)\n      }\n      return undefined\n    } else {\n      const wrappedCurrencyA = currencyA?.wrapped\n      return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n    }\n  }, [currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [currencyAAmount?.wrapped, currencyBAmount?.wrapped]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      try {\n        return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n      } catch (error) {\n        console.error(error)\n        return undefined\n      }\n    } else {\n      return undefined\n    }\n  }, [parsedAmounts, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.quotient, totalSupply.add(liquidityMinted).quotient)\n    } else {\n      return undefined\n    }\n  }, [liquidityMinted, totalSupply])\n\n  let error: ReactNode | undefined\n  if (!account) {\n    error = <Trans>Connect wallet</Trans>\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? <Trans>Invalid pair</Trans>\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? <Trans>Enter an amount</Trans>\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = <Trans>Insufficient {currencies[Field.CURRENCY_A]?.symbol} balance</Trans>\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = <Trans>Insufficient {currencies[Field.CURRENCY_B]?.symbol} balance</Trans>\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Fraction, Percent } from '@synthra-swap/sdk-core'\nimport { Text } from 'rebass'\nimport { ThemedText } from 'theme/components'\n\nimport { ButtonPrimary } from '../../components/Button'\nimport CurrencyLogo from '../../components/Logo/CurrencyLogo'\nimport { RowBetween, RowFixed } from '../../components/Row'\nimport { Field } from '../../state/mint/actions'\n\nexport function ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  return (\n    <>\n      <RowBetween>\n        <ThemedText.DeprecatedBody>\n          <Trans>{currencies[Field.CURRENCY_A]?.symbol} Deposited</Trans>\n        </ThemedText.DeprecatedBody>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <ThemedText.DeprecatedBody>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</ThemedText.DeprecatedBody>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <ThemedText.DeprecatedBody>\n          <Trans>{currencies[Field.CURRENCY_B]?.symbol} Deposited</Trans>\n        </ThemedText.DeprecatedBody>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <ThemedText.DeprecatedBody>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</ThemedText.DeprecatedBody>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <ThemedText.DeprecatedBody>\n          <Trans>Rates</Trans>\n        </ThemedText.DeprecatedBody>\n        <ThemedText.DeprecatedBody>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </ThemedText.DeprecatedBody>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <ThemedText.DeprecatedBody>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </ThemedText.DeprecatedBody>\n      </RowBetween>\n      <RowBetween>\n        <ThemedText.DeprecatedBody>\n          <Trans>Share of Pool:</Trans>\n        </ThemedText.DeprecatedBody>\n        <ThemedText.DeprecatedBody>\n          <Trans>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Trans>\n        </ThemedText.DeprecatedBody>\n      </RowBetween>\n      <ButtonPrimary style={{ margin: '20px 0 0 0' }} onClick={onAdd}>\n        <Text fontWeight={535} fontSize={20}>\n          {noLiquidity ? <Trans>Create pool & supply</Trans> : <Trans>Confirm supply</Trans>}\n        </Text>\n      </ButtonPrimary>\n    </>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, Percent, Price } from '@synthra-swap/sdk-core'\nimport { Text } from 'rebass'\nimport { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { AutoColumn } from '../../components/Column'\nimport { AutoRow } from '../../components/Row'\nimport { ONE_BIPS } from '../../constants/misc'\nimport { Field } from '../../state/mint/actions'\n\nexport function PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price<Currency, Currency>\n}) {\n  const theme = useTheme()\n\n  let invertedPrice: string | undefined\n  try {\n    invertedPrice = price?.invert()?.toSignificant(6)\n  } catch (error) {\n    invertedPrice = undefined\n  }\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <ThemedText.DeprecatedBlack data-testid=\"currency-b-price\">\n            {price?.toSignificant(6) ?? '-'}\n          </ThemedText.DeprecatedBlack>\n          <Text fontWeight={535} fontSize={14} color={theme.neutral2} pt={1}>\n            <Trans>\n              {currencies[Field.CURRENCY_B]?.symbol} per {currencies[Field.CURRENCY_A]?.symbol}\n            </Trans>\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <ThemedText.DeprecatedBlack data-testid=\"currency-a-price\">{invertedPrice ?? '-'}</ThemedText.DeprecatedBlack>\n          <Text fontWeight={535} fontSize={14} color={theme.neutral2} pt={1}>\n            <Trans>\n              {currencies[Field.CURRENCY_A]?.symbol} per {currencies[Field.CURRENCY_B]?.symbol}\n            </Trans>\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <ThemedText.DeprecatedBlack>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </ThemedText.DeprecatedBlack>\n          <Text fontWeight={535} fontSize={14} color={theme.neutral2} pt={1}>\n            <Trans>Share of pool</Trans>\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Percent } from '@synthra-swap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToggleAccountDrawer } from 'components/AccountDrawer'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink'\nimport { V2Unsupported } from 'components/V2Unsupported'\nimport { useNetworkSupportsV2 } from 'hooks/useNetworkSupportsV2'\nimport { useCallback, useState } from 'react'\nimport { Plus } from 'react-feather'\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport { BlueCard, LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { AutoRow, RowBetween, RowFlat } from '../../components/Row'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport { ZERO_PERCENT } from '../../constants/misc'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { useV2RouterContract } from '../../hooks/useContract'\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { PairState } from '../../hooks/useV2Pairs'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { TransactionInfo, TransactionType } from '../../state/transactions/types'\nimport { useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { calculateSlippageAmount } from '../../utils/calculateSlippageAmount'\nimport { currencyId } from '../../utils/currencyId'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport AppBody from '../AppBody'\nimport { Dots, Wrapper } from '../Pool/styled'\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom'\nimport { PoolPriceBar } from './PoolPriceBar'\n\nconst DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE = new Percent(50, 10_000)\n\nconst AddLiquidityHeaderContainer = styled(AutoColumn)`\n  gap: 20px;\n  margin-bottom: 16px;\n`\n\nexport default function AddLiquidity() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA?: string; currencyIdB?: string }>()\n  const navigate = useNavigate()\n  const { account, chainId, provider } = useWeb3React()\n\n  const theme = useTheme()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const wrappedNativeCurrency = chainId ? WRAPPED_NATIVE_CURRENCY[chainId] : undefined\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      wrappedNativeCurrency &&\n      ((currencyA && currencyA.equals(wrappedNativeCurrency)) || (currencyB && currencyB.equals(wrappedNativeCurrency)))\n  )\n\n  const toggleWalletDrawer = useToggleAccountDrawer() // toggle wallet when disconnected\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE) // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {}\n  )\n\n  const router = useV2RouterContract()\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], router?.address)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], router?.address)\n\n  const addTransaction = useTransactionAdder()\n  const networkSupportsV2 = useNetworkSupportsV2()\n\n  async function onAdd() {\n    if (!chainId || !provider || !account || !router || !networkSupportsV2) return\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0],\n    }\n\n    let estimate,\n      method: (...args: any) => Promise<TransactionResponse>,\n      args: Array<string | string[] | number>,\n      value: BigNumber | null\n    if (currencyA.isNative || currencyB.isNative) {\n      const tokenBIsETH = currencyB.isNative\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        (tokenBIsETH ? currencyA : currencyB)?.wrapped?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).quotient.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).quotient.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        currencyA?.wrapped?.address ?? '',\n        currencyB?.wrapped?.address ?? '',\n        parsedAmountA.quotient.toString(),\n        parsedAmountB.quotient.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          const transactionInfo: TransactionInfo = {\n            type: TransactionType.ADD_LIQUIDITY_V2_POOL,\n            baseCurrencyId: currencyId(currencyA),\n            expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient.toString() ?? '0',\n            quoteCurrencyId: currencyId(currencyB),\n            expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient.toString() ?? '0',\n          }\n\n          addTransaction(response, transactionInfo)\n\n          setTxHash(response.hash)\n        })\n      )\n      .catch((error) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (error?.code !== 4001) {\n          console.error(error)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return (\n      <AddLiquidityHeaderContainer>\n        {noLiquidity ? (\n          <LightCard mt=\"20px\" $borderRadius=\"20px\">\n            <AutoRow justify=\"space-between\">\n              <Text fontSize=\"24px\" fontWeight={535} lineHeight=\"42px\" marginRight={10}>\n                {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol}\n              </Text>\n              <DoubleCurrencyLogo\n                currency0={currencies[Field.CURRENCY_A]}\n                currency1={currencies[Field.CURRENCY_B]}\n                size={30}\n              />\n            </AutoRow>\n          </LightCard>\n        ) : (\n          <>\n            <RowFlat style={{ marginTop: '20px' }}>\n              <Text fontSize=\"48px\" fontWeight={535} lineHeight=\"42px\" marginRight={10}>\n                {liquidityMinted?.toSignificant(6)}\n              </Text>\n              <DoubleCurrencyLogo\n                currency0={currencies[Field.CURRENCY_A]}\n                currency1={currencies[Field.CURRENCY_B]}\n                size={30}\n              />\n            </RowFlat>\n            <Row>\n              <Text fontSize=\"24px\">\n                {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol + ' Pool Tokens'}\n              </Text>\n            </Row>\n            <ThemedText.DeprecatedItalic fontSize={12} textAlign=\"left\" padding=\"8px 0 0 0 \">\n              <Trans>\n                Output is estimated. If the price changes by more than {allowedSlippage.toSignificant(4)}% your\n                transaction will revert.\n              </Trans>\n            </ThemedText.DeprecatedItalic>\n          </>\n        )}\n      </AddLiquidityHeaderContainer>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = (\n    <Trans>\n      Supplying {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} {currencies[Field.CURRENCY_A]?.symbol} and{' '}\n      {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} {currencies[Field.CURRENCY_B]?.symbol}\n    </Trans>\n  )\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA)\n      if (newCurrencyIdA === currencyIdB) {\n        navigate(`/add/v2/${currencyIdB}/${currencyIdA}`)\n      } else {\n        navigate(`/add/v2/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, navigate, currencyIdA]\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          navigate(`/add/v2/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          navigate(`/add/v2/${newCurrencyIdB}`)\n        }\n      } else {\n        navigate(`/add/v2/${currencyIdA ? currencyIdA : 'ETH'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, navigate, currencyIdB]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const { pathname } = useLocation()\n  const isCreate = pathname.includes('/create')\n\n  const addIsUnsupported = useIsSwapUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  if (!networkSupportsV2) return <V2Unsupported />\n\n  return (\n    <>\n      <AppBody>\n        <AddRemoveTabs creating={isCreate} adding={true} autoSlippage={DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE} />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash}\n            reviewContent={() => (\n              <ConfirmationModalContent\n                title={noLiquidity ? <Trans>You are creating a pool</Trans> : <Trans>You will receive</Trans>}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n            currencyToAdd={pair?.liquidityToken}\n          />\n          <AutoColumn gap=\"20px\">\n            {noLiquidity ||\n              (isCreate ? (\n                <ColumnCenter>\n                  <BlueCard>\n                    <AutoColumn gap=\"10px\">\n                      <ThemedText.DeprecatedLink fontWeight={535} color=\"accent1\">\n                        <Trans>You are the first liquidity provider.</Trans>\n                      </ThemedText.DeprecatedLink>\n                      <ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\">\n                        <Trans>The ratio of tokens you add will set the price of this pool.</Trans>\n                      </ThemedText.DeprecatedLink>\n                      <ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\">\n                        <Trans>Once you are happy with the rate click supply to review.</Trans>\n                      </ThemedText.DeprecatedLink>\n                    </AutoColumn>\n                  </BlueCard>\n                </ColumnCenter>\n              ) : (\n                <ColumnCenter>\n                  <BlueCard>\n                    <AutoColumn gap=\"10px\">\n                      <ThemedText.DeprecatedLink fontWeight={485} color=\"accent1\">\n                        <b>\n                          <Trans>Tip:</Trans>\n                        </b>{' '}\n                        <Trans>\n                          When you add liquidity, you will receive pool tokens representing your position. These tokens\n                          automatically earn fees proportional to your share of the pool, and can be redeemed at any\n                          time.\n                        </Trans>\n                      </ThemedText.DeprecatedLink>\n                    </AutoColumn>\n                  </BlueCard>\n                </ColumnCenter>\n              ))}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A] ?? null}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <Plus size=\"16\" color={theme.neutral2} />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B] ?? null}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" $borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <ThemedText.DeprecatedSubHeader fontWeight={535} fontSize={14}>\n                      {noLiquidity ? (\n                        <Trans>Initial prices and pool share</Trans>\n                      ) : (\n                        <Trans>Prices and pool share</Trans>\n                      )}\n                    </ThemedText.DeprecatedSubHeader>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" $borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <ButtonPrimary disabled={true}>\n                <ThemedText.DeprecatedMain mb=\"4px\">\n                  <Trans>Unsupported asset</Trans>\n                </ThemedText.DeprecatedMain>\n              </ButtonPrimary>\n            ) : !account ? (\n              <ButtonLight onClick={toggleWalletDrawer}>\n                <Trans>Connect wallet</Trans>\n              </ButtonLight>\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>\n                              <Trans>Approving {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                            </Dots>\n                          ) : (\n                            <Trans>Approve {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                          )}\n                        </ButtonPrimary>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>\n                              <Trans>Approving {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                            </Dots>\n                          ) : (\n                            <Trans>Approve {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                          )}\n                        </ButtonPrimary>\n                      )}\n                    </RowBetween>\n                  )}\n                <ButtonError\n                  onClick={() => {\n                    setShowConfirm(true)\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                  error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                >\n                  <Text fontSize={20} fontWeight={535}>\n                    {error ?? <Trans>Supply</Trans>}\n                  </Text>\n                </ButtonError>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n      <SwitchLocaleLink />\n\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter\n          show={addIsUnsupported}\n          currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]}\n        />\n      )}\n    </>\n  )\n}\n","import { Navigate, useParams } from 'react-router-dom'\n\nimport AddLiquidityV2 from './index'\n\nexport default function RedirectDuplicateTokenIdsV2() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n\n  if (currencyIdA && currencyIdB && currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Navigate to={`/add/v2/${currencyIdA}`} replace />\n  }\n\n  return <AddLiquidityV2 />\n}\n"],"names":["Wrapper","styled","div","ClickableText","Text","_ref","theme","accent1","MaxButton","button","_ref2","accent2","_ref3","_ref4","deprecated_mediaWidth","deprecated_upToSmall","_ref5","_ref6","_ref7","Dots","span","LoadingRows","BaseLoadingRows","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Plus","forwardRef","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","propTypes","displayName","BodyWrapper","main","$margin","$maxWidth","surface1","surface3","Z_INDEX","default","AppBody","props","_jsx","ApprovalState","useApproval","amountToApprove","spender","useIsPendingApproval","_amountToApprove$curr2","chainId","useWeb3React","token","currency","isToken","undefined","approvalState","_amountToApprove$curr","account","tokenAllowance","useTokenAllowance","pendingApproval","useMemo","isNative","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useApprovalStateForSpender","tokenContract","useTokenContract","address","approve","useCallback","async","logFailure","error","console","warn","symbol","useExact","estimatedGas","estimateGas","MaxUint256","catch","quotient","toString","gasLimit","calculateGasMargin","then","response","tokenAddress","spenderAddress","amount","useGetAndTrackApproval","getApproval","addTransaction","useTransactionAdder","pending","type","TransactionType","APPROVAL","useApproveCallback","approval","useHasPendingApproval","DetailsFooter","neutral2","surface2","deprecated_zero","show","StyledButtonEmpty","ButtonEmpty","AddressText","ThemedText","DeprecatedBlue","UnsupportedCurrencyFooter","currencies","showDetails","setShowDetails","useState","tokens","map","wrapped","unsupportedTokens","useUnsupportedTokens","_jsxs","children","Modal","isOpen","onDismiss","Card","padding","AutoColumn","gap","RowBetween","DeprecatedMediumHeader","Trans","id","CloseIcon","onClick","_token$address","includes","OutlineCard","AutoRow","align","CurrencyLogo","DeprecatedBody","fontWeight","ExternalLink","href","getExplorerLink","ExplorerDataType","ADDRESS","concat","unwrappedToken","_WRAPPED_NATIVE_CURRE","formattedChainId","asSupportedChain","WRAPPED_NATIVE_CURRENCY","equals","nativeOnChain","Tabs","flexRowNoWrap","StyledLink","Link","flex","deprecated_upToMedium","FindPoolTabsText","SubHeaderLarge","StyledArrowLeft","ArrowLeft","neutral1","FindPoolTabs","origin","style","position","to","AddRemoveTitleText","AddRemoveTabs","adding","creating","autoSlippage","positionID","useTheme","dispatch","useAppDispatch","poolLink","useLocation","pathname","resetMintState","resetMintV3State","textAlign","Box","marginRight","SettingsTab","InputPanel","flexColumnNoWrap","hideInput","Container","_ref8","disabled","CurrencySelect","ButtonGray","_ref9","selected","_ref10","_ref11","deprecated_shallowShadow","_ref12","white","_ref13","_ref14","_ref15","_ref16","darken","_ref17","visible","_ref18","pointerEvents","InputRow","_ref19","LabelRow","_ref20","_ref21","FiatRow","Aligner","StyledDropDown","DropDown","_ref22","StyledTokenName","_ref23","active","StyledBalanceMax","_ref24","_ref25","_ref26","_ref27","_ref28","StyledNumericalInput","NumericalInput","loadingOpacityMixin","CurrencyInputPanel","_ref29","value","onUserInput","onMax","showMaxButton","onCurrencySelect","otherCurrency","showCommonBases","showCurrencyAmount","disableNonToken","renderBalance","fiatValue","hideBalance","pair","locked","loading","modalOpen","setModalOpen","selectedCurrencyBalance","useCurrencyBalance","handleDismissSearch","chainAllowed","isSupportedChain","_Fragment","borderRadius","className","$loading","RowFixed","DoubleCurrencyLogo","currency0","token0","currency1","token1","margin","Boolean","slice","LoadingOpacityContainer","FiatValue","neutral3","fontSize","display","cursor","values","0","formatCurrencyAmount","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","formatLocaleNumber","localeArg","numberString","number","locale","sigFigs","fixedDecimals","options","SUPPORTED_LOCALES","DEFAULT_LOCALE","minimumFractionDigits","maximumFractionDigits","maximumSignificantDigits","parseFloat","toFixed","baseString","toSignificant","toLocaleString","JSBI","divide","decimalScale","Fraction","ONE","calculateSlippageAmount","slippage","greaterThan","Error","multiply","subtract","add","ZERO","useMintState","useAppSelector","state","mint","ConfirmAddModalBottom","_currencies$Field$CUR","_parsedAmounts$Field$","_currencies$Field$CUR2","_parsedAmounts$Field$2","_currencies$Field$CUR3","_currencies$Field$CUR4","_currencies$Field$CUR5","_currencies$Field$CUR6","noLiquidity","price","parsedAmounts","poolTokenPercentage","onAdd","Field","CURRENCY_A","CURRENCY_B","justifyContent","invert","ButtonPrimary","PoolPriceBar","_price$toSignificant","_invertedPrice","invertedPrice","_price$invert","justify","DeprecatedBlack","pt","1","ONE_BIPS","DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE","Percent","AddLiquidityHeaderContainer","AddLiquidity","_parsedAmounts$depend","_parsedAmounts$depend2","_parsedAmounts$Field$5","_parsedAmounts$Field$6","_currencies$Field$CUR7","_currencies$Field$CUR8","_currencies$Field$CUR9","_currencies$Field$CUR10","_currencies$Field$CUR11","_currencies$Field$CUR12","currencyIdA","currencyIdB","useParams","navigate","useNavigate","provider","currencyA","useCurrency","currencyB","wrappedNativeCurrency","oneCurrencyIsWETH","toggleWalletDrawer","useToggleAccountDrawer","independentField","typedValue","otherTypedValue","dependentField","pairState","currencyBalances","liquidityMinted","_currencyBalances$Fie","_currencyBalances$Fie2","useV2Pair","totalSupply","useTotalSupply","liquidityToken","PairState","NOT_EXISTS","EXISTS","reserve0","reserve1","balances","useCurrencyBalances","independentAmount","tryParseCurrencyAmount","dependentAmount","wrappedIndependentAmount","tokenA","tokenB","dependentCurrency","dependentTokenAmount","priceOf","quote","CurrencyAmount","fromRawAmount","wrappedCurrencyA","currencyAAmount","currencyBAmount","Price","denominator","numerator","tokenAmountA","tokenAmountB","getLiquidityMinted","_error","_error2","INVALID","useDerivedMintInfo","onFieldAInput","onFieldBInput","typeInput","field","useMintActionHandlers","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","useTransactionDeadline","allowedSlippage","useUserSlippageToleranceWithDefault","txHash","setTxHash","formattedAmounts","maxAmounts","reduce","accumulator","maxAmountSpend","atMaxAmounts","_maxAmounts$field","_parsedAmounts$field","equalTo","router","useV2RouterContract","approvalA","approveACallback","approvalB","approveBCallback","networkSupportsV2","useNetworkSupportsV2","parsedAmountA","parsedAmountB","amountsMin","ZERO_PERCENT","estimate","method","args","_wrapped$address","_ref$wrapped","tokenBIsETH","addLiquidityETH","toHexString","BigNumber","from","_currencyA$wrapped$ad","_currencyA$wrapped","_currencyB$wrapped$ad","_currencyB$wrapped","addLiquidity","estimatedGasLimit","_parsedAmounts$Field$3","_parsedAmounts$Field$4","transactionInfo","ADD_LIQUIDITY_V2_POOL","baseCurrencyId","currencyId","expectedAmountBaseRaw","quoteCurrencyId","expectedAmountQuoteRaw","hash","code","modalHeader","LightCard","mt","$borderRadius","lineHeight","RowFlat","marginTop","Row","DeprecatedItalic","modalBottom","pendingText","2","3","handleCurrencyASelect","newCurrencyIdA","handleCurrencyBSelect","newCurrencyIdB","handleDismissConfirmation","isCreate","addIsUnsupported","useIsSwapUnsupported","TransactionConfirmationModal","reviewContent","ConfirmationModalContent","title","topContent","bottomContent","currencyToAdd","ColumnCenter","BlueCard","DeprecatedLink","_maxAmounts$Field$CUR","_maxAmounts$Field$CUR2","toExact","_maxAmounts$Field$CUR3","_maxAmounts$Field$CUR4","DeprecatedSubHeader","DeprecatedMain","mb","ButtonError","ButtonLight","SwitchLocaleLink","minWidth","maxWidth","MinimalPositionCard","showUnwrapped","V2Unsupported","RedirectDuplicateTokenIdsV2","toLowerCase","Navigate","replace","AddLiquidityV2"],"sourceRoot":""}