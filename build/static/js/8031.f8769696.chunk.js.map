{"version":3,"file":"static/js/8031.f8769696.chunk.js","mappings":"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","sources":["components/Badge/RangeBadge.tsx","pages/Pool/styled.tsx","hooks/useV3Positions.ts","components/HoverInlineText/index.tsx","hooks/useIsTickAtLimit.ts","utils/unwrappedToken.ts","components/PositionListItem/index.tsx","hooks/usePools.ts"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { AlertTriangle, Slash } from 'react-feather'\nimport styled, { useTheme } from 'styled-components'\n\nimport { MouseoverTooltip } from '../../components/Tooltip'\n\nconst BadgeWrapper = styled.div`\n  font-size: 14px;\n  display: flex;\n  justify-content: flex-end;\n`\n\nconst BadgeText = styled.div`\n  font-weight: 535;\n  font-size: 12px;\n  line-height: 14px;\n  margin-right: 8px;\n`\n\nconst ActiveDot = styled.span`\n  background-color: ${({ theme }) => theme.success};\n  border-radius: 50%;\n  height: 8px;\n  width: 8px;\n`\n\nconst LabelText = styled.div<{ color: string }>`\n  align-items: center;\n  color: ${({ color }) => color};\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`\n\nexport default function RangeBadge({ removed, inRange }: { removed?: boolean; inRange?: boolean }) {\n  const theme = useTheme()\n  return (\n    <BadgeWrapper>\n      {removed ? (\n        <MouseoverTooltip text={<Trans>Your position has 0 liquidity, and is not earning fees.</Trans>}>\n          <LabelText color={theme.neutral2}>\n            <BadgeText>\n              <Trans>Closed</Trans>\n            </BadgeText>\n            <Slash width={12} height={12} />\n          </LabelText>\n        </MouseoverTooltip>\n      ) : inRange ? (\n        <MouseoverTooltip\n          text={\n            <Trans>\n              The price of this pool is within your selected range. Your position is currently earning fees.\n            </Trans>\n          }\n        >\n          <LabelText color={theme.success}>\n            <BadgeText>\n              <Trans>In range</Trans>\n            </BadgeText>\n            <ActiveDot />\n          </LabelText>\n        </MouseoverTooltip>\n      ) : (\n        <MouseoverTooltip\n          text={\n            <Trans>\n              The price of this pool is outside of your selected range. Your position is not currently earning fees.\n            </Trans>\n          }\n        >\n          <LabelText color={theme.deprecated_accentWarning}>\n            <BadgeText>\n              <Trans>Out of range</Trans>\n            </BadgeText>\n            <AlertTriangle width={12} height={12} />\n          </LabelText>\n        </MouseoverTooltip>\n      )}\n    </BadgeWrapper>\n  )\n}\n","import { LoadingRows as BaseLoadingRows } from 'components/Loader/styled'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 20px;\n`\n\nexport const ClickableText = styled(Text)`\n  :hover {\n    cursor: pointer;\n  }\n  color: ${({ theme }) => theme.accent1};\n`\nexport const MaxButton = styled.button<{ width: string }>`\n  padding: 0.5rem 1rem;\n  background-color: ${({ theme }) => theme.accent2};\n  border: 1px solid ${({ theme }) => theme.accent2};\n  border-radius: 0.5rem;\n  font-size: 1rem;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    padding: 0.25rem 0.5rem;\n  `};\n  font-weight: 535;\n  cursor: pointer;\n  margin: 0.25rem;\n  overflow: hidden;\n  color: ${({ theme }) => theme.accent1};\n  :hover {\n    border: 1px solid ${({ theme }) => theme.accent1};\n  }\n  :focus {\n    border: 1px solid ${({ theme }) => theme.accent1};\n    outline: none;\n  }\n`\n\nexport const Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport const LoadingRows = styled(BaseLoadingRows)`\n  padding-top: 36px;\n  min-width: 75%;\n  max-width: 960px;\n  grid-column-gap: 0.5em;\n  grid-row-gap: 0.8em;\n  grid-template-columns: repeat(3, 1fr);\n  padding: 8px;\n\n  & > div:nth-child(4n + 1) {\n    grid-column: 1 / 3;\n  }\n  & > div:nth-child(4n) {\n    grid-column: 3 / 4;\n    margin-bottom: 2em;\n  }\n`\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { CallStateResult, useSingleCallResult, useSingleContractMultipleData } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\nimport { PositionDetails } from 'types/position'\n\nimport { useV3NFTPositionManagerContract } from './useContract'\n\ninterface UseV3PositionsResults {\n  loading: boolean\n  positions?: PositionDetails[]\n}\n\nfunction useV3PositionsFromTokenIds(tokenIds: BigNumber[] | undefined): UseV3PositionsResults {\n  const positionManager = useV3NFTPositionManagerContract()\n  const inputs = useMemo(() => (tokenIds ? tokenIds.map((tokenId) => [BigNumber.from(tokenId)]) : []), [tokenIds])\n  const results = useSingleContractMultipleData(positionManager, 'positions', inputs)\n\n  const loading = useMemo(() => results.some(({ loading }) => loading), [results])\n  const error = useMemo(() => results.some(({ error }) => error), [results])\n\n  const positions = useMemo(() => {\n    if (!loading && !error && tokenIds) {\n      return results.map((call, i) => {\n        const tokenId = tokenIds[i]\n        const result = call.result as CallStateResult\n        return {\n          tokenId,\n          fee: result.fee,\n          feeGrowthInside0LastX128: result.feeGrowthInside0LastX128,\n          feeGrowthInside1LastX128: result.feeGrowthInside1LastX128,\n          liquidity: result.liquidity,\n          nonce: result.nonce,\n          operator: result.operator,\n          tickLower: result.tickLower,\n          tickUpper: result.tickUpper,\n          token0: result.token0,\n          token1: result.token1,\n          tokensOwed0: result.tokensOwed0,\n          tokensOwed1: result.tokensOwed1,\n        }\n      })\n    }\n    return undefined\n  }, [loading, error, results, tokenIds])\n\n  return {\n    loading,\n    positions: positions?.map((position, i) => ({ ...position, tokenId: inputs[i][0] })),\n  }\n}\n\ninterface UseV3PositionResults {\n  loading: boolean\n  position?: PositionDetails\n}\n\nexport function useV3PositionFromTokenId(tokenId: BigNumber | undefined): UseV3PositionResults {\n  const position = useV3PositionsFromTokenIds(tokenId ? [tokenId] : undefined)\n  return {\n    loading: position.loading,\n    position: position.positions?.[0],\n  }\n}\n\nexport function useV3Positions(account: string | null | undefined): UseV3PositionsResults {\n  const positionManager = useV3NFTPositionManagerContract()\n  console.log('useV3Positions', { account, positionManager })\n\n  const { loading: balanceLoading, result: balanceResult } = useSingleCallResult(positionManager, 'balanceOf', [\n    account ?? undefined,\n  ])\n\n  // we don't expect any account balance to ever exceed the bounds of max safe int\n  const accountBalance: number | undefined = balanceResult?.[0]?.toNumber()\n  console.log('useV3Positions', { account, accountBalance, balanceLoading })\n\n  const tokenIdsArgs = useMemo(() => {\n    if (accountBalance && account) {\n      const tokenRequests = []\n      for (let i = 0; i < accountBalance; i++) {\n        tokenRequests.push([account, i])\n      }\n      return tokenRequests\n    }\n    return []\n  }, [account, accountBalance])\n\n  const tokenIdResults = useSingleContractMultipleData(positionManager, 'tokenOfOwnerByIndex', tokenIdsArgs)\n  const someTokenIdsLoading = useMemo(() => tokenIdResults.some(({ loading }) => loading), [tokenIdResults])\n\n  const tokenIds = useMemo(() => {\n    if (account) {\n      return tokenIdResults\n        .map(({ result }) => result)\n        .filter((result): result is CallStateResult => !!result)\n        .map((result) => BigNumber.from(result[0]))\n    }\n    return []\n  }, [account, tokenIdResults])\n\n  console.log('useV3Positions', { account, tokenIds, someTokenIdsLoading })\n\n  const { positions, loading: positionsLoading } = useV3PositionsFromTokenIds(tokenIds)\n\n  return {\n    loading: someTokenIdsLoading || balanceLoading || positionsLoading,\n    positions,\n  }\n}\n","import Tooltip from 'components/Tooltip'\nimport { useState } from 'react'\nimport styled from 'styled-components'\n\nconst TextWrapper = styled.span<{\n  margin: boolean\n  link?: boolean\n  fontSize?: string\n  adjustSize?: boolean\n  textColor?: string\n}>`\n  margin-left: ${({ margin }) => margin && '4px'};\n  font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\n\n  @media screen and (max-width: 600px) {\n    font-size: ${({ adjustSize }) => adjustSize && '12px'};\n  }\n`\n\nconst HoverInlineText = ({\n  text,\n  maxCharacters = 20,\n  margin = false,\n  adjustSize = false,\n  fontSize,\n  textColor,\n  link,\n  ...rest\n}: {\n  text?: string\n  maxCharacters?: number\n  margin?: boolean\n  adjustSize?: boolean\n  fontSize?: string\n  textColor?: string\n  link?: boolean\n}) => {\n  const [showHover, setShowHover] = useState(false)\n\n  if (!text) {\n    return <span />\n  }\n\n  if (text.length > maxCharacters) {\n    return (\n      <Tooltip text={text} show={showHover}>\n        <TextWrapper\n          onMouseEnter={() => setShowHover(true)}\n          onMouseLeave={() => setShowHover(false)}\n          margin={margin}\n          adjustSize={adjustSize}\n          textColor={textColor}\n          link={link}\n          fontSize={fontSize}\n          {...rest}\n        >\n          {' ' + text.slice(0, maxCharacters - 1) + '...'}\n        </TextWrapper>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <TextWrapper\n      margin={margin}\n      adjustSize={adjustSize}\n      link={link}\n      fontSize={fontSize}\n      textColor={textColor}\n      {...rest}\n    >\n      {text}\n    </TextWrapper>\n  )\n}\n\nexport default HoverInlineText\n","import { FeeAmount, nearestUsableTick, TICK_SPACINGS, TickMath } from '@uniswap/v3-sdk'\nimport { useMemo } from 'react'\nimport { Bound } from 'state/mint/v3/actions'\n\nexport default function useIsTickAtLimit(\n  feeAmount: FeeAmount | undefined,\n  tickLower: number | undefined,\n  tickUpper: number | undefined\n) {\n  return useMemo(\n    () => ({\n      [Bound.LOWER]:\n        feeAmount && tickLower\n          ? tickLower === nearestUsableTick(TickMath.MIN_TICK, TICK_SPACINGS[feeAmount as FeeAmount])\n          : undefined,\n      [Bound.UPPER]:\n        feeAmount && tickUpper\n          ? tickUpper === nearestUsableTick(TickMath.MAX_TICK, TICK_SPACINGS[feeAmount as FeeAmount])\n          : undefined,\n    }),\n    [feeAmount, tickLower, tickUpper]\n  )\n}\n","import { Currency } from '@synthra-swap/sdk-core'\nimport { asSupportedChain } from 'constants/chains'\n\nimport { nativeOnChain, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens'\n\nexport function unwrappedToken(currency: Currency): Currency {\n  if (currency.isNative) return currency\n  const formattedChainId = asSupportedChain(currency.chainId)\n  if (formattedChainId && WRAPPED_NATIVE_CURRENCY[formattedChainId]?.equals(currency))\n    return nativeOnChain(currency.chainId)\n  return currency\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Trans } from '@lingui/macro'\nimport { Position } from '@uniswap/v3-sdk'\nimport { Percent, Price, Token } from '@synthra-swap/sdk-core'\nimport RangeBadge from 'components/Badge/RangeBadge'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport HoverInlineText from 'components/HoverInlineText'\nimport Loader from 'components/Icons/LoadingSpinner'\nimport { RowBetween } from 'components/Row'\nimport { useToken } from 'hooks/Tokens'\nimport useIsTickAtLimit from 'hooks/useIsTickAtLimit'\nimport { usePool } from 'hooks/usePools'\nimport { useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Bound } from 'state/mint/v3/actions'\nimport styled from 'styled-components'\nimport { MEDIA_WIDTHS } from 'theme'\nimport { HideSmall, SmallOnly, ThemedText } from 'theme/components'\nimport { useFormatter } from 'utils/formatNumbers'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nimport { DAI, USDC_MAINNET, USDT, WBTC, WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\n\nconst LinkRow = styled(Link)`\n  align-items: center;\n  display: flex;\n  cursor: pointer;\n  user-select: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  color: ${({ theme }) => theme.neutral1};\n  padding: 16px;\n  text-decoration: none;\n  font-weight: 535;\n\n  & > div:not(:first-child) {\n    text-align: center;\n  }\n  :hover {\n    background-color: ${({ theme }) => theme.deprecated_hoverDefault};\n  }\n\n  @media screen and (min-width: ${MEDIA_WIDTHS.deprecated_upToSmall}px) {\n    /* flex-direction: row; */\n  }\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    flex-direction: column;\n    row-gap: 8px;\n  `};\n`\n\nconst DataLineItem = styled.div`\n  font-size: 14px;\n`\n\nconst RangeLineItem = styled(DataLineItem)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 4px;\n  width: 100%;\n`\n\nconst DoubleArrow = styled.span`\n  font-size: 12px;\n  margin: 0 2px;\n  color: ${({ theme }) => theme.neutral1};\n`\n\nconst RangeText = styled(ThemedText.BodySmall)`\n  font-size: 14px !important;\n  word-break: break-word;\n  padding: 0.25rem 0.25rem;\n  border-radius: 8px;\n`\n\nconst FeeTierText = styled(ThemedText.UtilityBadge)`\n  font-size: 16px !important;\n  margin-left: 8px !important;\n  color: ${({ theme }) => theme.neutral3};\n`\nconst ExtentsText = styled(ThemedText.BodySmall)`\n  color: ${({ theme }) => theme.neutral2};\n  display: inline-block;\n  line-height: 16px;\n  margin-right: 4px !important;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    display: none;\n  `};\n`\n\nconst PrimaryPositionIdData = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  > * {\n    margin-right: 8px;\n  }\n`\n\ninterface PositionListItemProps {\n  token0: string\n  token1: string\n  tokenId: BigNumber\n  fee: number\n  liquidity: BigNumber\n  tickLower: number\n  tickUpper: number\n}\n\nexport function getPriceOrderingFromPositionForUI(position?: Position): {\n  priceLower?: Price<Token, Token>\n  priceUpper?: Price<Token, Token>\n  quote?: Token\n  base?: Token\n} {\n  if (!position) {\n    return {}\n  }\n\n  const token0 = position.amount0.currency\n  const token1 = position.amount1.currency\n\n  // if token0 is a dollar-stable asset, set it as the quote token\n  const stables = [DAI, USDC_MAINNET, USDT]\n  if (stables.some((stable) => stable.equals(token0))) {\n    return {\n      priceLower: position.token0PriceUpper.invert(),\n      priceUpper: position.token0PriceLower.invert(),\n      quote: token0,\n      base: token1,\n    }\n  }\n\n  // if token1 is an ETH-/BTC-stable asset, set it as the base token\n  const bases = [...Object.values(WRAPPED_NATIVE_CURRENCY), WBTC]\n  if (bases.some((base) => base && base.equals(token1))) {\n    return {\n      priceLower: position.token0PriceUpper.invert(),\n      priceUpper: position.token0PriceLower.invert(),\n      quote: token0,\n      base: token1,\n    }\n  }\n\n  // if both prices are below 1, invert\n  if (position.token0PriceUpper.lessThan(1)) {\n    return {\n      priceLower: position.token0PriceUpper.invert(),\n      priceUpper: position.token0PriceLower.invert(),\n      quote: token0,\n      base: token1,\n    }\n  }\n\n  // otherwise, just return the default\n  return {\n    priceLower: position.token0PriceLower,\n    priceUpper: position.token0PriceUpper,\n    quote: token1,\n    base: token0,\n  }\n}\n\nexport default function PositionListItem({\n  token0: token0Address,\n  token1: token1Address,\n  tokenId,\n  fee: feeAmount,\n  liquidity,\n  tickLower,\n  tickUpper,\n}: PositionListItemProps) {\n  const { formatTickPrice } = useFormatter()\n\n  const token0 = useToken(token0Address)\n  const token1 = useToken(token1Address)\n\n  console.log('PositionListItem', {\n  token0Address,\n  token1Address,\n  token0,\n  token1,\n  tokenId: tokenId.toString(),\n  feeAmount,\n  liquidity: liquidity.toString(),\n  tickLower,\n  tickUpper,\n  })\n\n  const currency0 = token0 ? unwrappedToken(token0) : undefined\n  const currency1 = token1 ? unwrappedToken(token1) : undefined\n\n  console.log('PositionListItem currencies', {\n  currency0: currency0?.symbol,\n  currency1: currency1?.symbol,\n  })\n\n  // construct Position from details returned\n  const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined, feeAmount)\n  console.log('PositionListItem pool', pool)\n\n  const position = useMemo(() => {\n    if (pool) {\n      return new Position({ pool, liquidity: liquidity.toString(), tickLower, tickUpper })\n    }\n    return undefined\n  }, [liquidity, pool, tickLower, tickUpper])\n  console.log('PositionListItem position', position)\n\n  const tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper)\n  console.log('PositionListItem tickAtLimit', tickAtLimit)\n\n  // prices\n  const { priceLower, priceUpper, quote, base } = getPriceOrderingFromPositionForUI(position)\n  console.log('PositionListItem prices', {\n    priceLower: priceLower?.toSignificant(6),\n    priceUpper: priceUpper?.toSignificant(6),\n    quote: quote?.symbol,\n    base: base?.symbol,\n  })\n\n  const currencyQuote = quote && unwrappedToken(quote)\n  const currencyBase = base && unwrappedToken(base)\n  console.log('PositionListItem currencyQuote', currencyQuote?.symbol)\n  console.log('PositionListItem currencyBase', currencyBase?.symbol)\n\n  // check if price is within range\n  const outOfRange: boolean = pool ? pool.tickCurrent < tickLower || pool.tickCurrent >= tickUpper : false\n  console.log('PositionListItem outOfRange', outOfRange)\n\n  const positionSummaryLink = '/pools/' + tokenId\n\n  const removed = liquidity?.eq(0)\n\n  return (\n    <LinkRow to={positionSummaryLink}>\n      <RowBetween>\n        <PrimaryPositionIdData>\n          <DoubleCurrencyLogo currency0={currencyBase} currency1={currencyQuote} size={18} margin />\n          <ThemedText.SubHeader>\n            &nbsp;{currencyQuote?.symbol}&nbsp;/&nbsp;{currencyBase?.symbol}\n          </ThemedText.SubHeader>\n\n          <FeeTierText>\n            <Trans>{new Percent(feeAmount, 1_000_000).toSignificant()}%</Trans>\n          </FeeTierText>\n        </PrimaryPositionIdData>\n        <RangeBadge removed={removed} inRange={!outOfRange} />\n      </RowBetween>\n\n      {priceLower && priceUpper ? (\n        <RangeLineItem>\n          <RangeText>\n            <ExtentsText>\n              <Trans>Min: </Trans>\n            </ExtentsText>\n            <Trans>\n              <span>\n                {formatTickPrice({\n                  price: priceLower,\n                  atLimit: tickAtLimit,\n                  direction: Bound.LOWER,\n                })}{' '}\n              </span>\n              <HoverInlineText text={currencyQuote?.symbol} /> per <HoverInlineText text={currencyBase?.symbol ?? ''} />\n            </Trans>\n          </RangeText>{' '}\n          <HideSmall>\n            <DoubleArrow>↔</DoubleArrow>{' '}\n          </HideSmall>\n          <SmallOnly>\n            <DoubleArrow>↔</DoubleArrow>{' '}\n          </SmallOnly>\n          <RangeText>\n            <ExtentsText>\n              <Trans>Max:</Trans>\n            </ExtentsText>\n            <Trans>\n              <span>\n                {formatTickPrice({\n                  price: priceUpper,\n                  atLimit: tickAtLimit,\n                  direction: Bound.UPPER,\n                })}{' '}\n              </span>\n              <HoverInlineText text={currencyQuote?.symbol} /> per{' '}\n              <HoverInlineText maxCharacters={10} text={currencyBase?.symbol} />\n            </Trans>\n          </RangeText>\n        </RangeLineItem>\n      ) : (\n        <Loader />\n      )}\n    </LinkRow>\n  )\n}\n","import { Interface } from '@ethersproject/abi'\nimport IUniswapV3PoolStateJSON from '@uniswap/v3-core/artifacts/contracts/interfaces/pool/IUniswapV3PoolState.sol/IUniswapV3PoolState.json'\nimport { computePoolAddress } from '@uniswap/v3-sdk'\nimport { FeeAmount, Pool } from '@uniswap/v3-sdk'\nimport { BigintIsh, Currency, Token, V3_CORE_FACTORY_ADDRESSES } from '@synthra-swap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport { useMultipleContractSingleData } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { IUniswapV3PoolStateInterface } from '../types/v3/IUniswapV3PoolState'\n\nconst POOL_STATE_INTERFACE = new Interface(IUniswapV3PoolStateJSON.abi) as IUniswapV3PoolStateInterface\n\n// Classes are expensive to instantiate, so this caches the recently instantiated pools.\n// This avoids re-instantiating pools as the other pools in the same request are loaded.\nclass PoolCache {\n  // Evict after 128 entries. Empirically, a swap uses 64 entries.\n  private static MAX_ENTRIES = 128\n\n  // These are FIFOs, using unshift/pop. This makes recent entries faster to find.\n  private static pools: Pool[] = []\n  private static addresses: { key: string; address: string }[] = []\n\n  static getPoolAddress(factoryAddress: string, tokenA: Token, tokenB: Token, fee: FeeAmount): string {\n    if (this.addresses.length > this.MAX_ENTRIES) {\n      this.addresses = this.addresses.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const { address: addressA } = tokenA\n    const { address: addressB } = tokenB\n    const key = `${factoryAddress}:${addressA}:${addressB}:${fee.toString()}`\n    const found = this.addresses.find((address) => address.key === key)\n    if (found) return found.address\n\n    const address = {\n      key,\n      address: computePoolAddress({\n        factoryAddress,\n        tokenA,\n        tokenB,\n        fee,\n        initCodeHashManualOverride: \"0x499aba1e2f07d97749c4eabd822eca2efa521b1d6e34a67285e4a3cb773905dd\",\n      }),\n    }\n    this.addresses.unshift(address)\n    return address.address\n  }\n\n  static getPool(\n    tokenA: Token,\n    tokenB: Token,\n    fee: FeeAmount,\n    sqrtPriceX96: BigintIsh,\n    liquidity: BigintIsh,\n    tick: number\n  ): Pool {\n    if (this.pools.length > this.MAX_ENTRIES) {\n      this.pools = this.pools.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const found = this.pools.find(\n      (pool) =>\n        pool.token0 === tokenA &&\n        pool.token1 === tokenB &&\n        pool.fee === fee &&\n        JSBI.EQ(pool.sqrtRatioX96, sqrtPriceX96) &&\n        JSBI.EQ(pool.liquidity, liquidity) &&\n        pool.tickCurrent === tick\n    )\n    if (found) return found\n\n    const pool = new Pool(tokenA, tokenB, fee, sqrtPriceX96, liquidity, tick)\n    this.pools.unshift(pool)\n    return pool\n  }\n}\n\nexport enum PoolState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nfunction usePools(\n  poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][]\n): [PoolState, Pool | null][] {\n  const { chainId } = useWeb3React()\n  console.log(\"CHAIN ID@@@@@@@@@@@@\", chainId)\n\n  const poolTokens: ([Token, Token, FeeAmount] | undefined)[] = useMemo(() => {\n    if (!chainId) return new Array(poolKeys.length)\n\n    return poolKeys.map(([currencyA, currencyB, feeAmount]) => {\n      if (currencyA && currencyB && feeAmount) {\n        const tokenA = currencyA.wrapped\n        const tokenB = currencyB.wrapped\n        if (tokenA.equals(tokenB)) return undefined\n\n        return tokenA.sortsBefore(tokenB) ? [tokenA, tokenB, feeAmount] : [tokenB, tokenA, feeAmount]\n      }\n      return undefined\n    })\n  }, [chainId, poolKeys])\n  console.log(\"poolTokens@@@@@@@@@@@@\", poolTokens)\n\n  const poolAddresses: (string | undefined)[] = useMemo(() => {\n    console.log(\"CIAO CIAO ENTRATO\")\n    const v3CoreFactoryAddress = chainId && V3_CORE_FACTORY_ADDRESSES[chainId]\n    console.log(\"V3_CORE_FACTORY_ADDRESSES@@@@@@@@@@@@\", v3CoreFactoryAddress)\n    if (!v3CoreFactoryAddress) return new Array(poolTokens.length)\n\n    return poolTokens.map((value) => value && PoolCache.getPoolAddress(v3CoreFactoryAddress, ...value))\n  }, [chainId, poolTokens])\n  console.log(\"poolAddresses@@@@@@@@@@@@\", poolAddresses)\n\n  const slot0s = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'slot0')\n  const liquidities = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'liquidity')\n\n  return useMemo(() => {\n    return poolKeys.map((_key, index) => {\n      const tokens = poolTokens[index]\n      if (!tokens) return [PoolState.INVALID, null]\n      const [token0, token1, fee] = tokens\n\n      if (!slot0s[index]) return [PoolState.INVALID, null]\n      const { result: slot0, loading: slot0Loading, valid: slot0Valid } = slot0s[index]\n\n      if (!liquidities[index]) return [PoolState.INVALID, null]\n      const { result: liquidity, loading: liquidityLoading, valid: liquidityValid } = liquidities[index]\n\n      if (!tokens || !slot0Valid || !liquidityValid) return [PoolState.INVALID, null]\n      if (slot0Loading || liquidityLoading) return [PoolState.LOADING, null]\n      if (!slot0 || !liquidity) return [PoolState.NOT_EXISTS, null]\n      if (!slot0.sqrtPriceX96 || slot0.sqrtPriceX96.eq(0)) return [PoolState.NOT_EXISTS, null]\n\n      try {\n        const pool = PoolCache.getPool(token0, token1, fee, slot0.sqrtPriceX96, liquidity[0], slot0.tick)\n        return [PoolState.EXISTS, pool]\n      } catch (error) {\n        console.error('Error when constructing the pool', error)\n        return [PoolState.NOT_EXISTS, null]\n      }\n    })\n  }, [liquidities, poolKeys, slot0s, poolTokens])\n}\n\nexport function usePool(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined\n): [PoolState, Pool | null] {\n  const poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][] = useMemo(\n    () => [[currencyA, currencyB, feeAmount]],\n    [currencyA, currencyB, feeAmount]\n  )\n\n  console.log(\"kiacic@@@@@@@@@@@@\", poolKeys)\n\n \n  return usePools(poolKeys)[0]\n}\n"],"names":["BadgeWrapper","styled","div","BadgeText","ActiveDot","span","_ref","theme","success","LabelText","_ref2","color","RangeBadge","_ref3","removed","inRange","useTheme","_jsx","children","MouseoverTooltip","text","Trans","id","_jsxs","neutral2","Slash","width","height","deprecated_accentWarning","AlertTriangle","Wrapper","ClickableText","Text","accent1","MaxButton","button","accent2","_ref4","deprecated_mediaWidth","deprecated_upToSmall","_ref5","_ref6","_ref7","Dots","LoadingRows","BaseLoadingRows","useV3PositionsFromTokenIds","tokenIds","positionManager","useV3NFTPositionManagerContract","inputs","useMemo","map","tokenId","BigNumber","from","results","useSingleContractMultipleData","loading","some","error","positions","call","i","result","fee","feeGrowthInside0LastX128","feeGrowthInside1LastX128","liquidity","nonce","operator","tickLower","tickUpper","token0","token1","tokensOwed0","tokensOwed1","position","useV3PositionFromTokenId","_position$positions","undefined","useV3Positions","account","_balanceResult$","console","log","balanceLoading","balanceResult","useSingleCallResult","accountBalance","toNumber","tokenIdsArgs","tokenRequests","push","tokenIdResults","someTokenIdsLoading","filter","positionsLoading","TextWrapper","margin","fontSize","adjustSize","maxCharacters","textColor","link","rest","showHover","setShowHover","useState","length","Tooltip","show","onMouseEnter","onMouseLeave","slice","useIsTickAtLimit","feeAmount","Bound","LOWER","nearestUsableTick","TickMath","MIN_TICK","TICK_SPACINGS","UPPER","MAX_TICK","unwrappedToken","currency","_WRAPPED_NATIVE_CURRE","isNative","formattedChainId","asSupportedChain","chainId","WRAPPED_NATIVE_CURRENCY","equals","nativeOnChain","LinkRow","Link","neutral1","deprecated_hoverDefault","MEDIA_WIDTHS","DataLineItem","RangeLineItem","DoubleArrow","RangeText","ThemedText","BodySmall","FeeTierText","UtilityBadge","neutral3","ExtentsText","PrimaryPositionIdData","getPriceOrderingFromPositionForUI","amount0","amount1","DAI","USDC_MAINNET","USDT","stable","priceLower","token0PriceUpper","invert","priceUpper","token0PriceLower","quote","base","Object","values","WBTC","lessThan","PositionListItem","_ref8","_currencyBase$symbol","token0Address","token1Address","formatTickPrice","useFormatter","useToken","toString","currency0","currency1","symbol","pool","usePool","Position","tickAtLimit","toSignificant","currencyQuote","currencyBase","outOfRange","tickCurrent","positionSummaryLink","eq","to","RowBetween","DoubleCurrencyLogo","size","SubHeader","0","Percent","price","atLimit","direction","components","1","HoverInlineText","2","HideSmall","SmallOnly","Loader","POOL_STATE_INTERFACE","Interface","IUniswapV3PoolStateJSON","PoolCache","getPoolAddress","factoryAddress","tokenA","tokenB","this","addresses","MAX_ENTRIES","address","addressA","addressB","key","found","find","computePoolAddress","initCodeHashManualOverride","unshift","getPool","sqrtPriceX96","tick","pools","JSBI","sqrtRatioX96","Pool","PoolState","currencyA","currencyB","poolKeys","useWeb3React","poolTokens","wrapped","sortsBefore","Array","poolAddresses","v3CoreFactoryAddress","V3_CORE_FACTORY_ADDRESSES","value","slot0s","useMultipleContractSingleData","liquidities","_key","index","tokens","INVALID","slot0","slot0Loading","valid","slot0Valid","liquidityLoading","liquidityValid","LOADING","NOT_EXISTS","EXISTS","usePools"],"sourceRoot":""}