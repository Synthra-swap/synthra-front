{"version":3,"file":"static/js/2950.1d93a050.chunk.js","mappings":"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","sources":["hooks/useLeaderboard.ts","pages/Leaderboard/index.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nconst SUBGRAPH_URL = 'https://subgraph.synthra.org/subgraphs/name/ianlapham/uniswap-v3-sub'\n\nexport interface LeaderboardUser {\n  id: string\n  totalVolumeUSD: string\n  totalVolumeETH: string\n  score: string\n  txCount: string\n  firstTransactionTimestamp: string\n  lastTransactionTimestamp: string\n  rank: number\n}\n\nexport interface UserDayData {\n  id: string\n  date: number\n  user: {\n    id: string\n  }\n  dailyVolumeUSD: string\n  dailyVolumeETH: string\n  dailyScore: string\n  dailyTxCount: string\n}\n\nexport interface UserSwap {\n  id: string\n  amountUSD: string\n  timestamp: string\n  pool: {\n    id: string\n    token0: {\n      symbol: string\n    }\n    token1: {\n      symbol: string\n    }\n  }\n}\n\ninterface UserDetails extends LeaderboardUser {\n  swaps: UserSwap[]\n  userDayData: UserDayData[]\n}\n\n// Top users query for leaderboard\nconst TOP_USERS_QUERY = `\n  query GetTopUsers($first: Int!, $skip: Int!) {\n    users(\n      first: $first\n      skip: $skip\n      orderBy: score\n      orderDirection: desc\n      where: { score_gt: \"0\" }\n    ) {\n      id\n      totalVolumeUSD\n      totalVolumeETH\n      score\n      txCount\n      firstTransactionTimestamp\n      lastTransactionTimestamp\n    }\n  }\n`\n\n// User details query for profile\nconst USER_DETAILS_QUERY = `\n  query GetUserDetails($userId: String!) {\n    user(id: $userId) {\n      id\n      totalVolumeUSD\n      totalVolumeETH\n      score\n      txCount\n      firstTransactionTimestamp\n      lastTransactionTimestamp\n      swaps(first: 10, orderBy: timestamp, orderDirection: desc) {\n        id\n        amountUSD\n        timestamp\n        pool {\n          id\n          token0 {\n            symbol\n          }\n          token1 {\n            symbol\n          }\n        }\n      }\n      userDayData(first: 30, orderBy: date, orderDirection: desc) {\n        id\n        date\n        dailyVolumeUSD\n        dailyVolumeETH\n        dailyScore\n        dailyTxCount\n        user {\n          id\n        }\n      }\n    }\n  }\n`\n\n// Daily leaderboard query\nconst DAILY_LEADERS_QUERY = `\n  query GetDailyLeaders($date: Int!) {\n    userDayDatas(\n      first: 10\n      orderBy: dailyVolumeUSD\n      orderDirection: desc\n      where: { \n        date: $date\n        dailyVolumeUSD_gt: \"0\"\n      }\n    ) {\n      id\n      user {\n        id\n      }\n      dailyVolumeUSD\n      dailyScore\n      dailyTxCount\n    }\n  }\n`\n\n// User historical data query for charts\nconst USER_HISTORICAL_DATA_QUERY = `\n  query GetUserHistoricalData($userId: String!, $first: Int!, $orderDirection: String!) {\n    userDayDatas(\n      first: $first\n      orderBy: date\n      orderDirection: $orderDirection\n      where: { \n        user: $userId\n        dailyVolumeUSD_gt: \"0\"\n      }\n    ) {\n      id\n      date\n      dailyVolumeUSD\n      dailyScore\n      dailyTxCount\n      user {\n        id\n      }\n    }\n  }\n`\n\nasync function fetchLeaderboard(first: number = 100, skip: number = 0): Promise<LeaderboardUser[]> {\n  try {\n    const response = await fetch(SUBGRAPH_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: TOP_USERS_QUERY,\n        variables: { first, skip },\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`)\n    }\n\n    const data = await response.json()\n    \n    if (data.errors) {\n      throw new Error(`GraphQL errors: ${JSON.stringify(data.errors)}`)\n    }\n\n    const users = data.data?.users || []\n    \n    // Add rank based on order\n    return users.map((user: any, index: number) => ({\n      ...user,\n      rank: skip + index + 1,\n    }))\n  } catch (error) {\n    console.error('Error fetching leaderboard data:', error)\n    throw error\n  }\n}\n\nasync function fetchUserDetails(userId: string): Promise<UserDetails | null> {\n  try {\n    const response = await fetch(SUBGRAPH_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: USER_DETAILS_QUERY,\n        variables: { userId: userId.toLowerCase() },\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`)\n    }\n\n    const data = await response.json()\n    \n    if (data.errors) {\n      throw new Error(`GraphQL errors: ${JSON.stringify(data.errors)}`)\n    }\n\n    const user = data.data?.user\n    if (!user) return null\n\n    // Calculate rank by counting users with higher score\n    const rankResponse = await fetch(SUBGRAPH_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: `\n          query GetUserRank($score: String!) {\n            users(where: { score_gt: $score }) {\n              id\n            }\n          }\n        `,\n        variables: { score: user.score },\n      }),\n    })\n\n    const rankData = await rankResponse.json()\n    const rank = (rankData.data?.users?.length || 0) + 1\n\n    return {\n      ...user,\n      rank,\n    }\n  } catch (error) {\n    console.error('Error fetching user details:', error)\n    throw error\n  }\n}\n\nasync function fetchDailyLeaders(date?: Date): Promise<UserDayData[]> {\n  const targetDate = date || new Date()\n  const dayTimestamp = Math.floor(targetDate.setUTCHours(0, 0, 0, 0) / 1000)\n\n  try {\n    const response = await fetch(SUBGRAPH_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: DAILY_LEADERS_QUERY,\n        variables: { date: dayTimestamp },\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`)\n    }\n\n    const data = await response.json()\n    \n    if (data.errors) {\n      throw new Error(`GraphQL errors: ${JSON.stringify(data.errors)}`)\n    }\n\n    return data.data?.userDayDatas || []\n  } catch (error) {\n    console.error('Error fetching daily leaders:', error)\n    throw error\n  }\n}\n\nasync function fetchUserHistoricalData(userId: string, first: number = 100, orderDirection: 'asc' | 'desc' = 'desc'): Promise<UserDayData[]> {\n  try {\n    const response = await fetch(SUBGRAPH_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: USER_HISTORICAL_DATA_QUERY,\n        variables: { userId: userId.toLowerCase(), first, orderDirection },\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`)\n    }\n\n    const data = await response.json()\n    \n    if (data.errors) {\n      throw new Error(`GraphQL errors: ${JSON.stringify(data.errors)}`)\n    }\n\n    return data.data?.userDayDatas || []\n  } catch (error) {\n    console.error('Error fetching user historical data:', error)\n    throw error\n  }\n}\n\n// Hook for user historical data\nexport function useUserHistoricalData(userId?: string, days: number = 30) {\n  const [data, setData] = useState<UserDayData[]>([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    if (!userId) return\n\n    const loadData = async () => {\n      setLoading(true)\n      setError(null)\n      \n      try {\n        const historicalData = await fetchUserHistoricalData(userId, days, 'asc')\n        setData(historicalData)\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load historical data')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadData()\n  }, [userId, days])\n\n  return { data, loading, error }\n}\n\nexport function useLeaderboard(pageSize: number = 50) {\n  const [users, setUsers] = useState<LeaderboardUser[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const [hasMore, setHasMore] = useState(true)\n  const [page, setPage] = useState(0)\n\n  const loadMore = async () => {\n    try {\n      setLoading(true)\n      const skip = page * pageSize\n      const newUsers = await fetchLeaderboard(pageSize, skip)\n      \n      if (page === 0) {\n        setUsers(newUsers)\n      } else {\n        setUsers(prev => [...prev, ...newUsers])\n      }\n      \n      setHasMore(newUsers.length === pageSize)\n      setPage(prev => prev + 1)\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const refresh = () => {\n    setPage(0)\n    setUsers([])\n    setHasMore(true)\n    setError(null)\n    loadMore()\n  }\n\n  useEffect(() => {\n    loadMore()\n  }, [])\n\n  return {\n    users,\n    loading,\n    error,\n    hasMore,\n    loadMore,\n    refresh,\n  }\n}\n\nexport function useUserProfile(userAddress?: string) {\n  const { account } = useWeb3React()\n  const [user, setUser] = useState<UserDetails | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  const targetAddress = userAddress || account\n\n  useEffect(() => {\n    async function loadUser() {\n      if (!targetAddress) {\n        setLoading(false)\n        return\n      }\n\n      try {\n        setLoading(true)\n        setError(null)\n        const userDetails = await fetchUserDetails(targetAddress)\n        setUser(userDetails)\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Unknown error')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadUser()\n  }, [targetAddress])\n\n  return {\n    user,\n    loading,\n    error,\n    isOwnProfile: targetAddress === account,\n  }\n}\n\nexport function useDailyLeaderboard(date?: Date) {\n  const [leaders, setLeaders] = useState<UserDayData[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    async function loadDailyLeaders() {\n      try {\n        setLoading(true)\n        setError(null)\n        const dailyLeaders = await fetchDailyLeaders(date)\n        setLeaders(dailyLeaders)\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Unknown error')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    loadDailyLeaders()\n  }, [date])\n\n  return {\n    leaders,\n    loading,\n    error,\n  }\n}\n","import { Trans } from \"@lingui/macro\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { ButtonPrimary } from \"components/Button\";\nimport { useLeaderboard, useUserHistoricalData } from \"hooks/useLeaderboard\";\nimport React, { useState, useEffect, useMemo, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled, { useTheme, keyframes } from \"styled-components\";\nimport { ThemedText } from \"theme/components\";\nimport { PageWrapper as SwapPageWrapper } from \"components/swap/styled\";\nimport { TrendingUp, Info, BarChart, Users, Grid, List, Filter, Eye } from \"react-feather\";\nimport * as d3 from \"d3\";\nimport StatusIcon from \"components/Identicon/StatusIcon\";\nimport { getConnection } from \"connection\";\nimport { Connection } from \"connection/types\";\nimport { LineChart, Line, ResponsiveContainer } from 'recharts';\nimport { MouseoverTooltip } from \"components/Tooltip\";\n\n// Animations\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\n// Main Layout con tema app moderno\nconst PageWrapper = styled(SwapPageWrapper)`\n  max-width: 1400px;\n  min-height: 100vh;\n  padding: 68px 24px 24px;\n  background: ${({ theme }) => theme.background};\n\n  @media (max-width: 768px) {\n    padding: 68px 16px 16px;\n  }\n`;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  gap: 24px;\n  width: 100%;\n\n  @media (max-width: 1200px) {\n    grid-template-columns: 1fr;\n    gap: 20px;\n  }\n`;\n\n// Left Sidebar con tema moderno\nconst Sidebar = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  border-radius: 24px;\n  background: ${({ theme }) => theme.surface1};\n  z-index: 1;\n  max-height: calc(100vh - 120px);\n  overflow: hidden;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: -30px;\n    left: -30px;\n    width: 150px;\n    height: 150px;\n    background: radial-gradient(\n      circle at top left,\n      rgba(168, 85, 247, 0.4) 0%,\n      rgba(124, 58, 237, 0.3) 40%,\n      rgba(168, 85, 247, 0.05) 80%,\n      transparent 100%\n    );\n    filter: blur(35px);\n    z-index: 0;\n    pointer-events: none;\n    border-radius: 50%;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    border-radius: 24px;\n    background: conic-gradient(\n      from 180deg at 50% 50%,\n      transparent 0deg,\n      transparent 60deg,\n      #a855f7 90deg,\n      #7c3aed 180deg,\n      #a855f7 230deg,\n      transparent 300deg,\n      transparent 360deg\n    );\n    mask: \n      linear-gradient(#fff 0 0) content-box, \n      linear-gradient(#fff 0 0) border-box;\n    -webkit-mask: \n      linear-gradient(#fff 0 0) content-box, \n      linear-gradient(#fff 0 0) border-box;\n    -webkit-mask-composite: xor;\n    mask-composite: exclude;\n    padding: 2px;\n    z-index: 2;\n    pointer-events: none;\n  }\n`;\n\nconst SidebarContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 16px;\n  overflow-y: auto;\n  flex: 1;\n  position: relative;\n  z-index: 1;\n  \n  /* Hide scrollbar but keep functionality */\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* IE and Edge */\n  \n  &::-webkit-scrollbar {\n    display: none; /* Chrome, Safari, Opera */\n  }\n`;\n\nconst SectionHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  flex-shrink: 0;\n`;\n\nconst SectionTitle = styled(ThemedText.SubHeader)`\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  color: ${({ theme }) => theme.neutral1};\n  font-weight: 600;\n`;\n\n// NEW: Controls for filtering and view mode\nconst ControlsSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 24px;\n  flex-shrink: 0;\n`;\n\nconst ViewModeToggle = styled.div`\n  display: flex;\n  gap: 8px;\n  padding: 4px;\n  background: ${({ theme }) => theme.surface2};\n  border-radius: 12px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n`;\n\nconst ViewModeButton = styled.button<{ $active: boolean }>`\n  flex: 1;\n  padding: 8px 12px;\n  border: none;\n  border-radius: 8px;\n  background: ${({ $active, theme }) => $active ? theme.accent1 : 'transparent'};\n  color: ${({ $active, theme }) => $active ? theme.surface1 : theme.neutral2};\n  font-size: 12px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n\n  &:hover {\n    background: ${({ $active, theme }) => $active ? theme.accent1 : theme.surface3};\n  }\n`;\n\nconst FilterSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst FilterLabel = styled(ThemedText.LabelMicro)`\n  color: ${({ theme }) => theme.neutral2};\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nconst FilterSlider = styled.input`\n  width: 100%;\n  height: 4px;\n  border-radius: 2px;\n  background: ${({ theme }) => theme.surface3};\n  outline: none;\n  cursor: pointer;\n\n  &::-webkit-slider-thumb {\n    appearance: none;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    background: ${({ theme }) => theme.accent1};\n    cursor: pointer;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\n  }\n\n  &::-moz-range-thumb {\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    background: ${({ theme }) => theme.accent1};\n    cursor: pointer;\n    border: none;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst FilterValue = styled(ThemedText.BodySmall)`\n  color: ${({ theme }) => theme.neutral1};\n  font-weight: 600;\n  text-align: center;\n`;\n\nconst UserList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 32px;\n`;\n\nconst UserItem = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px;\n  background: ${({ theme }) => theme.surface2};\n  border-radius: 16px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  transition: all 0.2s ease;\n  cursor: pointer;\n  text-decoration: none;\n  color: inherit;\n\n  &:hover {\n    background: ${({ theme }) => theme.surface3};\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nconst RankPosition = styled.div<{ $rank: number }>`\n  width: 32px;\n  height: 32px;\n  border-radius: 10px;\n  box-shadow: ${({ $rank, theme }) =>\n  $rank === 1\n    ? `0 0 8px ${theme.accent1}`\n    : $rank === 2\n    ? `0 0 6px #C0C0C0`\n    : $rank === 3\n    ? `0 0 6px #CD7F32`\n    : 'none'};\n  background: ${({ theme, $rank }) => {\n    if ($rank === 1)\n      return `linear-gradient(135deg, ${theme.accent1}, ${theme.accent2})`;\n    if ($rank === 2) return `linear-gradient(135deg, #C0C0C0, #E8E8E8)`;\n    if ($rank === 3) return `linear-gradient(135deg, #CD7F32, #FFB347)`;\n    return theme.surface3;\n  }};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  font-weight: 700;\n  color: ${({ theme, $rank }) =>\n    $rank <= 3 ? theme.surface1 : theme.neutral1};\n  flex-shrink: 0;\n\n  &::before {\n    content: \"${({ $rank }) => {\n      if ($rank === 1) return \"👑\";\n      if ($rank === 2) return \"🥈\";\n      if ($rank === 3) return \"🥉\";\n      return $rank.toString();\n    }}\";\n  }\n`;\n\nconst UserMainInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex: 1;\n  min-width: 0;\n`;\n\nconst PerformanceStats = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 4px;\n  flex-shrink: 0;\n  min-width: 80px;\n`;\n\nconst SidebarVolumeAmount = styled(ThemedText.BodySmall)`\n  font-weight: 700;\n  color: #fff;\n  text-shadow: 0 0 6px ${({ theme }) => theme.accent1};\n  font-size: 14px;\n`;\n\nconst PerformanceChange = styled.div<{ $positive: boolean }>`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 12px;\n  font-weight: 600;\n  color: ${({ $positive, theme }) =>\n    $positive ? theme.success : theme.critical};\n\n  &::before {\n    content: \"${({ $positive }) => ($positive ? \"📈\" : \"📉\")}\";\n    font-size: 10px;\n  }\n`;\n\nconst WalletIcon = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 12px;\n  background: ${({ theme }) => theme.surface2};\n  border: 2px solid ${({ theme }) => theme.surface3};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  overflow: hidden;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  \n  /* Override StatusIcon margin */\n  & > div {\n    margin-right: 0 !important;\n  }\n`\n\nconst UserDetails = styled.div`\n  flex: 1;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n`;\n\nconst WalletAddress = styled(ThemedText.BodySmall)`\n  font-family: \"Monaco\", \"Menlo\", \"Ubuntu Mono\", monospace;\n  font-weight: 600;\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 13px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst VolumeText = styled(ThemedText.LabelMicro)`\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 12px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\n// Main Content Area con tema moderno\nconst MainContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  @media (max-width: 1200px) {\n    order: 1;\n  }\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n  }\n`;\n\nconst HeaderLeft = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nconst ContestTitle = styled(ThemedText.HeadlineMedium)`\n  color: ${({ theme }) => theme.neutral1};\n  font-weight: 700;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  \n  @media (max-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nconst ContestDescription = styled(ThemedText.BodyPrimary)`\n  color: ${({ theme }) => theme.neutral2};\n  margin: 8px 0 0 0;\n  font-size: 16px;\n  line-height: 1.5;\n  \n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nconst HeaderContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\n// Tree Map Container più compatto\nconst TreeMapContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 16px;\n  border-radius: 24px;\n  background: ${({ theme }) => theme.surface1};\n  z-index: 1;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    border-radius: 24px;\n    background: conic-gradient(\n      from 180deg at 50% 50%,\n      transparent 0deg,\n      transparent 45deg,\n      #a855f7 80deg,\n      #7c3aed 120deg,\n      #a855f7 180deg,\n      transparent 315deg,\n      transparent 360deg\n    );\n    mask: \n      linear-gradient(#fff 0 0) content-box, \n      linear-gradient(#fff 0 0) border-box;\n    -webkit-mask: \n      linear-gradient(#fff 0 0) content-box, \n      linear-gradient(#fff 0 0) border-box;\n    -webkit-mask-composite: xor;\n    mask-composite: exclude;\n    padding: 2px;\n    z-index: -1;\n    pointer-events: none;\n  }\n`;\n\n// NEW: Grid view as alternative to treemap\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 16px;\n  padding: 16px;\n`;\n\nconst GridUserCard = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 20px;\n  background: ${({ theme }) => theme.surface2};\n  border-radius: 16px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  transition: all 0.2s ease;\n  cursor: pointer;\n  text-decoration: none;\n  color: inherit;\n  position: relative;\n  overflow: hidden;\n\n  &:hover {\n    background: ${({ theme }) => theme.surface3};\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n    text-decoration: none;\n    color: inherit;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 60px;\n    height: 60px;\n    background: linear-gradient(135deg, \n      ${({ theme }) => theme.accent1}15, \n      ${({ theme }) => theme.accent1}05\n    );\n    border-radius: 0 16px 0 60px;\n  }\n`;\n\nconst GridUserHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst GridUserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex: 1;\n  min-width: 0;\n`;\n\nconst GridUserStats = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 8px;\n`;\n\nconst GridVolumeDisplay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst GridVolumeAmount = styled(ThemedText.SubHeader)`\n  color: #fff;\n  text-shadow: 0 0 6px ${({ theme }) => theme.accent1};\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nconst GridPerformanceChange = styled.div<{ $positive: boolean }>`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${({ $positive, theme }) =>\n    $positive ? theme.success : theme.critical};\n\n  &::before {\n    content: \"${({ $positive }) => ($positive ? \"📈\" : \"📉\")}\";\n    font-size: 12px;\n  }\n`;\n\nconst GridMiniChart = styled.div`\n  height: 40px;\n  margin-top: 8px;\n  opacity: 0.8;\n`;\n\nconst TreeMapWrapper = styled.div<{ $dynamicHeight: number }>`\n  width: 100%;\n  height: ${({ $dynamicHeight }) => $dynamicHeight}px;\n  min-height: 500px;\n  max-height: 1200px;\n  position: relative;\n  overflow: hidden;\n  border-radius: 20px;\n  background: ${({ theme }) => theme.surface2};\n  border: 1px solid ${({ theme }) => theme.surface3};\n\n  @media (max-width: 768px) {\n    height: ${({ $dynamicHeight }) => Math.min($dynamicHeight * 0.9, 800)}px;\n    min-height: 400px;\n    max-height: 800px;\n  }\n`;\n\n// Calculate dynamic height based on number of wallets and optimal treemap layout\nconst calculateTreemapHeight = (walletCount: number): number => {\n  if (walletCount === 0) return 500;\n  \n  // More conservative height calculation for better readability with fewer nodes\n  const baseHeight = 500;\n  const additionalHeight = Math.min(walletCount * 4, 200); // Reduced scaling\n  \n  const calculatedHeight = baseHeight + additionalHeight;\n  \n  // Clamp between min and max values\n  return Math.max(500, Math.min(calculatedHeight, 800)); // Reduced max height\n};\n\n// Treemap D3 Component with improved readability\nconst TreemapNode = styled.div<{ \n  $x: number\n  $y: number\n  $width: number\n  $height: number\n  $rank: number\n  $volume: number\n  $showDetails: boolean\n}>`\n  position: absolute;\n  left: ${({ $x }) => $x}px;\n  top: ${({ $y }) => $y}px;\n  width: ${({ $width }) => $width}px;\n  height: ${({ $height }) => $height}px;\n  background: ${({ $rank, theme }) => {\n    if ($rank === 1) {\n      return `linear-gradient(135deg, #5821B7, #000)`;\n    }\n    if ($rank === 2) {\n      return `linear-gradient(135deg, #D1D5DB, #000)`;\n    }\n    if ($rank === 3) {\n      return `linear-gradient(135deg, #F97316, #000)`;\n    }\n    return 'linear-gradient(135deg, #1F2937, #000)';\n  }};\n  box-shadow: ${({ $rank }) => {\n    if ($rank === 1) return `0 0 12px #8B5CF6aa`;\n    if ($rank === 2) return `0 0 10px #D1D5DBcc`;\n    if ($rank === 3) return `0 0 10px #F97316cc`;\n    return `inset 0 0 6px rgba(255,255,255,0.05)`;\n  }};\n  border-radius: 16px;\n  padding: ${({ $showDetails }) => $showDetails ? '16px' : '8px'};\n  cursor: pointer;\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  display: flex;\n  flex-direction: column;\n  justify-content: ${({ $showDetails }) => $showDetails ? 'space-between' : 'center'};\n  align-items: ${({ $showDetails }) => $showDetails ? 'stretch' : 'center'};\n  overflow: hidden;\n  animation: ${fadeIn} 0.6s ease-out;\n  animation-delay: ${({ $rank }) => $rank * 0.1}s;\n  animation-fill-mode: both;\n  opacity: 0;\n  backdrop-filter: blur(10px);\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  \n  &:hover {\n    transform: translateY(-4px) scale(1.02);\n    z-index: 10;\n    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst NodeHeader = styled.div<{ $compact: boolean }>`\n  display: flex;\n  align-items: ${({ $compact }) => $compact ? 'center' : 'flex-start'};\n  justify-content: ${({ $compact }) => $compact ? 'center' : 'space-between'};\n  margin-bottom: ${({ $compact }) => $compact ? '0' : '8px'};\n  gap: ${({ $compact }) => $compact ? '4px' : '8px'};\n`;\n\nconst WalletInfo = styled.div<{ $compact: boolean }>`\n  display: flex;\n  align-items: center;\n  gap: ${({ $compact }) => $compact ? '4px' : '8px'};\n  min-width: 0;\n  flex: 1;\n  flex-direction: ${({ $compact }) => $compact ? 'column' : 'row'};\n`;\n\nconst WalletAvatar = styled.div<{ $rank: number; $size: number }>`\n  width: ${({ $size }) => $size}px;\n  height: ${({ $size }) => $size}px;\n  border-radius: ${({ $size }) => Math.max(6, Math.min($size / 4, 10))}px;\n  background: ${({ theme }) => theme.surface2};\n  border: 2px solid ${({ theme }) => theme.surface3};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  \n  /* Override StatusIcon margin */\n  & > div {\n    margin-right: 0 !important;\n  }\n`;\n\nconst WalletDetails = styled.div<{ $compact: boolean }>`\n  min-width: 0;\n  flex: 1;\n  text-align: ${({ $compact }) => $compact ? 'center' : 'left'};\n`;\n\nconst WalletAddressStyled = styled(ThemedText.BodySmall)<{ $fontSize: number }>`\n  font-family: \"Monaco\", \"Menlo\", \"Ubuntu Mono\", monospace;\n  font-weight: 600;\n  color: ${({ theme }) => theme.neutral1};\n  font-size: ${({ $fontSize }) => $fontSize}px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-bottom: 2px;\n`;\n\nconst RankBadge = styled.div<{ $rank: number; $size: number }>`\n  background: ${({ theme, $rank }) => {\n    if ($rank === 1) return `linear-gradient(135deg, ${theme.accent1}, ${theme.accent2})`;\n    if ($rank === 2) return `linear-gradient(135deg, #C0C0C0, #E8E8E8)`;\n    if ($rank === 3) return `linear-gradient(135deg, #CD7F32, #FFB347)`;\n    return theme.surface3;\n  }};\n  color: ${({ theme, $rank }) => \n    $rank <= 3 ? theme.surface1 : theme.neutral1\n  };\n  padding: ${({ $size }) => Math.max(2, $size / 8)}px ${({ $size }) => Math.max(4, $size / 4)}px;\n  text-shadow: ${({ $rank, theme }) =>\n    $rank <= 3 ? `0 0 6px ${theme.accent1}` : 'none'};\n  border-radius: ${({ $size }) => Math.max(4, $size / 6)}px;\n  font-size: ${({ $size }) => Math.max(8, $size / 2)}px;\n  font-weight: 700;\n  text-align: center;\n  min-width: ${({ $size }) => $size}px;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n  flex-shrink: 0;\n`;\n\nconst VolumeDisplay = styled.div<{ $show: boolean }>`\n  margin-top: auto;\n  display: ${({ $show }) => $show ? 'block' : 'none'};\n`;\n\nconst VolumeAmount = styled(ThemedText.SubHeader)<{ $fontSize: number }>`\n  color: #fff;\n  text-shadow: 0 0 6px ${({ theme }) => theme.accent1};\n  font-size: ${({ $fontSize }) => $fontSize}px;\n  font-weight: 700;\n  margin-bottom: 2px;\n  line-height: 1.2;\n`;\n\n// Mini chart component for larger nodes\nconst MiniChart = styled.div<{ $visible: boolean }>`\n  position: absolute;\n  bottom: 8px;\n  right: 8px;\n  width: 40%;\n  height: 25%;\n  opacity: ${({ $visible }) => ($visible ? 0.6 : 0)};\n  transition: opacity 0.3s ease;\n  pointer-events: none;\n`;\n\n// User chart component (simplified for smaller nodes)\nconst UserChart = ({\n  userId,\n  color = \"rgba(255,255,255,0.8)\",\n}: {\n  userId: string;\n  color?: string;\n}) => {\n  const { data: historicalData } = useUserHistoricalData(userId, 7);\n\n  const chartData = useMemo(() => {\n    const now = new Date();\n    const last7Days = [];\n    \n    for (let i = 6; i >= 0; i--) {\n      const date = new Date(now);\n      date.setDate(date.getDate() - i);\n      date.setUTCHours(0, 0, 0, 0);\n      last7Days.push(Math.floor(date.getTime() / 1000));\n    }\n\n    if (!historicalData || historicalData.length === 0) {\n      return last7Days.map((timestamp, index) => ({\n        index,\n        value: 20 + (index * 10),\n        timestamp,\n        volume: 0,\n      }));\n    }\n\n    const dataMap = new Map();\n    historicalData.forEach((d) => {\n      const dayTimestamp = d.date || 0;\n      dataMap.set(dayTimestamp, parseFloat(d.dailyVolumeUSD || \"0\"));\n    });\n\n    let cumulativeVolume = 0;\n    const last7DaysData = last7Days.map((timestamp) => {\n      const dailyVolume = dataMap.get(timestamp) || 0;\n      cumulativeVolume += dailyVolume;\n      return {\n        timestamp,\n        dailyVolume,\n        cumulativeVolume,\n      };\n    });\n\n    const maxCumulativeVolume = Math.max(...last7DaysData.map(d => d.cumulativeVolume), 1);\n    \n    const points = last7DaysData.map((day, index) => {\n      const normalizedY = maxCumulativeVolume > 0\n        ? 20 + ((day.cumulativeVolume / maxCumulativeVolume) * 60)\n        : 20 + (index * 2);\n        \n      return {\n        index,\n        value: Math.max(20, Math.min(80, normalizedY)),\n        timestamp: day.timestamp,\n        volume: day.cumulativeVolume,\n        dailyVolume: day.dailyVolume,\n      };\n    });\n\n    return points;\n  }, [historicalData]);\n\n  const getHexColor = (colorString: string) => {\n    if (colorString.startsWith('rgba(255,255,255')) {\n      return '#ffffff';\n    }\n    if (colorString.startsWith('rgba(')) {\n      const match = colorString.match(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)/);\n      if (match) {\n        const r = parseInt(match[1]).toString(16).padStart(2, '0');\n        const g = parseInt(match[2]).toString(16).padStart(2, '0');\n        const b = parseInt(match[3]).toString(16).padStart(2, '0');\n        return `#${r}${g}${b}`;\n      }\n    }\n    return colorString;\n  };\n\n  const hexColor = getHexColor(color);\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          data={chartData}\n          margin={{ top: 5, right: 5, left: 5, bottom: 5 }}\n        >\n          <defs>\n            <linearGradient id={`lineGradient-${userId}`} x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n              <stop offset=\"0%\" stopColor={hexColor} stopOpacity={0.8} />\n              <stop offset=\"50%\" stopColor={hexColor} stopOpacity={1} />\n              <stop offset=\"100%\" stopColor={hexColor} stopOpacity={0.6} />\n            </linearGradient>\n            \n            <filter id={`glow-${userId}`}>\n              <feGaussianBlur stdDeviation=\"2\" result=\"coloredBlur\"/>\n              <feMerge> \n                <feMergeNode in=\"coloredBlur\"/>\n                <feMergeNode in=\"SourceGraphic\"/>\n              </feMerge>\n            </filter>\n          </defs>\n          \n          <Line\n            type=\"monotone\"\n            dataKey=\"value\"\n            stroke={`url(#lineGradient-${userId})`}\n            strokeWidth={2.5}\n            dot={false}\n            activeDot={{\n              r: 4,\n              fill: hexColor,\n              stroke: hexColor,\n              strokeWidth: 2,\n              filter: `url(#glow-${userId})`,\n            }}\n            filter={`url(#glow-${userId})`}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\n// Treemap component using D3 with adaptive sizing\ninterface TreemapComponentProps {\n  users: any[];\n  totalVolume: number;\n  width: number;\n  height: number;\n  connection: Connection;\n  maxUsers: number; // NEW: limit number of users shown\n}\n\nconst TreemapComponent = ({\n  users,\n  totalVolume,\n  width,\n  height,\n  connection,\n  maxUsers,\n}: TreemapComponentProps) => {\n  const theme = useTheme();\n\n  const treemapData = useMemo(() => {\n    if (!users || users.length === 0) return [];\n\n    // Limit users to maxUsers for better readability\n    const limitedUsers = users.slice(0, maxUsers);\n\n    const data = limitedUsers.map((user, index) => {\n      const volume = parseFloat(user.totalVolumeUSD || \"0\");\n\n      return {\n        id: user.id,\n        originalValue: volume,\n        rank: index + 1,\n        percentage:\n          totalVolume > 0 ? ((volume / totalVolume) * 100).toFixed(2) : \"0.00\",\n      };\n    });\n\n    const values = data.map((d) => d.originalValue).filter((v) => v > 0);\n    if (values.length === 0) return [];\n\n    // Improved normalization for better balance\n    const normalizedData = data.map((d) => {\n      let normalizedValue;\n\n      if (d.originalValue <= 0) {\n        normalizedValue = 150; // Higher base for zero volumes\n      } else if (d.rank === 1) {\n        // Top user gets significant but not overwhelming size\n        normalizedValue = Math.log(d.originalValue + 1) * 100 + 800;\n      } else if (d.rank <= 3) {\n        normalizedValue = Math.log(d.originalValue + 1) * 90 + 500;\n      } else if (d.rank <= 10) {\n        normalizedValue = Math.log(d.originalValue + 1) * 80 + 300;\n      } else {\n        normalizedValue = Math.log(d.originalValue + 1) * 70 + 200;\n      }\n\n      return {\n        ...d,\n        value: normalizedValue,\n      };\n    });\n\n    const root = d3\n      .hierarchy({ children: normalizedData })\n      .sum((d) => (d as any).value)\n      .sort((a, b) => ((a as any).rank || 0) - ((b as any).rank || 0));\n\n    const treemap = d3\n      .treemap<any>()\n      .size([width, height])\n      .padding(8)\n      .paddingInner(12)\n      .paddingOuter(20)\n      .round(true);\n\n    treemap(root);\n\n    return (root.leaves() as any[]).map((d: any) => {\n      const nodeWidth = Math.max(d.x1 - d.x0, 140);\n      const nodeHeight = Math.max(d.y1 - d.y0, 100);\n      \n      // Determine what to show based on size\n      const showFullDetails = nodeWidth > 180 && nodeHeight > 120;\n      const showMinimalDetails = nodeWidth > 120 && nodeHeight > 80;\n      \n      return {\n        ...d.data,\n        x: d.x0,\n        y: d.y0,\n        width: nodeWidth,\n        height: nodeHeight,\n        showFullDetails,\n        showMinimalDetails,\n      };\n    });\n  }, [users, totalVolume, width, height, maxUsers]);\n\n  const formatUserAddress = (address: string, compact: boolean = false) => {\n    if (!address) return \"0x...\";\n    if (compact) {\n      return `${address.slice(0, 4)}...${address.slice(-2)}`;\n    }\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  };\n\n  const formatVolume = (volume: number) => {\n    if (volume >= 1000000) return (volume / 1000000).toFixed(2) + \"M\";\n    if (volume >= 1000) return (volume / 1000).toFixed(2) + \"K\";\n    return volume.toFixed(2);\n  };\n\n  return (\n    <div style={{ position: \"relative\", width: \"100%\", height: \"100%\" }}>\n      {treemapData.map((node: any) => {\n        const isCompact = !node.showMinimalDetails;\n        const avatarSize = node.showFullDetails ? 36 : node.showMinimalDetails ? 28 : 20;\n        const fontSize = node.showFullDetails ? 11 : node.showMinimalDetails ? 9 : 8;\n        const volumeFontSize = node.showFullDetails ? 12 : node.showMinimalDetails ? 10 : 8;\n        const rankBadgeSize = node.showFullDetails ? 24 : node.showMinimalDetails ? 20 : 16;\n        \n        return (\n          <TreemapNode\n            key={node.id}\n            $x={node.x}\n            $y={node.y}\n            $width={node.width}\n            $height={node.height}\n            $rank={node.rank}\n            $volume={node.originalValue}\n            $showDetails={node.showMinimalDetails}\n            as={Link}\n            to={`/leaderboard/profile/${node.id}`}\n          >\n            <NodeHeader $compact={isCompact}>\n              <WalletInfo $compact={isCompact}>\n                <WalletAvatar $rank={node.rank} $size={avatarSize}>\n                  <StatusIcon \n                    account={node.id} \n                    connection={connection} \n                    size={avatarSize} \n                    showMiniIcons={false} \n                  />\n                </WalletAvatar>\n                {node.showMinimalDetails && (\n                  <WalletDetails $compact={isCompact}>\n                    <WalletAddressStyled $fontSize={fontSize}>\n                      {formatUserAddress(node.id, isCompact)}\n                    </WalletAddressStyled>\n                  </WalletDetails>\n                )}\n              </WalletInfo>\n              <RankBadge $rank={node.rank} $size={rankBadgeSize}>\n                #{node.rank}\n              </RankBadge>\n            </NodeHeader>\n\n            <VolumeDisplay $show={node.showMinimalDetails && node.height > 80}>\n              <VolumeAmount $fontSize={volumeFontSize}>\n                ${formatVolume(node.originalValue)}\n              </VolumeAmount>\n            </VolumeDisplay>\n\n            <MiniChart $visible={node.showFullDetails && node.width > 200 && node.height > 140}>\n              <UserChart userId={node.id} color={theme.accent1} />\n            </MiniChart>\n          </TreemapNode>\n        );\n      })}\n    </div>\n  );\n};\n\n// Component per calcolare performance reali di un utente\nconst UserPerformanceData = ({\n  userId,\n  currentVolume,\n  children,\n}: {\n  userId: string;\n  currentVolume?: number;\n  children: (data: { change24h: number; change7d: number }) => React.ReactNode;\n}) => {\n  const { data: historicalData } = useUserHistoricalData(userId, 7);\n\n  const performanceData = useMemo(() => {\n    if (!historicalData || historicalData.length === 0) {\n      if (currentVolume && currentVolume > 0) {\n        return { change24h: 0, change7d: 0 };\n      }\n      return { change24h: 0, change7d: 0 };\n    }\n\n    const sortedDataByDate = [...historicalData]\n      .map((d) => ({\n        ...d,\n        dailyVolume: parseFloat(d.dailyVolumeUSD || \"0\"),\n        timestamp: d.date || 0,\n      }))\n      .sort((a, b) => a.timestamp - b.timestamp);\n\n    let cumulativeVolume = 0;\n    const dataWithCumulative = sortedDataByDate.map((d) => {\n      cumulativeVolume += d.dailyVolume;\n      return {\n        ...d,\n        totalVolume: cumulativeVolume,\n      };\n    });\n\n    const sortedData = dataWithCumulative.sort(\n      (a, b) => b.timestamp - a.timestamp\n    );\n\n    const currentTotalVolume = currentVolume ?? sortedData[0]?.totalVolume ?? 0;\n\n    let change24h = 0;\n    let change7d = 0;\n\n    if (sortedData.length >= 2) {\n      const yesterdayTotalVolume = sortedData[1].totalVolume;\n\n      if (yesterdayTotalVolume === 0 && currentTotalVolume > 0) {\n        change24h = 100;\n      } else if (yesterdayTotalVolume > 0) {\n        change24h =\n          ((currentTotalVolume - yesterdayTotalVolume) / yesterdayTotalVolume) *\n          100;\n      } else {\n        change24h = 0;\n      }\n    } else if (sortedData.length === 1 && currentTotalVolume > 0) {\n      change24h = 100;\n    }\n\n    if (sortedData.length >= 7) {\n      const weekAgoTotalVolume = sortedData[6].totalVolume;\n\n      if (weekAgoTotalVolume === 0 && currentTotalVolume > 0) {\n        change7d = 100;\n      } else if (weekAgoTotalVolume > 0) {\n        change7d =\n          ((currentTotalVolume - weekAgoTotalVolume) / weekAgoTotalVolume) *\n          100;\n      } else {\n        change7d = 0;\n      }\n    } else if (sortedData.length >= 2) {\n      const dailyGrowthRate = change24h / 100;\n\n      if (dailyGrowthRate !== 0) {\n        change7d = (Math.pow(1 + dailyGrowthRate, 7) - 1) * 100;\n      }\n    } else if (sortedData.length === 1 && currentTotalVolume > 0) {\n      change7d = 100;\n    }\n\n    change24h = Math.max(-99, Math.min(change24h, 1000));\n    change7d = Math.max(-99, Math.min(change7d, 2000));\n\n    const result = {\n      change24h: Math.round(change24h * 100) / 100,\n      change7d: Math.round(change7d * 100) / 100,\n    };\n\n    return result;\n  }, [historicalData, userId, currentVolume]);\n\n  return children(performanceData);\n};\n\n// Utility functions\nconst formatUserAddress = (address: string) => {\n  if (!address) return \"0x...\";\n  return `${address.slice(0, 6)}...${address.slice(-4)}`;\n};\n\nconst formatVolume = (volume: number) => {\n  if (volume >= 1000000) return (volume / 1000000).toFixed(2) + \"M\";\n  if (volume >= 1000) return (volume / 1000).toFixed(2) + \"K\";\n  return volume.toFixed(2);\n};\n\nconst calculatePercentage = (userVolume: string, totalVolume: number) => {\n  const volume = parseFloat(userVolume) || 0;\n  if (totalVolume === 0) return \"0.00%\";\n  return ((volume / totalVolume) * 100).toFixed(2) + \"%\";\n};\n\nexport default function Leaderboard() {\n  const { account, connector } = useWeb3React();\n  const theme = useTheme();\n  const [viewMode, setViewMode] = useState<'treemap' | 'grid'>('treemap');\n  const [maxUsers, setMaxUsers] = useState(20); // NEW: controllable number of users\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [containerDimensions, setContainerDimensions] = useState({\n    width: 800,\n    height: 720,\n  });\n\n  const connection = getConnection(connector);\n\n  const {\n    users: allTimeUsers,\n    loading: allTimeLoading,\n    error: allTimeError,\n  } = useLeaderboard(100); // Fetch more users to have flexibility\n\n  // Get the actual number of users available\n  const availableUsersCount = allTimeUsers?.length || 0;\n\n  // Update maxUsers when available users change, but keep it within bounds\n  useEffect(() => {\n    if (availableUsersCount > 0) {\n      // If current maxUsers exceeds available users, adjust it\n      if (maxUsers > availableUsersCount) {\n        setMaxUsers(Math.min(availableUsersCount, 20)); // Default to 20 or available count\n      }\n    }\n  }, [availableUsersCount, maxUsers]);\n\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (containerRef.current) {\n        const { clientWidth, clientHeight } = containerRef.current;\n        setContainerDimensions({\n          width: clientWidth || 600,\n          height: Math.max(clientHeight - 48, 500),\n        });\n      }\n    };\n\n    updateDimensions();\n\n    const handleResize = () => updateDimensions();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const currentUsers = allTimeUsers;\n  const isLoading = allTimeLoading;\n  const error = allTimeError;\n\n  // Take top users based on maxUsers setting\n  const topUsers = useMemo(() => {\n    if (!currentUsers || currentUsers.length === 0) return [];\n    return currentUsers.slice(0, Math.min(maxUsers, currentUsers.length));\n  }, [currentUsers, maxUsers]);\n\n  const totalVolume = useMemo(() => {\n    if (!topUsers || topUsers.length === 0) return 0;\n    return topUsers.reduce((sum: number, user: any) => {\n      const volume = parseFloat((user as any).totalVolumeUSD || \"0\");\n      return sum + volume;\n    }, 0);\n  }, [topUsers]);\n\n  const sidebarUsers = useMemo(() => {\n    if (!topUsers || topUsers.length === 0) return [];\n\n    return topUsers.slice(0, 10).map((user, index) => {\n      const volume = parseFloat((user as any).totalVolumeUSD || \"0\");\n\n      return {\n        address: user.id,\n        rank: index + 1,\n        volume: formatVolume(volume),\n        rawVolume: volume,\n        percentage: calculatePercentage(\n          (user as any).totalVolumeUSD,\n          totalVolume\n        ),\n        currentVolume: volume,\n      };\n    });\n  }, [topUsers, totalVolume]);\n\n  const dynamicHeight = useMemo(() => {\n    return calculateTreemapHeight(Math.min(maxUsers, topUsers.length));\n  }, [topUsers.length, maxUsers]);\n\n  return (\n    <PageWrapper>\n      <Container>\n        <Sidebar>\n          <SidebarContent>\n            <SectionHeader>\n              <SectionTitle>\n                <BarChart size={18} />\n                Leaderboard\n              </SectionTitle>\n              <MouseoverTooltip\n                text={\n                  <div>\n                    Ranking of users who generated the most volume.<br />\n                    Higher rankings increase your chances for airdrops!\n                  </div>\n                }\n                placement=\"right\"\n              >\n                <Info size={16} color=\"#888\" style={{ cursor: 'help' }} />\n              </MouseoverTooltip>\n            </SectionHeader>\n\n            <ControlsSection>\n              <FilterSection>\n                <FilterLabel>View Mode</FilterLabel>\n                <ViewModeToggle>\n                  <ViewModeButton \n                    $active={viewMode === 'treemap'} \n                    onClick={() => setViewMode('treemap')}\n                  >\n                    <Grid size={14} />\n                    Map\n                  </ViewModeButton>\n                  <ViewModeButton \n                    $active={viewMode === 'grid'} \n                    onClick={() => setViewMode('grid')}\n                  >\n                    <List size={14} />\n                    Grid\n                  </ViewModeButton>\n                </ViewModeToggle>\n              </FilterSection>\n\n              <FilterSection>\n                <FilterLabel>Users Shown: {maxUsers} / {availableUsersCount}</FilterLabel>\n                <FilterSlider\n                  type=\"range\"\n                  min=\"10\"\n                  max={Math.max(10, availableUsersCount)} // Dynamic max based on available users\n                  value={Math.min(maxUsers, availableUsersCount)} // Ensure value doesn't exceed available\n                  onChange={(e) => setMaxUsers(parseInt(e.target.value))}\n                  disabled={availableUsersCount === 0} // Disable if no users\n                />\n                <FilterValue>\n                  {Math.min(maxUsers, availableUsersCount)} of {availableUsersCount} traders\n                </FilterValue>\n              </FilterSection>\n            </ControlsSection>\n\n            <UserList>\n              {sidebarUsers.map((trader) => (\n                <UserPerformanceData\n                  key={trader.address}\n                  userId={trader.address}\n                  currentVolume={trader.rawVolume}\n                >\n                  {(performanceData) => (\n                    <UserItem to={`/leaderboard/profile/${trader.address}`}>\n                      <UserMainInfo>\n                        <RankPosition $rank={trader.rank} />\n                        <WalletIcon>\n                          <StatusIcon \n                            account={trader.address} \n                            connection={connection} \n                            size={40} \n                            showMiniIcons={false} \n                          />\n                        </WalletIcon>\n                        <UserDetails>\n                          <WalletAddress>{formatUserAddress(trader.address)}</WalletAddress>\n                          <VolumeText>${trader.volume}</VolumeText>\n                        </UserDetails>\n                      </UserMainInfo>\n                      <PerformanceStats>\n                        <SidebarVolumeAmount>\n                          ${trader.volume}\n                        </SidebarVolumeAmount>\n                        <PerformanceChange\n                          $positive={performanceData.change24h > 0}\n                        >\n                          {performanceData.change24h > 0 ? \"+\" : \"\"}\n                          {performanceData.change24h.toFixed(1)}%\n                        </PerformanceChange>\n                      </PerformanceStats>\n                    </UserItem>\n                  )}\n                </UserPerformanceData>\n              ))}\n            </UserList>\n          </SidebarContent>\n        </Sidebar>\n\n        <MainContent>\n          <Header>\n            <HeaderLeft>\n              <HeaderContent>\n                <ContestTitle>\n                  <TrendingUp size={24} />\n                  Volume Contest\n                </ContestTitle>\n                <ContestDescription>\n                  Compete with other traders to climb the leaderboard. Use the controls to adjust the view and number of traders shown.\n                </ContestDescription>\n              </HeaderContent>\n            </HeaderLeft>\n          </Header>\n\n          {viewMode === 'treemap' ? (\n            <TreeMapContainer ref={containerRef}>\n              {isLoading ? (\n                <div\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    height: \"400px\",\n                    color: \"#9ca3af\",\n                    fontSize: \"18px\",\n                    fontWeight: \"500\",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      gap: \"12px\",\n                      padding: \"24px 32px\",\n                      background: \"rgba(255, 255, 255, 0.05)\",\n                      borderRadius: \"16px\",\n                      backdropFilter: \"blur(10px)\",\n                    }}\n                  >\n                    <div\n                      style={{\n                        width: \"20px\",\n                        height: \"20px\",\n                        border: \"2px solid rgba(255, 255, 255, 0.3)\",\n                        borderTop: \"2px solid currentColor\",\n                        borderRadius: \"50%\",\n                        animation: \"spin 1s linear infinite\",\n                      }}\n                    />\n                    Loading leaderboard...\n                  </div>\n                </div>\n              ) : error ? (\n                <div\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    height: \"400px\",\n                    color: \"#ef4444\",\n                    fontSize: \"18px\",\n                    fontWeight: \"500\",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      gap: \"12px\",\n                      padding: \"24px 32px\",\n                      background: \"rgba(239, 68, 68, 0.1)\",\n                      borderRadius: \"16px\",\n                      backdropFilter: \"blur(10px)\",\n                      border: \"1px solid rgba(239, 68, 68, 0.2)\",\n                    }}\n                  >\n                    ⚠️ Error loading data: {error}\n                  </div>\n                </div>\n              ) : (\n                <TreeMapWrapper $dynamicHeight={dynamicHeight}>\n                  <TreemapComponent\n                    users={topUsers}\n                    totalVolume={totalVolume}\n                    width={containerDimensions.width - 48}\n                    height={dynamicHeight - 48}\n                    connection={connection}\n                    maxUsers={maxUsers}\n                  />\n                </TreeMapWrapper>\n              )}\n            </TreeMapContainer>\n          ) : (\n            <GridContainer>\n              {isLoading ? (\n                <div style={{ gridColumn: \"1 / -1\", textAlign: \"center\", padding: \"40px\" }}>\n                  Loading...\n                </div>\n              ) : error ? (\n                <div style={{ gridColumn: \"1 / -1\", textAlign: \"center\", padding: \"40px\", color: \"#ef4444\" }}>\n                  Error: {error}\n                </div>\n              ) : (\n                topUsers.map((user, index) => {\n                  const volume = parseFloat(user.totalVolumeUSD || \"0\");\n                  \n                  return (\n                    <UserPerformanceData\n                      key={user.id}\n                      userId={user.id}\n                      currentVolume={volume}\n                    >\n                      {(performanceData) => (\n                        <GridUserCard to={`/leaderboard/profile/${user.id}`}>\n                          <GridUserHeader>\n                            <GridUserInfo>\n                              <WalletAvatar $rank={index + 1} $size={44}>\n                                <StatusIcon \n                                  account={user.id} \n                                  connection={connection} \n                                  size={44} \n                                  showMiniIcons={false} \n                                />\n                              </WalletAvatar>\n                              <UserDetails>\n                                <WalletAddress>{formatUserAddress(user.id)}</WalletAddress>\n                                <VolumeText>Rank #{index + 1}</VolumeText>\n                              </UserDetails>\n                            </GridUserInfo>\n                            <RankBadge $rank={index + 1} $size={24}>\n                              #{index + 1}\n                            </RankBadge>\n                          </GridUserHeader>\n                          \n                          <GridUserStats>\n                            <GridVolumeDisplay>\n                              <GridVolumeAmount>\n                                ${formatVolume(volume)}\n                              </GridVolumeAmount>\n                              <GridPerformanceChange $positive={performanceData.change24h > 0}>\n                                {performanceData.change24h > 0 ? \"+\" : \"\"}\n                                {performanceData.change24h.toFixed(1)}%\n                              </GridPerformanceChange>\n                            </GridVolumeDisplay>\n                            \n                            <GridMiniChart>\n                              <UserChart userId={user.id} color={theme.accent1} />\n                            </GridMiniChart>\n                          </GridUserStats>\n                        </GridUserCard>\n                      )}\n                    </UserPerformanceData>\n                  );\n                })\n              )}\n            </GridContainer>\n          )}\n        </MainContent>\n      </Container>\n    </PageWrapper>\n  );\n}"],"names":["SUBGRAPH_URL","TOP_USERS_QUERY","USER_DETAILS_QUERY","USER_HISTORICAL_DATA_QUERY","useUserHistoricalData","userId","days","arguments","length","undefined","data","setData","useState","loading","setLoading","error","setError","useEffect","async","historicalData","first","orderDirection","_data$data4","response","fetch","method","headers","body","JSON","stringify","query","variables","toLowerCase","ok","Error","status","json","errors","userDayDatas","console","fetchUserHistoricalData","err","message","loadData","useLeaderboard","pageSize","users","setUsers","hasMore","setHasMore","page","setPage","loadMore","skip","newUsers","_data$data","map","user","index","rank","fetchLeaderboard","prev","refresh","useUserProfile","userAddress","account","useWeb3React","setUser","targetAddress","userDetails","_data$data2","_rankData$data","_rankData$data$users","rankResponse","score","fetchUserDetails","loadUser","isOwnProfile","fadeIn","keyframes","PageWrapper","styled","SwapPageWrapper","_ref","theme","background","Container","div","Sidebar","_ref2","surface1","SidebarContent","SectionHeader","SectionTitle","ThemedText","SubHeader","_ref3","neutral1","ControlsSection","ViewModeToggle","_ref4","surface2","_ref5","surface3","ViewModeButton","button","_ref6","$active","accent1","_ref7","neutral2","_ref8","FilterSection","FilterLabel","LabelMicro","_ref9","FilterSlider","input","_ref10","_ref11","_ref12","FilterValue","BodySmall","_ref13","UserList","UserItem","Link","_ref14","_ref15","_ref16","RankPosition","_ref17","$rank","_ref18","accent2","_ref19","_ref20","toString","UserMainInfo","PerformanceStats","SidebarVolumeAmount","_ref21","PerformanceChange","_ref22","$positive","success","critical","_ref23","WalletIcon","_ref24","_ref25","UserDetails","WalletAddress","_ref26","VolumeText","_ref27","MainContent","Header","HeaderLeft","ContestTitle","HeadlineMedium","_ref28","ContestDescription","BodyPrimary","_ref29","HeaderContent","TreeMapContainer","_ref30","GridContainer","GridUserCard","_ref31","_ref32","_ref33","_ref34","_ref35","GridUserHeader","GridUserInfo","GridUserStats","GridVolumeDisplay","GridVolumeAmount","_ref36","GridPerformanceChange","_ref37","_ref38","GridMiniChart","TreeMapWrapper","_ref39","$dynamicHeight","_ref40","_ref41","_ref42","Math","min","calculateTreemapHeight","walletCount","calculatedHeight","max","TreemapNode","_ref43","$x","_ref44","$y","_ref45","$width","_ref46","$height","_ref47","_ref48","_ref49","$showDetails","_ref50","_ref51","_ref52","NodeHeader","_ref53","$compact","_ref54","_ref55","_ref56","WalletInfo","_ref57","_ref58","WalletAvatar","_ref59","$size","_ref60","_ref61","_ref62","_ref63","WalletDetails","_ref64","WalletAddressStyled","_ref65","_ref66","$fontSize","RankBadge","_ref67","_ref68","_ref69","_ref70","_ref71","_ref72","_ref73","_ref74","VolumeDisplay","_ref75","$show","VolumeAmount","_ref76","_ref77","MiniChart","_ref78","$visible","UserChart","_ref79","color","chartData","useMemo","now","Date","last7Days","i","date","setDate","getDate","setUTCHours","push","floor","getTime","timestamp","value","volume","dataMap","Map","forEach","d","dayTimestamp","set","parseFloat","dailyVolumeUSD","cumulativeVolume","last7DaysData","dailyVolume","get","maxCumulativeVolume","day","normalizedY","hexColor","colorString","startsWith","match","parseInt","padStart","getHexColor","_jsx","style","width","height","children","ResponsiveContainer","_jsxs","LineChart","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","stdDeviation","result","in","Line","type","dataKey","stroke","strokeWidth","dot","activeDot","r","fill","filter","TreemapComponent","_ref80","totalVolume","connection","maxUsers","useTheme","treemapData","slice","totalVolumeUSD","originalValue","percentage","toFixed","v","normalizedData","normalizedValue","log","root","d3","sum","sort","a","b","size","padding","paddingInner","paddingOuter","round","treemap","leaves","nodeWidth","x0","nodeHeight","y0","showFullDetails","showMinimalDetails","x","y","formatUserAddress","address","position","node","isCompact","avatarSize","fontSize","volumeFontSize","rankBadgeSize","$volume","as","to","StatusIcon","showMiniIcons","UserPerformanceData","_ref81","currentVolume","_ref82","_sortedData$","change24h","change7d","sortedDataByDate","sortedData","currentTotalVolume","yesterdayTotalVolume","weekAgoTotalVolume","dailyGrowthRate","pow","formatVolume","calculatePercentage","userVolume","Leaderboard","connector","viewMode","setViewMode","setMaxUsers","containerRef","useRef","containerDimensions","setContainerDimensions","getConnection","allTimeUsers","allTimeLoading","allTimeError","availableUsersCount","updateDimensions","current","clientWidth","clientHeight","handleResize","window","addEventListener","removeEventListener","currentUsers","isLoading","topUsers","reduce","sidebarUsers","rawVolume","dynamicHeight","BarChart","MouseoverTooltip","text","placement","Info","cursor","onClick","Grid","List","onChange","e","target","disabled","trader","performanceData","TrendingUp","ref","display","alignItems","justifyContent","fontWeight","gap","borderRadius","backdropFilter","border","borderTop","animation","gridColumn","textAlign"],"sourceRoot":""}